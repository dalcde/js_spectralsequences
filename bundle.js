(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
(function (global){
"use strict";function compare(e,t){if(e===t)return 0;for(var r=e.length,n=t.length,i=0,a=Math.min(r,n);i<a;++i)if(e[i]!==t[i]){r=e[i],n=t[i];break}return r<n?-1:n<r?1:0}function isBuffer(e){return global.Buffer&&"function"==typeof global.Buffer.isBuffer?global.Buffer.isBuffer(e):!(null==e||!e._isBuffer)}var util=require("util/"),hasOwn=Object.prototype.hasOwnProperty,pSlice=Array.prototype.slice,functionsHaveNames="foo"===function(){}.name;function pToString(e){return Object.prototype.toString.call(e)}function isView(e){return!isBuffer(e)&&("function"==typeof global.ArrayBuffer&&("function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(e):!!e&&(e instanceof DataView||!!(e.buffer&&e.buffer instanceof ArrayBuffer))))}var assert=module.exports=ok,regex=/\s*function\s+([^\(\s]*)\s*/;function getName(e){if(util.isFunction(e)){if(functionsHaveNames)return e.name;var t=e.toString().match(regex);return t&&t[1]}}function truncate(e,t){return"string"==typeof e?e.length<t?e:e.slice(0,t):e}function inspect(e){if(functionsHaveNames||!util.isFunction(e))return util.inspect(e);var t=getName(e);return"[Function"+(t?": "+t:"")+"]"}function getMessage(e){return truncate(inspect(e.actual),128)+" "+e.operator+" "+truncate(inspect(e.expected),128)}function fail(e,t,r,n,i){throw new assert.AssertionError({message:r,actual:e,expected:t,operator:n,stackStartFunction:i})}function ok(e,t){e||fail(e,!0,t,"==",assert.ok)}function _deepEqual(e,t,r,n){if(e===t)return!0;if(isBuffer(e)&&isBuffer(t))return 0===compare(e,t);if(util.isDate(e)&&util.isDate(t))return e.getTime()===t.getTime();if(util.isRegExp(e)&&util.isRegExp(t))return e.source===t.source&&e.global===t.global&&e.multiline===t.multiline&&e.lastIndex===t.lastIndex&&e.ignoreCase===t.ignoreCase;if(null!==e&&"object"==typeof e||null!==t&&"object"==typeof t){if(isView(e)&&isView(t)&&pToString(e)===pToString(t)&&!(e instanceof Float32Array||e instanceof Float64Array))return 0===compare(new Uint8Array(e.buffer),new Uint8Array(t.buffer));if(isBuffer(e)!==isBuffer(t))return!1;var i=(n=n||{actual:[],expected:[]}).actual.indexOf(e);return-1!==i&&i===n.expected.indexOf(t)||(n.actual.push(e),n.expected.push(t),objEquiv(e,t,r,n))}return r?e===t:e==t}function isArguments(e){return"[object Arguments]"==Object.prototype.toString.call(e)}function objEquiv(e,t,r,n){if(null===e||void 0===e||null===t||void 0===t)return!1;if(util.isPrimitive(e)||util.isPrimitive(t))return e===t;if(r&&Object.getPrototypeOf(e)!==Object.getPrototypeOf(t))return!1;var i=isArguments(e),a=isArguments(t);if(i&&!a||!i&&a)return!1;if(i)return _deepEqual(e=pSlice.call(e),t=pSlice.call(t),r);var s,o,u=objectKeys(e),f=objectKeys(t);if(u.length!==f.length)return!1;for(u.sort(),f.sort(),o=u.length-1;o>=0;o--)if(u[o]!==f[o])return!1;for(o=u.length-1;o>=0;o--)if(!_deepEqual(e[s=u[o]],t[s],r,n))return!1;return!0}function notDeepStrictEqual(e,t,r){_deepEqual(e,t,!0)&&fail(e,t,r,"notDeepStrictEqual",notDeepStrictEqual)}function expectedException(e,t){if(!e||!t)return!1;if("[object RegExp]"==Object.prototype.toString.call(t))return t.test(e);try{if(e instanceof t)return!0}catch(e){}return!Error.isPrototypeOf(t)&&!0===t.call({},e)}function _tryBlock(e){var t;try{e()}catch(e){t=e}return t}function _throws(e,t,r,n){var i;if("function"!=typeof t)throw new TypeError('"block" argument must be a function');"string"==typeof r&&(n=r,r=null),i=_tryBlock(t),n=(r&&r.name?" ("+r.name+").":".")+(n?" "+n:"."),e&&!i&&fail(i,r,"Missing expected exception"+n);var a="string"==typeof n,s=!e&&util.isError(i),o=!e&&i&&!r;if((s&&a&&expectedException(i,r)||o)&&fail(i,r,"Got unwanted exception"+n),e&&i&&r&&!expectedException(i,r)||!e&&i)throw i}assert.AssertionError=function(e){this.name="AssertionError",this.actual=e.actual,this.expected=e.expected,this.operator=e.operator,e.message?(this.message=e.message,this.generatedMessage=!1):(this.message=getMessage(this),this.generatedMessage=!0);var t=e.stackStartFunction||fail;if(Error.captureStackTrace)Error.captureStackTrace(this,t);else{var r=new Error;if(r.stack){var n=r.stack,i=getName(t),a=n.indexOf("\n"+i);if(a>=0){var s=n.indexOf("\n",a+1);n=n.substring(s+1)}this.stack=n}}},util.inherits(assert.AssertionError,Error),assert.fail=fail,assert.ok=ok,assert.equal=function(e,t,r){e!=t&&fail(e,t,r,"==",assert.equal)},assert.notEqual=function(e,t,r){e==t&&fail(e,t,r,"!=",assert.notEqual)},assert.deepEqual=function(e,t,r){_deepEqual(e,t,!1)||fail(e,t,r,"deepEqual",assert.deepEqual)},assert.deepStrictEqual=function(e,t,r){_deepEqual(e,t,!0)||fail(e,t,r,"deepStrictEqual",assert.deepStrictEqual)},assert.notDeepEqual=function(e,t,r){_deepEqual(e,t,!1)&&fail(e,t,r,"notDeepEqual",assert.notDeepEqual)},assert.notDeepStrictEqual=notDeepStrictEqual,assert.strictEqual=function(e,t,r){e!==t&&fail(e,t,r,"===",assert.strictEqual)},assert.notStrictEqual=function(e,t,r){e===t&&fail(e,t,r,"!==",assert.notStrictEqual)},assert.throws=function(e,t,r){_throws(!0,e,t,r)},assert.doesNotThrow=function(e,t,r){_throws(!1,e,t,r)},assert.ifError=function(e){if(e)throw e};var objectKeys=Object.keys||function(e){var t=[];for(var r in e)hasOwn.call(e,r)&&t.push(r);return t};

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"util/":4}],2:[function(require,module,exports){
"function"==typeof Object.create?module.exports=function(t,e){t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}})}:module.exports=function(t,e){t.super_=e;var o=function(){};o.prototype=e.prototype,t.prototype=new o,t.prototype.constructor=t};

},{}],3:[function(require,module,exports){
module.exports=function(o){return o&&"object"==typeof o&&"function"==typeof o.copy&&"function"==typeof o.fill&&"function"==typeof o.readUInt8};

},{}],4:[function(require,module,exports){
(function (process,global){
var formatRegExp=/%[sdj%]/g;exports.format=function(e){if(!isString(e)){for(var r=[],t=0;t<arguments.length;t++)r.push(inspect(arguments[t]));return r.join(" ")}t=1;for(var n=arguments,i=n.length,o=String(e).replace(formatRegExp,function(e){if("%%"===e)return"%";if(t>=i)return e;switch(e){case"%s":return String(n[t++]);case"%d":return Number(n[t++]);case"%j":try{return JSON.stringify(n[t++])}catch(e){return"[Circular]"}default:return e}}),s=n[t];t<i;s=n[++t])isNull(s)||!isObject(s)?o+=" "+s:o+=" "+inspect(s);return o},exports.deprecate=function(e,r){if(isUndefined(global.process))return function(){return exports.deprecate(e,r).apply(this,arguments)};if(!0===process.noDeprecation)return e;var t=!1;return function(){if(!t){if(process.throwDeprecation)throw new Error(r);process.traceDeprecation?console.trace(r):console.error(r),t=!0}return e.apply(this,arguments)}};var debugEnviron,debugs={};function inspect(e,r){var t={seen:[],stylize:stylizeNoColor};return arguments.length>=3&&(t.depth=arguments[2]),arguments.length>=4&&(t.colors=arguments[3]),isBoolean(r)?t.showHidden=r:r&&exports._extend(t,r),isUndefined(t.showHidden)&&(t.showHidden=!1),isUndefined(t.depth)&&(t.depth=2),isUndefined(t.colors)&&(t.colors=!1),isUndefined(t.customInspect)&&(t.customInspect=!0),t.colors&&(t.stylize=stylizeWithColor),formatValue(t,e,t.depth)}function stylizeWithColor(e,r){var t=inspect.styles[r];return t?"["+inspect.colors[t][0]+"m"+e+"["+inspect.colors[t][1]+"m":e}function stylizeNoColor(e,r){return e}function arrayToHash(e){var r={};return e.forEach(function(e,t){r[e]=!0}),r}function formatValue(e,r,t){if(e.customInspect&&r&&isFunction(r.inspect)&&r.inspect!==exports.inspect&&(!r.constructor||r.constructor.prototype!==r)){var n=r.inspect(t,e);return isString(n)||(n=formatValue(e,n,t)),n}var i=formatPrimitive(e,r);if(i)return i;var o=Object.keys(r),s=arrayToHash(o);if(e.showHidden&&(o=Object.getOwnPropertyNames(r)),isError(r)&&(o.indexOf("message")>=0||o.indexOf("description")>=0))return formatError(r);if(0===o.length){if(isFunction(r)){var u=r.name?": "+r.name:"";return e.stylize("[Function"+u+"]","special")}if(isRegExp(r))return e.stylize(RegExp.prototype.toString.call(r),"regexp");if(isDate(r))return e.stylize(Date.prototype.toString.call(r),"date");if(isError(r))return formatError(r)}var c,a="",l=!1,p=["{","}"];(isArray(r)&&(l=!0,p=["[","]"]),isFunction(r))&&(a=" [Function"+(r.name?": "+r.name:"")+"]");return isRegExp(r)&&(a=" "+RegExp.prototype.toString.call(r)),isDate(r)&&(a=" "+Date.prototype.toUTCString.call(r)),isError(r)&&(a=" "+formatError(r)),0!==o.length||l&&0!=r.length?t<0?isRegExp(r)?e.stylize(RegExp.prototype.toString.call(r),"regexp"):e.stylize("[Object]","special"):(e.seen.push(r),c=l?formatArray(e,r,t,s,o):o.map(function(n){return formatProperty(e,r,t,s,n,l)}),e.seen.pop(),reduceToSingleString(c,a,p)):p[0]+a+p[1]}function formatPrimitive(e,r){if(isUndefined(r))return e.stylize("undefined","undefined");if(isString(r)){var t="'"+JSON.stringify(r).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(t,"string")}return isNumber(r)?e.stylize(""+r,"number"):isBoolean(r)?e.stylize(""+r,"boolean"):isNull(r)?e.stylize("null","null"):void 0}function formatError(e){return"["+Error.prototype.toString.call(e)+"]"}function formatArray(e,r,t,n,i){for(var o=[],s=0,u=r.length;s<u;++s)hasOwnProperty(r,String(s))?o.push(formatProperty(e,r,t,n,String(s),!0)):o.push("");return i.forEach(function(i){i.match(/^\d+$/)||o.push(formatProperty(e,r,t,n,i,!0))}),o}function formatProperty(e,r,t,n,i,o){var s,u,c;if((c=Object.getOwnPropertyDescriptor(r,i)||{value:r[i]}).get?u=c.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):c.set&&(u=e.stylize("[Setter]","special")),hasOwnProperty(n,i)||(s="["+i+"]"),u||(e.seen.indexOf(c.value)<0?(u=isNull(t)?formatValue(e,c.value,null):formatValue(e,c.value,t-1)).indexOf("\n")>-1&&(u=o?u.split("\n").map(function(e){return"  "+e}).join("\n").substr(2):"\n"+u.split("\n").map(function(e){return"   "+e}).join("\n")):u=e.stylize("[Circular]","special")),isUndefined(s)){if(o&&i.match(/^\d+$/))return u;(s=JSON.stringify(""+i)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(s=s.substr(1,s.length-2),s=e.stylize(s,"name")):(s=s.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),s=e.stylize(s,"string"))}return s+": "+u}function reduceToSingleString(e,r,t){return e.reduce(function(e,r){return 0,r.indexOf("\n")>=0&&0,e+r.replace(/\u001b\[\d\d?m/g,"").length+1},0)>60?t[0]+(""===r?"":r+"\n ")+" "+e.join(",\n  ")+" "+t[1]:t[0]+r+" "+e.join(", ")+" "+t[1]}function isArray(e){return Array.isArray(e)}function isBoolean(e){return"boolean"==typeof e}function isNull(e){return null===e}function isNullOrUndefined(e){return null==e}function isNumber(e){return"number"==typeof e}function isString(e){return"string"==typeof e}function isSymbol(e){return"symbol"==typeof e}function isUndefined(e){return void 0===e}function isRegExp(e){return isObject(e)&&"[object RegExp]"===objectToString(e)}function isObject(e){return"object"==typeof e&&null!==e}function isDate(e){return isObject(e)&&"[object Date]"===objectToString(e)}function isError(e){return isObject(e)&&("[object Error]"===objectToString(e)||e instanceof Error)}function isFunction(e){return"function"==typeof e}function isPrimitive(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"==typeof e||void 0===e}function objectToString(e){return Object.prototype.toString.call(e)}function pad(e){return e<10?"0"+e.toString(10):e.toString(10)}exports.debuglog=function(e){if(isUndefined(debugEnviron)&&(debugEnviron=process.env.NODE_DEBUG||""),e=e.toUpperCase(),!debugs[e])if(new RegExp("\\b"+e+"\\b","i").test(debugEnviron)){var r=process.pid;debugs[e]=function(){var t=exports.format.apply(exports,arguments);console.error("%s %d: %s",e,r,t)}}else debugs[e]=function(){};return debugs[e]},exports.inspect=inspect,inspect.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},inspect.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},exports.isArray=isArray,exports.isBoolean=isBoolean,exports.isNull=isNull,exports.isNullOrUndefined=isNullOrUndefined,exports.isNumber=isNumber,exports.isString=isString,exports.isSymbol=isSymbol,exports.isUndefined=isUndefined,exports.isRegExp=isRegExp,exports.isObject=isObject,exports.isDate=isDate,exports.isError=isError,exports.isFunction=isFunction,exports.isPrimitive=isPrimitive,exports.isBuffer=require("./support/isBuffer");var months=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function timestamp(){var e=new Date,r=[pad(e.getHours()),pad(e.getMinutes()),pad(e.getSeconds())].join(":");return[e.getDate(),months[e.getMonth()],r].join(" ")}function hasOwnProperty(e,r){return Object.prototype.hasOwnProperty.call(e,r)}exports.log=function(){console.log("%s - %s",timestamp(),exports.format.apply(exports,arguments))},exports.inherits=require("inherits"),exports._extend=function(e,r){if(!r||!isObject(r))return e;for(var t=Object.keys(r),n=t.length;n--;)e[t[n]]=r[t[n]];return e};

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./support/isBuffer":3,"_process":7,"inherits":2}],5:[function(require,module,exports){
var Flatted=function(t,n){return{parse:function(n){var e=JSON.parse(n,u).map(r),i=e[0];return"object"==typeof i&&i?function n(e,r,u){return Object.keys(u).reduce(function(u,i){var o=u[i];if(o instanceof t){var f=e[o];"object"!=typeof f||r.has(f)?u[i]=f:(r.add(f),u[i]=n(e,r,f))}return u},u)}(e,new Set,i):i},stringify:function(t){for(var r,u=new Map,i=[],o=[],f=+e(u,i,t),c=function(t,o){if(r)return r=!r,o;switch(typeof o){case"object":if(null===o)return o;case n:return u.get(o)||e(u,i,o)}return o};f<i.length;f++)r=!0,o[f]=JSON.stringify(i[f],c);return"["+o.join(",")+"]"}};function e(n,e,r){var u=t(e.push(r)-1);return n.set(r,u),u}function r(n){return n instanceof t?t(n):n}function u(e,r){return typeof r===n?new t(r):r}}(String,"string");module.exports=Flatted;

},{}],6:[function(require,module,exports){
(function (global){
!function(){"use strict";var t=Math.PI/180,e={version:"2.1.3",stages:[],idCounter:0,ids:{},names:{},shapes:{},listenClickTap:!1,inDblClickWindow:!1,isBrowser:"undefined"!=typeof window&&("[object Window]"==={}.toString.call(window)||"[object global]"==={}.toString.call(window)),enableTrace:!1,traceArrMax:100,dblClickWindow:400,pixelRatio:void 0,dragDistance:3,angleDeg:!0,showWarnings:!0,Filters:{},isDragging:function(){var t=e.DD;return!!t&&t.isDragging},isDragReady:function(){var t=e.DD;return!!t&&!!t.node},_addId:function(t,e){void 0!==e&&(this.ids[e]=t)},_removeId:function(t){void 0!==t&&delete this.ids[t]},_addName:function(t,e){e&&(this.names[e]||(this.names[e]=[]),this.names[e].push(t))},_removeName:function(t,e){if(t){var n=this.names[t];if(n){for(var i=0;i<n.length;i++){n[i]._id===e&&n.splice(i,1)}0===n.length&&delete this.names[t]}}},getAngle:function(e){return this.angleDeg?e*t:e},_detectIE:function(t){var e=t.indexOf("msie ");if(e>0)return parseInt(t.substring(e+5,t.indexOf(".",e)),10);if(t.indexOf("trident/")>0){var n=t.indexOf("rv:");return parseInt(t.substring(n+3,t.indexOf(".",n)),10)}var i=t.indexOf("edge/");return i>0&&parseInt(t.substring(i+5,t.indexOf(".",i)),10)},_parseUA:function(t){var n=t.toLowerCase(),i=/(chrome)[ /]([\w.]+)/.exec(n)||/(webkit)[ /]([\w.]+)/.exec(n)||/(opera)(?:.*version|)[ /]([\w.]+)/.exec(n)||/(msie) ([\w.]+)/.exec(n)||n.indexOf("compatible")<0&&/(mozilla)(?:.*? rv:([\w.]+)|)/.exec(n)||[],a=!!t.match(/Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile/i),r=!!t.match(/IEMobile/i);return{browser:i[1]||"",version:i[2]||"0",isIE:e._detectIE(n),mobile:a,ieMobile:r}},UA:void 0},n="undefined"!=typeof global?global:"undefined"!=typeof window?window:"undefined"!=typeof WorkerGlobalScope?self:{};e.UA=e._parseUA(n.navigator&&n.navigator.userAgent||""),n.Konva&&console.error("Konva instance is already exist in current eviroment. Please use only one instance."),n.Konva=e,e.global=n,e.window=n,e.document=n.document,"object"==typeof exports?module.exports=e:"function"==typeof define&&define.amd&&define(function(){return e})}(),function(){"use strict";Konva.Collection=function(){var t=[].slice.call(arguments),e=t.length,n=0;for(this.length=e;n<e;n++)this[n]=t[n];return this},Konva.Collection.prototype=[],Konva.Collection.prototype.each=function(t){for(var e=0;e<this.length;e++)t(this[e],e)},Konva.Collection.prototype.toArray=function(){var t,e=[],n=this.length;for(t=0;t<n;t++)e.push(this[t]);return e},Konva.Collection.toCollection=function(t){var e,n=new Konva.Collection,i=t.length;for(e=0;e<i;e++)n.push(t[e]);return n},Konva.Collection._mapMethod=function(t){Konva.Collection.prototype[t]=function(){var e,n=this.length,i=[].slice.call(arguments);for(e=0;e<n;e++)this[e][t].apply(this[e],i);return this}},Konva.Collection.mapMethods=function(t){var e=t.prototype;for(var n in e)Konva.Collection._mapMethod(n)},Konva.Transform=function(t){this.m=t&&t.slice()||[1,0,0,1,0,0]},Konva.Transform.prototype={copy:function(){return new Konva.Transform(this.m)},point:function(t){var e=this.m;return{x:e[0]*t.x+e[2]*t.y+e[4],y:e[1]*t.x+e[3]*t.y+e[5]}},translate:function(t,e){return this.m[4]+=this.m[0]*t+this.m[2]*e,this.m[5]+=this.m[1]*t+this.m[3]*e,this},scale:function(t,e){return this.m[0]*=t,this.m[1]*=t,this.m[2]*=e,this.m[3]*=e,this},rotate:function(t){var e=Math.cos(t),n=Math.sin(t),i=this.m[0]*e+this.m[2]*n,a=this.m[1]*e+this.m[3]*n,r=this.m[0]*-n+this.m[2]*e,o=this.m[1]*-n+this.m[3]*e;return this.m[0]=i,this.m[1]=a,this.m[2]=r,this.m[3]=o,this},getTranslation:function(){return{x:this.m[4],y:this.m[5]}},skew:function(t,e){var n=this.m[0]+this.m[2]*e,i=this.m[1]+this.m[3]*e,a=this.m[2]+this.m[0]*t,r=this.m[3]+this.m[1]*t;return this.m[0]=n,this.m[1]=i,this.m[2]=a,this.m[3]=r,this},multiply:function(t){var e=this.m[0]*t.m[0]+this.m[2]*t.m[1],n=this.m[1]*t.m[0]+this.m[3]*t.m[1],i=this.m[0]*t.m[2]+this.m[2]*t.m[3],a=this.m[1]*t.m[2]+this.m[3]*t.m[3],r=this.m[0]*t.m[4]+this.m[2]*t.m[5]+this.m[4],o=this.m[1]*t.m[4]+this.m[3]*t.m[5]+this.m[5];return this.m[0]=e,this.m[1]=n,this.m[2]=i,this.m[3]=a,this.m[4]=r,this.m[5]=o,this},invert:function(){var t=1/(this.m[0]*this.m[3]-this.m[1]*this.m[2]),e=this.m[3]*t,n=-this.m[1]*t,i=-this.m[2]*t,a=this.m[0]*t,r=t*(this.m[2]*this.m[5]-this.m[3]*this.m[4]),o=t*(this.m[1]*this.m[4]-this.m[0]*this.m[5]);return this.m[0]=e,this.m[1]=n,this.m[2]=i,this.m[3]=a,this.m[4]=r,this.m[5]=o,this},getMatrix:function(){return this.m},setAbsolutePosition:function(t,e){var n=this.m[0],i=this.m[1],a=this.m[2],r=this.m[3],o=this.m[4],s=(n*(e-this.m[5])-i*(t-o))/(n*r-i*a),h=(t-o-a*s)/n;return this.translate(h,s)}};var t=Math.PI/180,e=180/Math.PI,n={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,132,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,255,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,203],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[119,128,144],slategrey:[119,128,144],snow:[255,255,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],transparent:[255,255,255,0],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,5]},i=/rgb\((\d{1,3}),(\d{1,3}),(\d{1,3})\)/;Konva.Util={_isElement:function(t){return!(!t||1!=t.nodeType)},_isFunction:function(t){return!!(t&&t.constructor&&t.call&&t.apply)},_isObject:function(t){return!!t&&t.constructor===Object},_isArray:function(t){return"[object Array]"===Object.prototype.toString.call(t)},_isNumber:function(t){return"[object Number]"===Object.prototype.toString.call(t)},_isString:function(t){return"[object String]"===Object.prototype.toString.call(t)},isObject:function(t){return t instanceof Object},isValidSelector:function(t){if("string"!=typeof t)return!1;var e=t[0];return"#"===e||"."===e||e===e.toUpperCase()},_sign:function(t){return 0===t?0:t>0?1:-1},createCanvasElement:function(){var t=Konva.isBrowser?Konva.document.createElement("canvas"):new Konva._nodeCanvas;try{t.style=t.style||{}}catch(t){}return t},_isInDocument:function(t){for(;t=t.parentNode;)if(t==Konva.document)return!0;return!1},_simplifyArray:function(t){var e,n,i=[],a=t.length,r=Konva.Util;for(e=0;e<a;e++)n=t[e],r._isNumber(n)?n=Math.round(1e3*n)/1e3:r._isString(n)||(n=n.toString()),i.push(n);return i},_getImage:function(t,e){var n,i;if(t)if(this._isElement(t))e(t);else if(this._isString(t))(n=new Konva.window.Image).onload=function(){e(n)},n.src=t;else if(t.data){(i=Konva.Util.createCanvasElement()).width=t.width,i.height=t.height,i.getContext("2d").putImageData(t,0,0),this._getImage(i.toDataURL(),e)}else e(null);else e(null)},_getRGBAString:function(t){return["rgba(",t.red||0,",",t.green||0,",",t.blue||0,",",t.alpha||1,")"].join("")},_rgbToHex:function(t,e,n){return((1<<24)+(t<<16)+(e<<8)+n).toString(16).slice(1)},_hexToRgb:function(t){t=t.replace("#","");var e=parseInt(t,16);return{r:e>>16&255,g:e>>8&255,b:255&e}},getRandomColor:function(){for(var t=(16777215*Math.random()<<0).toString(16);t.length<6;)t="0"+t;return"#"+t},get:function(t,e){return void 0===t?e:t},getRGB:function(t){var e;return t in n?{r:(e=n[t])[0],g:e[1],b:e[2]}:"#"===t[0]?this._hexToRgb(t.substring(1)):"rgb("===t.substr(0,4)?(e=i.exec(t.replace(/ /g,"")),{r:parseInt(e[1],10),g:parseInt(e[2],10),b:parseInt(e[3],10)}):{r:0,g:0,b:0}},colorToRGBA:function(t){return t=t||"black",Konva.Util._namedColorToRBA(t)||Konva.Util._hex3ColorToRGBA(t)||Konva.Util._hex6ColorToRGBA(t)||Konva.Util._rgbColorToRGBA(t)||Konva.Util._rgbaColorToRGBA(t)},_namedColorToRBA:function(t){var e=n[t.toLowerCase()];return e?{r:e[0],g:e[1],b:e[2],a:1}:null},_rgbColorToRGBA:function(t){if(0===t.indexOf("rgb(")){var e=(t=t.match(/rgb\(([^)]+)\)/)[1]).split(/ *, */).map(Number);return{r:e[0],g:e[1],b:e[2],a:1}}},_rgbaColorToRGBA:function(t){if(0===t.indexOf("rgba(")){var e=(t=t.match(/rgba\(([^)]+)\)/)[1]).split(/ *, */).map(Number);return{r:e[0],g:e[1],b:e[2],a:e[3]}}},_hex6ColorToRGBA:function(t){if("#"===t[0]&&7===t.length)return{r:parseInt(t.slice(1,3),16),g:parseInt(t.slice(3,5),16),b:parseInt(t.slice(5,7),16),a:1}},_hex3ColorToRGBA:function(t){if("#"===t[0]&&4===t.length)return{r:parseInt(t[1]+t[1],16),g:parseInt(t[2]+t[2],16),b:parseInt(t[3]+t[3],16),a:1}},_merge:function(t,e){var n=this._clone(e);for(var i in t)this._isObject(t[i])?n[i]=this._merge(t[i],n[i]):n[i]=t[i];return n},haveIntersection:function(t,e){return!(e.x>t.x+t.width||e.x+e.width<t.x||e.y>t.y+t.height||e.y+e.height<t.y)},cloneObject:function(t){var e={};for(var n in t)this._isObject(t[n])?e[n]=this.cloneObject(t[n]):this._isArray(t[n])?e[n]=this.cloneArray(t[n]):e[n]=t[n];return e},cloneArray:function(t){return t.slice(0)},_degToRad:function(e){return e*t},_radToDeg:function(t){return t*e},_capitalize:function(t){return t.charAt(0).toUpperCase()+t.slice(1)},throw:function(t){throw new Error("Konva error: "+t)},error:function(t){console.error("Konva error: "+t)},warn:function(t){Konva.global.console&&console.warn&&Konva.showWarnings&&console.warn("Konva warning: "+t)},extend:function(t,e){function n(){this.constructor=t}n.prototype=e.prototype;var i=t.prototype;for(var a in t.prototype=new n,i)i.hasOwnProperty(a)&&(t.prototype[a]=i[a]);t.__super__=e.prototype,t.super=e},addMethods:function(t,e){var n;for(n in e)t.prototype[n]=e[n]},_getControlPoints:function(t,e,n,i,a,r,o){var s=Math.sqrt(Math.pow(n-t,2)+Math.pow(i-e,2)),h=Math.sqrt(Math.pow(a-n,2)+Math.pow(r-i,2)),c=o*s/(s+h),l=o*h/(s+h);return[n-c*(a-t),i-c*(r-e),n+l*(a-t),i+l*(r-e)]},_expandPoints:function(t,e){var n,i,a=t.length,r=[];for(n=2;n<a-2;n+=2)i=Konva.Util._getControlPoints(t[n-2],t[n-1],t[n],t[n+1],t[n+2],t[n+3],e),r.push(i[0]),r.push(i[1]),r.push(t[n]),r.push(t[n+1]),r.push(i[2]),r.push(i[3]);return r},_removeLastLetter:function(t){return t.substring(0,t.length-1)},each:function(t,e){for(var n in t)e(n,t[n])},_inRange:function(t,e,n){return e<=t&&t<n},_getProjectionToSegment:function(t,e,n,i,a,r){var o,s,h,c=(t-n)*(t-n)+(e-i)*(e-i);if(0==c)o=t,s=e,h=(a-n)*(a-n)+(r-i)*(r-i);else{var l=((a-t)*(n-t)+(r-e)*(i-e))/c;l<0?(o=t,s=e,h=(t-a)*(t-a)+(e-r)*(e-r)):l>1?(o=n,s=i,h=(n-a)*(n-a)+(i-r)*(i-r)):h=((o=t+l*(n-t))-a)*(o-a)+((s=e+l*(i-e))-r)*(s-r)}return[o,s,h]},_getProjectionToLine:function(t,e,n){var i=Konva.Util.cloneObject(t),a=Number.MAX_VALUE;return e.forEach(function(r,o){if(n||o!==e.length-1){var s=e[(o+1)%e.length],h=Konva.Util._getProjectionToSegment(r.x,r.y,s.x,s.y,t.x,t.y),c=h[0],l=h[1],d=h[2];d<a&&(i.x=c,i.y=l,a=d)}}),i},_prepareArrayForTween:function(t,e,n){var i,a=[],r=[];if(t.length>e.length){var o=e;e=t,t=o}for(i=0;i<t.length;i+=2)a.push({x:t[i],y:t[i+1]});for(i=0;i<e.length;i+=2)r.push({x:e[i],y:e[i+1]});var s=[];return r.forEach(function(t){var e=Konva.Util._getProjectionToLine(t,a,n);s.push(e.x),s.push(e.y)}),s},_prepareToStringify:function(t){var e;for(var n in t.visitedByCircularReferenceRemoval=!0,t)if(t.hasOwnProperty(n)&&t[n]&&"object"==typeof t[n])if(e=Object.getOwnPropertyDescriptor(t,n),t[n].visitedByCircularReferenceRemoval||Konva.Util._isElement(t[n])){if(!e.configurable)return null;delete t[n]}else if(null===Konva.Util._prepareToStringify(t[n])){if(!e.configurable)return null;delete t[n]}return delete t.visitedByCircularReferenceRemoval,t}}}(),function(){"use strict";var t;Konva.Canvas=function(t){this.init(t)},Konva.Canvas.prototype={init:function(e){var n=(e||{}).pixelRatio||Konva.pixelRatio||function(){if(t)return t;var e=Konva.Util.createCanvasElement().getContext("2d");return t=(Konva.window.devicePixelRatio||1)/(e.webkitBackingStorePixelRatio||e.mozBackingStorePixelRatio||e.msBackingStorePixelRatio||e.oBackingStorePixelRatio||e.backingStorePixelRatio||1)}();this.pixelRatio=n,this._canvas=Konva.Util.createCanvasElement(),this._canvas.style.padding=0,this._canvas.style.margin=0,this._canvas.style.border=0,this._canvas.style.background="transparent",this._canvas.style.position="absolute",this._canvas.style.top=0,this._canvas.style.left=0},getContext:function(){return this.context},getPixelRatio:function(){return this.pixelRatio},setPixelRatio:function(t){var e=this.pixelRatio;this.pixelRatio=t,this.setSize(this.getWidth()/e,this.getHeight()/e)},setWidth:function(t){this.width=this._canvas.width=t*this.pixelRatio,this._canvas.style.width=t+"px";var e=this.pixelRatio;this.getContext()._context.scale(e,e)},setHeight:function(t){this.height=this._canvas.height=t*this.pixelRatio,this._canvas.style.height=t+"px";var e=this.pixelRatio;this.getContext()._context.scale(e,e)},getWidth:function(){return this.width},getHeight:function(){return this.height},setSize:function(t,e){this.setWidth(t),this.setHeight(e)},toDataURL:function(t,e){try{return this._canvas.toDataURL(t,e)}catch(t){try{return this._canvas.toDataURL()}catch(t){return Konva.Util.warn("Unable to get data URL. "+t.message),""}}}},Konva.SceneCanvas=function(t){var e=t||{},n=e.width||0,i=e.height||0;Konva.Canvas.call(this,e),this.context=new Konva.SceneContext(this),this.setSize(n,i)},Konva.Util.extend(Konva.SceneCanvas,Konva.Canvas),Konva.HitCanvas=function(t){var e=t||{},n=e.width||0,i=e.height||0;Konva.Canvas.call(this,e),this.context=new Konva.HitContext(this),this.setSize(n,i),this.hitCanvas=!0},Konva.Util.extend(Konva.HitCanvas,Konva.Canvas)}(),function(){"use strict";var t=["arc","arcTo","beginPath","bezierCurveTo","clearRect","clip","closePath","createLinearGradient","createPattern","createRadialGradient","drawImage","fill","fillText","getImageData","createImageData","lineTo","moveTo","putImageData","quadraticCurveTo","rect","restore","rotate","save","scale","setLineDash","setTransform","stroke","strokeText","transform","translate"];Konva.Context=function(t){this.init(t)},Konva.Context.prototype={init:function(t){this.canvas=t,this._context=t._canvas.getContext("2d"),Konva.enableTrace&&(this.traceArr=[],this._enableTrace())},fillShape:function(t){t.getFillEnabled()&&this._fill(t)},strokeShape:function(t){t.getStrokeEnabled()&&this._stroke(t)},fillStrokeShape:function(t){t.getFillEnabled()&&this._fill(t),t.getStrokeEnabled()&&this._stroke(t)},getTrace:function(t){var e,n,i,a,r=this.traceArr,o=r.length,s="";for(e=0;e<o;e++)(i=(n=r[e]).method)?(a=n.args,s+=i,t?s+="()":Konva.Util._isArray(a[0])?s+="(["+a.join(",")+"])":s+="("+a.join(",")+")"):(s+=n.property,t||(s+="="+n.val)),s+=";";return s},clearTrace:function(){this.traceArr=[]},_trace:function(t){var e=this.traceArr;e.push(t),e.length>=Konva.traceArrMax&&e.shift()},reset:function(){var t=this.getCanvas().getPixelRatio();this.setTransform(1*t,0,0,1*t,0,0)},getCanvas:function(){return this.canvas},clear:function(t){var e=this.getCanvas();t?this.clearRect(t.x||0,t.y||0,t.width||0,t.height||0):this.clearRect(0,0,e.getWidth()/e.pixelRatio,e.getHeight()/e.pixelRatio)},_applyLineCap:function(t){var e=t.getLineCap();e&&this.setAttr("lineCap",e)},_applyOpacity:function(t){var e=t.getAbsoluteOpacity();1!==e&&this.setAttr("globalAlpha",e)},_applyLineJoin:function(t){var e=t.getLineJoin();e&&this.setAttr("lineJoin",e)},setAttr:function(t,e){this._context[t]=e},arc:function(){var t=arguments;this._context.arc(t[0],t[1],t[2],t[3],t[4],t[5])},beginPath:function(){this._context.beginPath()},bezierCurveTo:function(){var t=arguments;this._context.bezierCurveTo(t[0],t[1],t[2],t[3],t[4],t[5])},clearRect:function(){var t=arguments;this._context.clearRect(t[0],t[1],t[2],t[3])},clip:function(){this._context.clip()},closePath:function(){this._context.closePath()},createImageData:function(){var t=arguments;return 2===t.length?this._context.createImageData(t[0],t[1]):1===t.length?this._context.createImageData(t[0]):void 0},createLinearGradient:function(){var t=arguments;return this._context.createLinearGradient(t[0],t[1],t[2],t[3])},createPattern:function(){var t=arguments;return this._context.createPattern(t[0],t[1])},createRadialGradient:function(){var t=arguments;return this._context.createRadialGradient(t[0],t[1],t[2],t[3],t[4],t[5])},drawImage:function(){var t=arguments,e=this._context;3===t.length?e.drawImage(t[0],t[1],t[2]):5===t.length?e.drawImage(t[0],t[1],t[2],t[3],t[4]):9===t.length&&e.drawImage(t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8])},isPointInPath:function(t,e){return this._context.isPointInPath(t,e)},fill:function(){this._context.fill()},fillRect:function(t,e,n,i){this._context.fillRect(t,e,n,i)},strokeRect:function(t,e,n,i){this._context.strokeRect(t,e,n,i)},fillText:function(){var t=arguments;this._context.fillText(t[0],t[1],t[2])},measureText:function(t){return this._context.measureText(t)},getImageData:function(){var t=arguments;return this._context.getImageData(t[0],t[1],t[2],t[3])},lineTo:function(){var t=arguments;this._context.lineTo(t[0],t[1])},moveTo:function(){var t=arguments;this._context.moveTo(t[0],t[1])},rect:function(){var t=arguments;this._context.rect(t[0],t[1],t[2],t[3])},putImageData:function(){var t=arguments;this._context.putImageData(t[0],t[1],t[2])},quadraticCurveTo:function(){var t=arguments;this._context.quadraticCurveTo(t[0],t[1],t[2],t[3])},restore:function(){this._context.restore()},rotate:function(){var t=arguments;this._context.rotate(t[0])},save:function(){this._context.save()},scale:function(){var t=arguments;this._context.scale(t[0],t[1])},setLineDash:function(){var t=arguments,e=this._context;this._context.setLineDash?e.setLineDash(t[0]):"mozDash"in e?e.mozDash=t[0]:"webkitLineDash"in e&&(e.webkitLineDash=t[0])},getLineDash:function(){return this._context.getLineDash()},setTransform:function(){var t=arguments;this._context.setTransform(t[0],t[1],t[2],t[3],t[4],t[5])},stroke:function(){this._context.stroke()},strokeText:function(){var t=arguments;this._context.strokeText(t[0],t[1],t[2])},transform:function(){var t=arguments;this._context.transform(t[0],t[1],t[2],t[3],t[4],t[5])},translate:function(){var t=arguments;this._context.translate(t[0],t[1])},_enableTrace:function(){var e,n,i=this,a=t.length,r=Konva.Util._simplifyArray,o=this.setAttr,s=function(t){var e,a=i[t];i[t]=function(){return n=r(Array.prototype.slice.call(arguments,0)),e=a.apply(i,arguments),i._trace({method:t,args:n}),e}};for(e=0;e<a;e++)s(t[e]);i.setAttr=function(){o.apply(i,arguments);var t=arguments[0],e=arguments[1];"shadowOffsetX"!==t&&"shadowOffsetY"!==t&&"shadowBlur"!==t||(e/=this.canvas.getPixelRatio()),i._trace({property:t,val:e})}}},["fillStyle","strokeStyle","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","lineCap","lineDashOffset","lineJoin","lineWidth","miterLimit","font","textAlign","textBaseline","globalAlpha","globalCompositeOperation"].forEach(function(t){Object.defineProperty(Konva.Context.prototype,t,{get:function(){return this._context[t]},set:function(e){this._context[t]=e}})}),Konva.SceneContext=function(t){Konva.Context.call(this,t)},Konva.SceneContext.prototype={_fillColor:function(t){var e=t.fill();this.setAttr("fillStyle",e),t._fillFunc(this)},_fillPattern:function(t){var e=t.getFillPatternX(),n=t.getFillPatternY(),i=t.getFillPatternScale(),a=Konva.getAngle(t.getFillPatternRotation()),r=t.getFillPatternOffset();(e||n)&&this.translate(e||0,n||0),a&&this.rotate(a),i&&this.scale(i.x,i.y),r&&this.translate(-1*r.x,-1*r.y),this.setAttr("fillStyle",this.createPattern(t.getFillPatternImage(),t.getFillPatternRepeat()||"repeat")),this.fill()},_fillLinearGradient:function(t){var e=t.getFillLinearGradientStartPoint(),n=t.getFillLinearGradientEndPoint(),i=t.getFillLinearGradientColorStops(),a=this.createLinearGradient(e.x,e.y,n.x,n.y);if(i){for(var r=0;r<i.length;r+=2)a.addColorStop(i[r],i[r+1]);this.setAttr("fillStyle",a),t._fillFunc(this)}},_fillRadialGradient:function(t){for(var e=t.getFillRadialGradientStartPoint(),n=t.getFillRadialGradientEndPoint(),i=t.getFillRadialGradientStartRadius(),a=t.getFillRadialGradientEndRadius(),r=t.getFillRadialGradientColorStops(),o=this.createRadialGradient(e.x,e.y,i,n.x,n.y,a),s=0;s<r.length;s+=2)o.addColorStop(r[s],r[s+1]);this.setAttr("fillStyle",o),this.fill()},_fill:function(t){var e=t.fill(),n=t.getFillPriority();if(e&&"color"===n)this._fillColor(t);else{var i=t.getFillPatternImage();if(i&&"pattern"===n)this._fillPattern(t);else{var a=t.getFillLinearGradientColorStops();if(a&&"linear-gradient"===n)this._fillLinearGradient(t);else{var r=t.getFillRadialGradientColorStops();r&&"radial-gradient"===n?this._fillRadialGradient(t):e?this._fillColor(t):i?this._fillPattern(t):a?this._fillLinearGradient(t):r&&this._fillRadialGradient(t)}}}},_strokeLinearGradient:function(t){var e=t.getStrokeLinearGradientStartPoint(),n=t.getStrokeLinearGradientEndPoint(),i=t.getStrokeLinearGradientColorStops(),a=this.createLinearGradient(e.x,e.y,n.x,n.y);if(i){for(var r=0;r<i.length;r+=2)a.addColorStop(i[r],i[r+1]);this.setAttr("strokeStyle",a)}},_stroke:function(t){var e=t.dash(),n=t.getStrokeScaleEnabled()||t instanceof Konva.Text;t.hasStroke()&&(n||(this.save(),this.setTransform(1,0,0,1,0,0)),this._applyLineCap(t),e&&t.dashEnabled()&&(this.setLineDash(e),this.setAttr("lineDashOffset",t.dashOffset())),this.setAttr("lineWidth",t.strokeWidth()),t.getShadowForStrokeEnabled()||this.setAttr("shadowColor","rgba(0,0,0,0)"),t.getStrokeLinearGradientColorStops()?this._strokeLinearGradient(t):this.setAttr("strokeStyle",t.stroke()),t._strokeFunc(this),n||this.restore())},_applyShadow:function(t){var e=Konva.Util,n=e.get(t.getShadowRGBA(),"black"),i=e.get(t.getShadowBlur(),5),a=e.get(t.getShadowOffset(),{x:0,y:0}),r=t.getAbsoluteScale(),o=this.canvas.getPixelRatio(),s=r.x*o,h=r.y*o;this.setAttr("shadowColor",n),this.setAttr("shadowBlur",i*Math.min(Math.abs(s),Math.abs(h))),this.setAttr("shadowOffsetX",a.x*s),this.setAttr("shadowOffsetY",a.y*h)},_applyGlobalCompositeOperation:function(t){var e=t.getGlobalCompositeOperation();"source-over"!==e&&this.setAttr("globalCompositeOperation",e)}},Konva.Util.extend(Konva.SceneContext,Konva.Context),Konva.HitContext=function(t){Konva.Context.call(this,t)},Konva.HitContext.prototype={_fill:function(t){this.save(),this.setAttr("fillStyle",t.colorKey),t._fillFuncHit(this),this.restore()},_stroke:function(t){if(t.hasStroke()&&t.strokeHitEnabled()){var e=t.getStrokeScaleEnabled()||t instanceof Konva.Text;e||(this.save(),this.setTransform(1,0,0,1,0,0)),this._applyLineCap(t),this.setAttr("lineWidth",t.strokeWidth()),this.setAttr("strokeStyle",t.colorKey),t._strokeFuncHit(this),e||this.restore()}}},Konva.Util.extend(Konva.HitContext,Konva.Context)}(),function(){"use strict";Konva.Factory={addGetterSetter:function(t,e,n,i,a){this.addGetter(t,e,n),this.addSetter(t,e,i,a),this.addOverloadedGetterSetter(t,e)},addGetter:function(t,e,n){var i="get"+Konva.Util._capitalize(e);t.prototype[i]=function(){var t=this.attrs[e];return void 0===t?n:t}},addSetter:function(t,e,n,i){var a="set"+Konva.Util._capitalize(e);t.prototype[a]=function(t){return n&&(t=n.call(this,t)),this._setAttr(e,t),i&&i.call(this),this}},addComponentsGetterSetter:function(t,e,n,i,a){var r,o,s=n.length,h=Konva.Util._capitalize,c="get"+h(e),l="set"+h(e);t.prototype[c]=function(){var t={};for(r=0;r<s;r++)t[o=n[r]]=this.getAttr(e+h(o));return t},t.prototype[l]=function(t){var n,r=this.attrs[e];for(n in i&&(t=i.call(this,t)),t)t.hasOwnProperty(n)&&this._setAttr(e+h(n),t[n]);return this._fireChangeEvent(e,r,t),a&&a.call(this),this},this.addOverloadedGetterSetter(t,e)},addOverloadedGetterSetter:function(t,e){var n=Konva.Util._capitalize(e),i="set"+n,a="get"+n;t.prototype[e]=function(){return arguments.length?(this[i](arguments[0]),this):this[a]()}},addDeprecatedGetterSetter:function(t,e,n,i){Konva.Util.error("Adding deprecated "+e);var a="get"+Konva.Util._capitalize(e),r=e+" property is deprecated and will be removed soon. Look at Konva change log for more information.";t.prototype[a]=function(){Konva.Util.error(r);var t=this.attrs[e];return void 0===t?n:t},this.addSetter(t,e,i,function(){Konva.Util.error(r)}),this.addOverloadedGetterSetter(t,e)},backCompat:function(t,e){Konva.Util.each(e,function(e,n){var i=t.prototype[n];t.prototype[e]=function(){i.apply(this,arguments),Konva.Util.error(e+" method is deprecated and will be removed soon. Use "+n+" instead")}})},afterSetFilter:function(){this._filterUpToDate=!1}},Konva.Validators={RGBComponent:function(t){return t>255?255:t<0?0:Math.round(t)},alphaComponent:function(t){return t>1?1:t<1e-4?1e-4:t}}}(),function(t){"use strict";var e="Shape",n=["id"],i=["xChange.konva","yChange.konva","scaleXChange.konva","scaleYChange.konva","skewXChange.konva","skewYChange.konva","rotationChange.konva","offsetXChange.konva","offsetYChange.konva","transformsEnabledChange.konva"].join(" "),a=["scaleXChange.konva","scaleYChange.konva"].join(" ");t.Node=function(t){this._init(t)},t.Util.addMethods(t.Node,{_init:function(e){this._id=t.idCounter++,this.eventListeners={},this.attrs={},this._cache={},this._filterUpToDate=!1,this._isUnderCache=!1,this.setAttrs(e),this.on(i,function(){this._clearCache("transform"),this._clearSelfAndDescendantCache("absoluteTransform")}),this.on(a,function(){this._clearSelfAndDescendantCache("absoluteScale")}),this.on("visibleChange.konva",function(){this._clearSelfAndDescendantCache("visible")}),this.on("listeningChange.konva",function(){this._clearSelfAndDescendantCache("listening")}),this.on("opacityChange.konva",function(){this._clearSelfAndDescendantCache("absoluteOpacity")})},_clearCache:function(t){t?delete this._cache[t]:this._cache={}},_getCache:function(t,e){return void 0===this._cache[t]&&(this._cache[t]=e.call(this)),this._cache[t]},_clearSelfAndDescendantCache:function(t){this._clearCache(t),this.children&&this.getChildren().each(function(e){e._clearSelfAndDescendantCache(t)})},clearCache:function(){return delete this._cache.canvas,this._filterUpToDate=!1,this},cache:function(e){var n=e||{},i=this.getClientRect({skipTransform:!0,relativeTo:this.getParent()}),a=n.width||i.width,r=n.height||i.height,o=n.pixelRatio,s=n.x||i.x,h=n.y||i.y,c=n.offset||0,l=n.drawBorder||!1;if(a&&r){a+=2*c,r+=2*c,s-=c,h-=c;var d=new t.SceneCanvas({pixelRatio:o,width:a,height:r}),u=new t.SceneCanvas({pixelRatio:o,width:a,height:r}),f=new t.HitCanvas({pixelRatio:1,width:a,height:r}),g=d.getContext(),v=f.getContext();return f.isCache=!0,this.clearCache(),g.save(),v.save(),g.translate(-s,-h),v.translate(-s,-h),this._isUnderCache=!0,this._clearSelfAndDescendantCache("absoluteOpacity"),this._clearSelfAndDescendantCache("absoluteScale"),this.drawScene(d,this,!0),this.drawHit(f,this,!0),this._isUnderCache=!1,g.restore(),v.restore(),l&&(g.save(),g.beginPath(),g.rect(0,0,a,r),g.closePath(),g.setAttr("strokeStyle","red"),g.setAttr("lineWidth",5),g.stroke(),g.restore()),this._cache.canvas={scene:d,filter:u,hit:f,x:s,y:h},this}setTimeout(function(){t.Util.throw("Width or height of caching configuration equals 0. Caching is ignored.")})},getClientRect:function(){throw new Error('abstract "getClientRect" method call')},_transformedRect:function(t,e){var n,i,a,r,o=[{x:t.x,y:t.y},{x:t.x+t.width,y:t.y},{x:t.x+t.width,y:t.y+t.height},{x:t.x,y:t.y+t.height}],s=this.getAbsoluteTransform(e);return o.forEach(function(t){var e=s.point(t);void 0===n&&(n=a=e.x,i=r=e.y),n=Math.min(n,e.x),i=Math.min(i,e.y),a=Math.max(a,e.x),r=Math.max(r,e.y)}),{x:n,y:i,width:a-n,height:r-i}},_drawCachedSceneCanvas:function(t){t.save(),t._applyOpacity(this),t._applyGlobalCompositeOperation(this),t.translate(this._cache.canvas.x,this._cache.canvas.y);var e=this._getCachedSceneCanvas(),n=e.pixelRatio;t.drawImage(e._canvas,0,0,e.width/n,e.height/n),t.restore()},_drawCachedHitCanvas:function(t){var e=this._cache.canvas.hit;t.save(),t.translate(this._cache.canvas.x,this._cache.canvas.y),t.drawImage(e._canvas,0,0),t.restore()},_getCachedSceneCanvas:function(){var e,n,i,a,r=this.filters(),o=this._cache.canvas,s=o.scene,h=o.filter,c=h.getContext();if(r){if(!this._filterUpToDate){var l=s.pixelRatio;try{for(e=r.length,c.clear(),c.drawImage(s._canvas,0,0,s.getWidth()/l,s.getHeight()/l),n=c.getImageData(0,0,h.getWidth(),h.getHeight()),i=0;i<e;i++)"function"==typeof(a=r[i])?(a.call(this,n),c.putImageData(n,0,0)):t.Util.error("Filter should be type of function, but got "+typeof a+" insted. Please check correct filters")}catch(e){t.Util.error("Unable to apply filter. "+e.message)}this._filterUpToDate=!0}return h}return s},on:function(t,e){if(3===arguments.length)return this._delegate.apply(this,arguments);var n,i,a,r,o=t.split(" "),s=o.length;for(n=0;n<s;n++)a=(i=o[n].split("."))[0],r=i[1]||"",this.eventListeners[a]||(this.eventListeners[a]=[]),this.eventListeners[a].push({name:r,handler:e});return this},off:function(t,e){var n,i,a,r,o,s=(t||"").split(" "),h=s.length;if(!t)for(i in this.eventListeners)this._off(i);for(n=0;n<h;n++)if(r=(a=s[n].split("."))[0],o=a[1],r)this.eventListeners[r]&&this._off(r,o,e);else for(i in this.eventListeners)this._off(i,o,e);return this},dispatchEvent:function(t){var e={target:this,type:t.type,evt:t};return this.fire(t.type,e),this},addEventListener:function(t,e){return this.on(t,function(t){e.call(this,t.evt)}),this},removeEventListener:function(t){return this.off(t),this},_delegate:function(e,n,i){var a=this;this.on(e,function(e){for(var r=e.target.findAncestors(n,!0,a),o=0;o<r.length;o++)(e=t.Util.cloneObject(e)).currentTarget=r[o],i.call(r[o],e)})},remove:function(){var t=this.getParent();return t&&t.children&&(t.children.splice(this.index,1),t._setChildrenIndices(),delete this.parent),this._clearSelfAndDescendantCache("stage"),this._clearSelfAndDescendantCache("absoluteTransform"),this._clearSelfAndDescendantCache("visible"),this._clearSelfAndDescendantCache("listening"),this._clearSelfAndDescendantCache("absoluteOpacity"),this},destroy:function(){t._removeId(this.getId());for(var e=(this.getName()||"").split(/\s/g),n=0;n<e.length;n++){var i=e[n];t._removeName(i,this._id)}return this.remove(),this},getAttr:function(e){var n="get"+t.Util._capitalize(e);return t.Util._isFunction(this[n])?this[n]():this.attrs[e]},getAncestors:function(){for(var e=this.getParent(),n=new t.Collection;e;)n.push(e),e=e.getParent();return n},getAttrs:function(){return this.attrs||{}},setAttrs:function(e){var n,i;if(!e)return this;for(n in e)"children"!==n&&(i="set"+t.Util._capitalize(n),t.Util._isFunction(this[i])?this[i](e[n]):this._setAttr(n,e[n]));return this},isListening:function(){return this._getCache("listening",this._isListening)},_isListening:function(){var t=this.getListening(),e=this.getParent();return"inherit"===t?!e||e.isListening():t},isVisible:function(){return this._getCache("visible",this._isVisible)},_isVisible:function(){var t=this.getVisible(),e=this.getParent();return"inherit"===t?!e||e.isVisible():t},shouldDrawHit:function(t){var e=this.getLayer();return t&&t.isCache||e&&e.hitGraphEnabled()&&this.isListening()&&this.isVisible()},show:function(){return this.setVisible(!0),this},hide:function(){return this.setVisible(!1),this},getZIndex:function(){return this.index||0},getAbsoluteZIndex:function(){var t,n,i,a,r=this.getDepth(),o=this,s=0;return"Stage"!==o.nodeType&&function h(c){for(t=[],n=c.length,i=0;i<n;i++)a=c[i],s++,a.nodeType!==e&&(t=t.concat(a.getChildren().toArray())),a._id===o._id&&(i=n);t.length>0&&t[0].getDepth()<=r&&h(t)}(o.getStage().getChildren()),s},getDepth:function(){for(var t=0,e=this.parent;e;)t++,e=e.parent;return t},setPosition:function(t){return this.setX(t.x),this.setY(t.y),this},getPosition:function(){return{x:this.getX(),y:this.getY()}},getAbsolutePosition:function(e){var n=this.getAbsoluteTransform(e).getMatrix(),i=new t.Transform,a=this.offset();return i.m=n.slice(),i.translate(a.x,a.y),i.getTranslation()},setAbsolutePosition:function(t){var e,n=this._clearTransform();return this.attrs.x=n.x,this.attrs.y=n.y,delete n.x,delete n.y,(e=this.getAbsoluteTransform()).invert(),e.translate(t.x,t.y),t={x:this.attrs.x+e.getTranslation().x,y:this.attrs.y+e.getTranslation().y},this.setPosition({x:t.x,y:t.y}),this._setTransform(n),this},_setTransform:function(t){var e;for(e in t)this.attrs[e]=t[e];this._clearCache("transform"),this._clearSelfAndDescendantCache("absoluteTransform")},_clearTransform:function(){var t={x:this.getX(),y:this.getY(),rotation:this.getRotation(),scaleX:this.getScaleX(),scaleY:this.getScaleY(),offsetX:this.getOffsetX(),offsetY:this.getOffsetY(),skewX:this.getSkewX(),skewY:this.getSkewY()};return this.attrs.x=0,this.attrs.y=0,this.attrs.rotation=0,this.attrs.scaleX=1,this.attrs.scaleY=1,this.attrs.offsetX=0,this.attrs.offsetY=0,this.attrs.skewX=0,this.attrs.skewY=0,this._clearCache("transform"),this._clearSelfAndDescendantCache("absoluteTransform"),t},move:function(t){var e=t.x,n=t.y,i=this.getX(),a=this.getY();return void 0!==e&&(i+=e),void 0!==n&&(a+=n),this.setPosition({x:i,y:a}),this},_eachAncestorReverse:function(t,e){var n,i,a=[],r=this.getParent();if(e&&e._id===this._id)return t(this),!0;for(a.unshift(this);r&&(!e||r._id!==e._id);)a.unshift(r),r=r.parent;for(n=a.length,i=0;i<n;i++)t(a[i])},rotate:function(t){return this.setRotation(this.getRotation()+t),this},moveToTop:function(){if(!this.parent)return t.Util.warn("Node has no parent. moveToTop function is ignored."),!1;var e=this.index;return this.parent.children.splice(e,1),this.parent.children.push(this),this.parent._setChildrenIndices(),!0},moveUp:function(){if(!this.parent)return t.Util.warn("Node has no parent. moveUp function is ignored."),!1;var e=this.index;return e<this.parent.getChildren().length-1&&(this.parent.children.splice(e,1),this.parent.children.splice(e+1,0,this),this.parent._setChildrenIndices(),!0)},moveDown:function(){if(!this.parent)return t.Util.warn("Node has no parent. moveDown function is ignored."),!1;var e=this.index;return e>0&&(this.parent.children.splice(e,1),this.parent.children.splice(e-1,0,this),this.parent._setChildrenIndices(),!0)},moveToBottom:function(){if(!this.parent)return t.Util.warn("Node has no parent. moveToBottom function is ignored."),!1;var e=this.index;return e>0&&(this.parent.children.splice(e,1),this.parent.children.unshift(this),this.parent._setChildrenIndices(),!0)},setZIndex:function(e){if(!this.parent)return t.Util.warn("Node has no parent. zIndex parameter is ignored."),!1;var n=this.index;return this.parent.children.splice(n,1),this.parent.children.splice(e,0,this),this.parent._setChildrenIndices(),this},getAbsoluteOpacity:function(){return this._getCache("absoluteOpacity",this._getAbsoluteOpacity)},_getAbsoluteOpacity:function(){var t=this.getOpacity(),e=this.getParent();return e&&!e._isUnderCache&&(t*=this.getParent().getAbsoluteOpacity()),t},moveTo:function(t){return this.getParent()!==t&&((this.__originalRemove||this.remove).call(this),t.add(this)),this},toObject:function(){var e,n,i,a,r={},o=this.getAttrs();for(e in r.attrs={},o)n=o[e],i=this[e],delete o[e],a=i?i.call(this):null,o[e]=n,a!==n&&(r.attrs[e]=n);return r.className=this.getClassName(),t.Util._prepareToStringify(r)},toJSON:function(){return JSON.stringify(this.toObject())},getParent:function(){return this.parent},findAncestors:function(t,e,n){var i=[];e&&this._isMatch(t)&&i.push(this);for(var a=this.parent;a;){if(a===n)return i;a._isMatch(t)&&i.push(a),a=a.parent}return i},findAncestor:function(t,e,n){return this.findAncestors(t,e,n)[0]},_isMatch:function(e){if(!e)return!1;var n,i,a=e.replace(/ /g,"").split(","),r=a.length;for(n=0;n<r;n++)if(i=a[n],t.Util.isValidSelector(i)||(t.Util.warn('Selector "'+i+'" is invalid. Allowed selectors examples are "#foo", ".bar" or "Group".'),t.Util.warn('If you have a custom shape with such className, please change it to start with upper letter like "Triangle".'),t.Util.warn("Konva is awesome, right?")),"#"===i.charAt(0)){if(this.id()===i.slice(1))return!0}else if("."===i.charAt(0)){if(this.hasName(i.slice(1)))return!0}else if(0!==this._get(i).length)return!0;return!1},getLayer:function(){var t=this.getParent();return t?t.getLayer():null},getStage:function(){return this._getCache("stage",this._getStage)},_getStage:function(){var t=this.getParent();return t?t.getStage():void 0},fire:function(t,e,n){return(e=e||{}).target=e.target||this,n?this._fireAndBubble(t,e):this._fire(t,e),this},getAbsoluteTransform:function(t){return t?this._getAbsoluteTransform(t):this._getCache("absoluteTransform",this._getAbsoluteTransform)},_getAbsoluteTransform:function(e){var n,i,a=new t.Transform;return this._eachAncestorReverse(function(t){n=t.transformsEnabled(),i=t.getTransform(),"all"===n?a.multiply(i):"position"===n&&a.translate(t.x(),t.y())},e),a},getAbsoluteScale:function(t){return t?this._getAbsoluteScale(t):this._getCache("absoluteScale",this._getAbsoluteScale)},_getAbsoluteScale:function(t){for(var e=this;e;)e._isUnderCache&&(t=e),e=e.getParent();var n=1,i=1;return this._eachAncestorReverse(function(t){n*=t.scaleX(),i*=t.scaleY()},t),{x:n,y:i}},getTransform:function(){return this._getCache("transform",this._getTransform)},_getTransform:function(){var e=new t.Transform,n=this.getX(),i=this.getY(),a=t.getAngle(this.getRotation()),r=this.getScaleX(),o=this.getScaleY(),s=this.getSkewX(),h=this.getSkewY(),c=this.getOffsetX(),l=this.getOffsetY();return 0===n&&0===i||e.translate(n,i),0!==a&&e.rotate(a),0===s&&0===h||e.skew(s,h),1===r&&1===o||e.scale(r,o),0===c&&0===l||e.translate(-1*c,-1*l),e},clone:function(e){var i,a,r,o,s,h=t.Util.cloneObject(this.attrs);for(var c in n){delete h[n[c]]}for(i in e)h[i]=e[i];var l=new this.constructor(h);for(i in this.eventListeners)for(r=(a=this.eventListeners[i]).length,o=0;o<r;o++)(s=a[o]).name.indexOf("konva")<0&&(l.eventListeners[i]||(l.eventListeners[i]=[]),l.eventListeners[i].push(s));return l},_toKonvaCanvas:function(e){e=e||{};var n=this.getStage(),i=e.x||0,a=e.y||0,r=e.pixelRatio||1,o=new t.SceneCanvas({width:e.width||this.getWidth()||(n?n.getWidth():0),height:e.height||this.getHeight()||(n?n.getHeight():0),pixelRatio:r}),s=o.getContext();return s.save(),(i||a)&&s.translate(-1*i,-1*a),this.drawScene(o),s.restore(),o},toCanvas:function(t){return this._toKonvaCanvas(t)._canvas},toDataURL:function(t){var e=(t=t||{}).mimeType||null,n=t.quality||null;return this._toKonvaCanvas(t).toDataURL(e,n)},toImage:function(e){if(!e||!e.callback)throw"callback required for toImage method config argument";t.Util._getImage(this.toDataURL(e),function(t){e.callback(t)})},setSize:function(t){return this.setWidth(t.width),this.setHeight(t.height),this},getSize:function(){return{width:this.getWidth(),height:this.getHeight()}},getWidth:function(){return this.attrs.width||0},getHeight:function(){return this.attrs.height||0},getClassName:function(){return this.className||this.nodeType},getType:function(){return this.nodeType},getDragDistance:function(){return void 0!==this.attrs.dragDistance?this.attrs.dragDistance:this.parent?this.parent.getDragDistance():t.dragDistance},_get:function(t){return this.className===t||this.nodeType===t?[this]:[]},_off:function(t,e,n){var i,a,r,o=this.eventListeners[t];for(i=0;i<o.length;i++)if(a=o[i].name,r=o[i].handler,!("konva"===a&&"konva"!==e||e&&a!==e||n&&n!==r)){if(o.splice(i,1),0===o.length){delete this.eventListeners[t];break}i--}},_fireChangeEvent:function(t,e,n){this._fire(t+"Change",{oldVal:e,newVal:n})},setId:function(e){var n=this.getId();return t._removeId(n),t._addId(this,e),this._setAttr("id",e),this},setName:function(e){var n,i,a=(this.getName()||"").split(/\s/g),r=(e||"").split(/\s/g);for(i=0;i<a.length;i++)n=a[i],-1===r.indexOf(n)&&n&&t._removeName(n,this._id);for(i=0;i<r.length;i++)n=r[i],-1===a.indexOf(n)&&n&&t._addName(this,n);return this._setAttr("name",e),this},addName:function(t){if(!this.hasName(t)){var e=this.name(),n=e?e+" "+t:t;this.setName(n)}return this},hasName:function(t){return-1!==(this.name()||"").split(/\s/g).indexOf(t)},removeName:function(t){var e=(this.name()||"").split(/\s/g),n=e.indexOf(t);return-1!==n&&(e.splice(n,1),this.setName(e.join(" "))),this},setAttr:function(e,n){var i=this["set"+t.Util._capitalize(e)];return t.Util._isFunction(i)?i.call(this,n):this._setAttr(e,n),this},_setAttr:function(e,n){var i;(i=this.attrs[e])===n&&!t.Util.isObject(n)||(void 0===n||null===n?delete this.attrs[e]:this.attrs[e]=n,this._fireChangeEvent(e,i,n))},_setComponentAttr:function(t,e,n){var i;void 0!==n&&((i=this.attrs[t])||(this.attrs[t]=this.getAttr(t)),this.attrs[t][e]=n,this._fireChangeEvent(t,i,n))},_fireAndBubble:function(t,n,i){var a=!0;if(n&&this.nodeType===e&&(n.target=this),"mouseenter"===t&&i&&(this._id===i._id||this.isAncestorOf&&this.isAncestorOf(i))?a=!1:"mouseleave"===t&&i&&(this._id===i._id||this.isAncestorOf&&this.isAncestorOf(i))&&(a=!1),a){this._fire(t,n);var r=("mouseenter"===t||"mouseleave"===t)&&i&&i.isAncestorOf&&i.isAncestorOf(this)&&!i.isAncestorOf(this.parent);(n&&!n.cancelBubble||!n)&&this.parent&&this.parent.isListening()&&!r&&(i&&i.parent?this._fireAndBubble.call(this.parent,t,n,i.parent):this._fireAndBubble.call(this.parent,t,n))}},_fire:function(t,e){var n,i=this.eventListeners[t];if((e=e||{}).currentTarget=this,e.type=t,i)for(n=0;n<i.length;n++)i[n].handler.call(this,e)},draw:function(){return this.drawScene(),this.drawHit(),this}}),t.Node.create=function(e,n){return t.Util._isString(e)&&(e=JSON.parse(e)),this._createNode(e,n)},t.Node._createNode=function(e,n){var i,a,r,o=t.Node.prototype.getClassName.call(e),s=e.children;if(n&&(e.attrs.container=n),i=new t[o](e.attrs),s)for(a=s.length,r=0;r<a;r++)i.add(this._createNode(s[r]));return i},t.Factory.addOverloadedGetterSetter(t.Node,"position"),t.Factory.addGetterSetter(t.Node,"x",0),t.Factory.addGetterSetter(t.Node,"y",0),t.Factory.addGetterSetter(t.Node,"globalCompositeOperation","source-over"),t.Factory.addGetterSetter(t.Node,"opacity",1),t.Factory.addGetter(t.Node,"name"),t.Factory.addOverloadedGetterSetter(t.Node,"name"),t.Factory.addGetter(t.Node,"id"),t.Factory.addOverloadedGetterSetter(t.Node,"id"),t.Factory.addGetterSetter(t.Node,"rotation",0),t.Factory.addComponentsGetterSetter(t.Node,"scale",["x","y"]),t.Factory.addGetterSetter(t.Node,"scaleX",1),t.Factory.addGetterSetter(t.Node,"scaleY",1),t.Factory.addComponentsGetterSetter(t.Node,"skew",["x","y"]),t.Factory.addGetterSetter(t.Node,"skewX",0),t.Factory.addGetterSetter(t.Node,"skewY",0),t.Factory.addComponentsGetterSetter(t.Node,"offset",["x","y"]),t.Factory.addGetterSetter(t.Node,"offsetX",0),t.Factory.addGetterSetter(t.Node,"offsetY",0),t.Factory.addSetter(t.Node,"dragDistance"),t.Factory.addOverloadedGetterSetter(t.Node,"dragDistance"),t.Factory.addSetter(t.Node,"width",0),t.Factory.addOverloadedGetterSetter(t.Node,"width"),t.Factory.addSetter(t.Node,"height",0),t.Factory.addOverloadedGetterSetter(t.Node,"height"),t.Factory.addGetterSetter(t.Node,"listening","inherit"),t.Factory.addGetterSetter(t.Node,"preventDefault",!0),t.Factory.addGetterSetter(t.Node,"filters",void 0,function(t){return this._filterUpToDate=!1,t}),t.Factory.addGetterSetter(t.Node,"visible","inherit"),t.Factory.addGetterSetter(t.Node,"transformsEnabled","all"),t.Factory.addOverloadedGetterSetter(t.Node,"size"),t.Factory.backCompat(t.Node,{rotateDeg:"rotate",setRotationDeg:"setRotation",getRotationDeg:"getRotation"}),t.Collection.mapMethods(t.Node)}(Konva),function(){"use strict";Konva.Filters.Grayscale=function(t){var e,n,i=t.data,a=i.length;for(e=0;e<a;e+=4)n=.34*i[e]+.5*i[e+1]+.16*i[e+2],i[e]=n,i[e+1]=n,i[e+2]=n}}(),function(t){"use strict";t.Filters.Brighten=function(t){var e,n=255*this.brightness(),i=t.data,a=i.length;for(e=0;e<a;e+=4)i[e]+=n,i[e+1]+=n,i[e+2]+=n},t.Factory.addGetterSetter(t.Node,"brightness",0,null,t.Factory.afterSetFilter)}(Konva),function(){"use strict";Konva.Filters.Invert=function(t){var e,n=t.data,i=n.length;for(e=0;e<i;e+=4)n[e]=255-n[e],n[e+1]=255-n[e+1],n[e+2]=255-n[e+2]}}(),function(t){"use strict";function e(){this.r=0,this.g=0,this.b=0,this.a=0,this.next=null}var n=[512,512,456,512,328,456,335,512,405,328,271,456,388,335,292,512,454,405,364,328,298,271,496,456,420,388,360,335,312,292,273,512,482,454,428,405,383,364,345,328,312,298,284,271,259,496,475,456,437,420,404,388,374,360,347,335,323,312,302,292,282,273,265,512,497,482,468,454,441,428,417,405,394,383,373,364,354,345,337,328,320,312,305,298,291,284,278,271,265,259,507,496,485,475,465,456,446,437,428,420,412,404,396,388,381,374,367,360,354,347,341,335,329,323,318,312,307,302,297,292,287,282,278,273,269,265,261,512,505,497,489,482,475,468,461,454,447,441,435,428,422,417,411,405,399,394,389,383,378,373,368,364,359,354,350,345,341,337,332,328,324,320,316,312,309,305,301,298,294,291,287,284,281,278,274,271,268,265,262,259,257,507,501,496,491,485,480,475,470,465,460,456,451,446,442,437,433,428,424,420,416,412,408,404,400,396,392,388,385,381,377,374,370,367,363,360,357,354,350,347,344,341,338,335,332,329,326,323,320,318,315,312,310,307,304,302,299,297,294,292,289,287,285,282,280,278,275,273,271,269,267,265,263,261,259],i=[9,11,12,13,13,14,14,15,15,15,15,16,16,16,16,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24];t.Filters.Blur=function(t){var a=Math.round(this.blurRadius());a>0&&function(t,a){var r,o,s,h,c,l,d,u,f,g,v,p,m,_,y,S,K,x,C,b,w,F,T,P,A=t.data,M=t.width,k=t.height,G=a+a+1,R=M-1,D=k-1,L=a+1,O=L*(L+1)/2,I=new e,N=null,U=I,E=null,B=null,H=n[a],z=i[a];for(s=1;s<G;s++)U=U.next=new e,s===L&&(N=U);for(U.next=I,d=l=0,o=0;o<k;o++){for(S=K=x=C=u=f=g=v=0,p=L*(b=A[l]),m=L*(w=A[l+1]),_=L*(F=A[l+2]),y=L*(T=A[l+3]),u+=O*b,f+=O*w,g+=O*F,v+=O*T,U=I,s=0;s<L;s++)U.r=b,U.g=w,U.b=F,U.a=T,U=U.next;for(s=1;s<L;s++)h=l+((R<s?R:s)<<2),u+=(U.r=b=A[h])*(P=L-s),f+=(U.g=w=A[h+1])*P,g+=(U.b=F=A[h+2])*P,v+=(U.a=T=A[h+3])*P,S+=b,K+=w,x+=F,C+=T,U=U.next;for(E=I,B=N,r=0;r<M;r++)A[l+3]=T=v*H>>z,0!==T?(T=255/T,A[l]=(u*H>>z)*T,A[l+1]=(f*H>>z)*T,A[l+2]=(g*H>>z)*T):A[l]=A[l+1]=A[l+2]=0,u-=p,f-=m,g-=_,v-=y,p-=E.r,m-=E.g,_-=E.b,y-=E.a,h=d+((h=r+a+1)<R?h:R)<<2,u+=S+=E.r=A[h],f+=K+=E.g=A[h+1],g+=x+=E.b=A[h+2],v+=C+=E.a=A[h+3],E=E.next,p+=b=B.r,m+=w=B.g,_+=F=B.b,y+=T=B.a,S-=b,K-=w,x-=F,C-=T,B=B.next,l+=4;d+=M}for(r=0;r<M;r++){for(K=x=C=S=f=g=v=u=0,p=L*(b=A[l=r<<2]),m=L*(w=A[l+1]),_=L*(F=A[l+2]),y=L*(T=A[l+3]),u+=O*b,f+=O*w,g+=O*F,v+=O*T,U=I,s=0;s<L;s++)U.r=b,U.g=w,U.b=F,U.a=T,U=U.next;for(c=M,s=1;s<=a;s++)l=c+r<<2,u+=(U.r=b=A[l])*(P=L-s),f+=(U.g=w=A[l+1])*P,g+=(U.b=F=A[l+2])*P,v+=(U.a=T=A[l+3])*P,S+=b,K+=w,x+=F,C+=T,U=U.next,s<D&&(c+=M);for(l=r,E=I,B=N,o=0;o<k;o++)A[3+(h=l<<2)]=T=v*H>>z,T>0?(T=255/T,A[h]=(u*H>>z)*T,A[h+1]=(f*H>>z)*T,A[h+2]=(g*H>>z)*T):A[h]=A[h+1]=A[h+2]=0,u-=p,f-=m,g-=_,v-=y,p-=E.r,m-=E.g,_-=E.b,y-=E.a,h=r+((h=o+L)<D?h:D)*M<<2,u+=S+=E.r=A[h],f+=K+=E.g=A[h+1],g+=x+=E.b=A[h+2],v+=C+=E.a=A[h+3],E=E.next,p+=b=B.r,m+=w=B.g,_+=F=B.b,y+=T=B.a,S-=b,K-=w,x-=F,C-=T,B=B.next,l+=M}}(t,a)},t.Factory.addGetterSetter(t.Node,"blurRadius",0,null,t.Factory.afterSetFilter)}(Konva),function(){"use strict";function t(t,e,n){var i=4*(n*t.width+e),a=[];return a.push(t.data[i++],t.data[i++],t.data[i++],t.data[i++]),a}function e(t,e){return Math.sqrt(Math.pow(t[0]-e[0],2)+Math.pow(t[1]-e[1],2)+Math.pow(t[2]-e[2],2))}Konva.Filters.Mask=function(n){var i=function(n,i){var a=t(n,0,0),r=t(n,n.width-1,0),o=t(n,0,n.height-1),s=t(n,n.width-1,n.height-1),h=i||10;if(e(a,r)<h&&e(r,s)<h&&e(s,o)<h&&e(o,a)<h){for(var c=function(t){for(var e=[0,0,0],n=0;n<t.length;n++)e[0]+=t[n][0],e[1]+=t[n][1],e[2]+=t[n][2];return e[0]/=t.length,e[1]/=t.length,e[2]/=t.length,e}([r,a,s,o]),l=[],d=0;d<n.width*n.height;d++){var u=e(c,[n.data[4*d],n.data[4*d+1],n.data[4*d+2]]);l[d]=u<h?0:255}return l}}(n,this.threshold());return i&&function(t,e){for(var n=0;n<t.width*t.height;n++)t.data[4*n+3]=e[n]}(n,i=function(t,e,n){for(var i=[1/9,1/9,1/9,1/9,1/9,1/9,1/9,1/9,1/9],a=Math.round(Math.sqrt(i.length)),r=Math.floor(a/2),o=[],s=0;s<n;s++)for(var h=0;h<e;h++){for(var c=s*e+h,l=0,d=0;d<a;d++)for(var u=0;u<a;u++){var f=s+d-r,g=h+u-r;if(f>=0&&f<n&&g>=0&&g<e){var v=i[d*a+u];l+=t[f*e+g]*v}}o[c]=l}return o}(i=function(t,e,n){for(var i=[1,1,1,1,1,1,1,1,1],a=Math.round(Math.sqrt(i.length)),r=Math.floor(a/2),o=[],s=0;s<n;s++)for(var h=0;h<e;h++){for(var c=s*e+h,l=0,d=0;d<a;d++)for(var u=0;u<a;u++){var f=s+d-r,g=h+u-r;if(f>=0&&f<n&&g>=0&&g<e){var v=i[d*a+u];l+=t[f*e+g]*v}}o[c]=l>=1020?255:0}return o}(i=function(t,e,n){for(var i=[1,1,1,1,0,1,1,1,1],a=Math.round(Math.sqrt(i.length)),r=Math.floor(a/2),o=[],s=0;s<n;s++)for(var h=0;h<e;h++){for(var c=s*e+h,l=0,d=0;d<a;d++)for(var u=0;u<a;u++){var f=s+d-r,g=h+u-r;if(f>=0&&f<n&&g>=0&&g<e){var v=i[d*a+u];l+=t[f*e+g]*v}}o[c]=2040===l?255:0}return o}(i,n.width,n.height),n.width,n.height),n.width,n.height)),n},Konva.Factory.addGetterSetter(Konva.Node,"threshold",0,null,Konva.Factory.afterSetFilter)}(),function(){"use strict";Konva.Filters.RGB=function(t){var e,n,i=t.data,a=i.length,r=this.red(),o=this.green(),s=this.blue();for(e=0;e<a;e+=4)n=(.34*i[e]+.5*i[e+1]+.16*i[e+2])/255,i[e]=n*r,i[e+1]=n*o,i[e+2]=n*s,i[e+3]=i[e+3]},Konva.Factory.addGetterSetter(Konva.Node,"red",0,function(t){return this._filterUpToDate=!1,t>255?255:t<0?0:Math.round(t)}),Konva.Factory.addGetterSetter(Konva.Node,"green",0,function(t){return this._filterUpToDate=!1,t>255?255:t<0?0:Math.round(t)}),Konva.Factory.addGetterSetter(Konva.Node,"blue",0,Konva.Validators.RGBComponent,Konva.Factory.afterSetFilter)}(),function(){"use strict";Konva.Filters.RGBA=function(t){var e,n,i=t.data,a=i.length,r=this.red(),o=this.green(),s=this.blue(),h=this.alpha();for(e=0;e<a;e+=4)n=1-h,i[e]=r*h+i[e]*n,i[e+1]=o*h+i[e+1]*n,i[e+2]=s*h+i[e+2]*n},Konva.Factory.addGetterSetter(Konva.Node,"red",0,function(t){return this._filterUpToDate=!1,t>255?255:t<0?0:Math.round(t)}),Konva.Factory.addGetterSetter(Konva.Node,"green",0,function(t){return this._filterUpToDate=!1,t>255?255:t<0?0:Math.round(t)}),Konva.Factory.addGetterSetter(Konva.Node,"blue",0,Konva.Validators.RGBComponent,Konva.Factory.afterSetFilter),Konva.Factory.addGetterSetter(Konva.Node,"alpha",1,function(t){return this._filterUpToDate=!1,t>1?1:t<0?0:t})}(),function(){"use strict";Konva.Filters.HSV=function(t){var e,n,i,a,r,o=t.data,s=o.length,h=Math.pow(2,this.value()),c=Math.pow(2,this.saturation()),l=Math.abs(this.hue()+360)%360,d=h*c*Math.cos(l*Math.PI/180),u=h*c*Math.sin(l*Math.PI/180),f=.299*h+.701*d+.167*u,g=.587*h-.587*d+.33*u,v=.114*h-.114*d-.497*u,p=.299*h-.299*d-.328*u,m=.587*h+.413*d+.035*u,_=.114*h-.114*d+.293*u,y=.299*h-.3*d+1.25*u,S=.587*h-.586*d-1.05*u,K=.114*h+.886*d-.2*u;for(e=0;e<s;e+=4)n=o[e+0],i=o[e+1],a=o[e+2],r=o[e+3],o[e+0]=f*n+g*i+v*a,o[e+1]=p*n+m*i+_*a,o[e+2]=y*n+S*i+K*a,o[e+3]=r},Konva.Factory.addGetterSetter(Konva.Node,"hue",0,null,Konva.Factory.afterSetFilter),Konva.Factory.addGetterSetter(Konva.Node,"saturation",0,null,Konva.Factory.afterSetFilter),Konva.Factory.addGetterSetter(Konva.Node,"value",0,null,Konva.Factory.afterSetFilter)}(),function(){"use strict";Konva.Factory.addGetterSetter(Konva.Node,"hue",0,null,Konva.Factory.afterSetFilter),Konva.Factory.addGetterSetter(Konva.Node,"saturation",0,null,Konva.Factory.afterSetFilter),Konva.Factory.addGetterSetter(Konva.Node,"luminance",0,null,Konva.Factory.afterSetFilter),Konva.Filters.HSL=function(t){var e,n,i,a,r,o=t.data,s=o.length,h=Math.pow(2,this.saturation()),c=Math.abs(this.hue()+360)%360,l=127*this.luminance(),d=1*h*Math.cos(c*Math.PI/180),u=1*h*Math.sin(c*Math.PI/180),f=.299+.701*d+.167*u,g=.587-.587*d+.33*u,v=.114-.114*d-.497*u,p=.299-.299*d-.328*u,m=.587+.413*d+.035*u,_=.114-.114*d+.293*u,y=.299-.3*d+1.25*u,S=.587-.586*d-1.05*u,K=.114+.886*d-.2*u;for(e=0;e<s;e+=4)n=o[e+0],i=o[e+1],a=o[e+2],r=o[e+3],o[e+0]=f*n+g*i+v*a+l,o[e+1]=p*n+m*i+_*a+l,o[e+2]=y*n+S*i+K*a+l,o[e+3]=r}}(),function(){"use strict";Konva.Filters.Emboss=function(t){var e=10*this.embossStrength(),n=255*this.embossWhiteLevel(),i=this.embossDirection(),a=this.embossBlend(),r=0,o=0,s=t.data,h=t.width,c=t.height,l=4*h,d=c;switch(i){case"top-left":r=-1,o=-1;break;case"top":r=-1,o=0;break;case"top-right":r=-1,o=1;break;case"right":r=0,o=1;break;case"bottom-right":r=1,o=1;break;case"bottom":r=1,o=0;break;case"bottom-left":r=1,o=-1;break;case"left":r=0,o=-1;break;default:Konva.Util.error("Unknown emboss direction: "+i)}do{var u=(d-1)*l,f=r;d+f<1&&(f=0),d+f>c&&(f=0);var g=(d-1+f)*h*4,v=h;do{var p=u+4*(v-1),m=o;v+m<1&&(m=0),v+m>h&&(m=0);var _=g+4*(v-1+m),y=s[p]-s[_],S=s[p+1]-s[_+1],K=s[p+2]-s[_+2],x=y,C=x>0?x:-x;if((S>0?S:-S)>C&&(x=S),(K>0?K:-K)>C&&(x=K),x*=e,a){var b=s[p]+x,w=s[p+1]+x,F=s[p+2]+x;s[p]=b>255?255:b<0?0:b,s[p+1]=w>255?255:w<0?0:w,s[p+2]=F>255?255:F<0?0:F}else{var T=n-x;T<0?T=0:T>255&&(T=255),s[p]=s[p+1]=s[p+2]=T}}while(--v)}while(--d)},Konva.Factory.addGetterSetter(Konva.Node,"embossStrength",.5,null,Konva.Factory.afterSetFilter),Konva.Factory.addGetterSetter(Konva.Node,"embossWhiteLevel",.5,null,Konva.Factory.afterSetFilter),Konva.Factory.addGetterSetter(Konva.Node,"embossDirection","top-left",null,Konva.Factory.afterSetFilter),Konva.Factory.addGetterSetter(Konva.Node,"embossBlend",!1,null,Konva.Factory.afterSetFilter)}(),function(){"use strict";function t(t,e,n,i,a){var r=n-e,o=a-i;return 0===r?i+o/2:0===o?i:o*((t-e)/r)+i}Konva.Filters.Enhance=function(e){var n,i,a,r,o=e.data,s=o.length,h=o[0],c=h,l=o[1],d=l,u=o[2],f=u,g=this.enhance();if(0!==g){for(r=0;r<s;r+=4)(n=o[r+0])<h?h=n:n>c&&(c=n),(i=o[r+1])<l?l=i:i>d&&(d=i),(a=o[r+2])<u?u=a:a>f&&(f=a);var v,p,m,_,y,S,K,x,C;for(c===h&&(c=255,h=0),d===l&&(d=255,l=0),f===u&&(f=255,u=0),g>0?(p=c+g*(255-c),m=h-g*(h-0),y=d+g*(255-d),S=l-g*(l-0),x=f+g*(255-f),C=u-g*(u-0)):(p=c+g*(c-(v=.5*(c+h))),m=h+g*(h-v),y=d+g*(d-(_=.5*(d+l))),S=l+g*(l-_),x=f+g*(f-(K=.5*(f+u))),C=u+g*(u-K)),r=0;r<s;r+=4)o[r+0]=t(o[r+0],h,c,m,p),o[r+1]=t(o[r+1],l,d,S,y),o[r+2]=t(o[r+2],u,f,C,x)}},Konva.Factory.addGetterSetter(Konva.Node,"enhance",0,null,Konva.Factory.afterSetFilter)}(),function(){"use strict";Konva.Filters.Posterize=function(t){var e,n=Math.round(254*this.levels())+1,i=t.data,a=i.length,r=255/n;for(e=0;e<a;e+=1)i[e]=Math.floor(i[e]/r)*r},Konva.Factory.addGetterSetter(Konva.Node,"levels",.5,null,Konva.Factory.afterSetFilter)}(),function(){"use strict";Konva.Filters.Noise=function(t){var e,n=255*this.noise(),i=t.data,a=i.length,r=n/2;for(e=0;e<a;e+=4)i[e+0]+=r-2*r*Math.random(),i[e+1]+=r-2*r*Math.random(),i[e+2]+=r-2*r*Math.random()},Konva.Factory.addGetterSetter(Konva.Node,"noise",.2,null,Konva.Factory.afterSetFilter)}(),function(){"use strict";Konva.Filters.Pixelate=function(t){var e,n,i,a,r,o,s,h,c,l,d,u,f,g,v=Math.ceil(this.pixelSize()),p=t.width,m=t.height,_=Math.ceil(p/v),y=Math.ceil(m/v);if(t=t.data,v<=0)Konva.Util.error("pixelSize value can not be <= 0");else for(u=0;u<_;u+=1)for(f=0;f<y;f+=1){for(a=0,r=0,o=0,s=0,c=(h=u*v)+v,d=(l=f*v)+v,g=0,e=h;e<c;e+=1)if(!(e>=p))for(n=l;n<d;n+=1)n>=m||(a+=t[(i=4*(p*n+e))+0],r+=t[i+1],o+=t[i+2],s+=t[i+3],g+=1);for(a/=g,r/=g,o/=g,s/=g,e=h;e<c;e+=1)if(!(e>=p))for(n=l;n<d;n+=1)n>=m||(t[(i=4*(p*n+e))+0]=a,t[i+1]=r,t[i+2]=o,t[i+3]=s)}},Konva.Factory.addGetterSetter(Konva.Node,"pixelSize",8,null,Konva.Factory.afterSetFilter)}(),function(){"use strict";Konva.Filters.Threshold=function(t){var e,n=255*this.threshold(),i=t.data,a=i.length;for(e=0;e<a;e+=1)i[e]=i[e]<n?0:255},Konva.Factory.addGetterSetter(Konva.Node,"threshold",.5,null,Konva.Factory.afterSetFilter)}(),function(){"use strict";Konva.Filters.Sepia=function(t){var e,n,i,a,r,o,s,h,c,l=t.data,d=t.width,u=t.height,f=4*d;do{e=(u-1)*f,n=d;do{s=.393*(a=l[i=e+4*(n-1)])+.769*(r=l[i+1])+.189*(o=l[i+2]),h=.349*a+.686*r+.168*o,c=.272*a+.534*r+.131*o,l[i]=s>255?255:s,l[i+1]=h>255?255:h,l[i+2]=c>255?255:c,l[i+3]=l[i+3]}while(--n)}while(--u)}}(),function(){"use strict";Konva.Filters.Solarize=function(t){var e=t.data,n=t.width,i=4*n,a=t.height;do{var r=(a-1)*i,o=n;do{var s=r+4*(o-1),h=e[s],c=e[s+1],l=e[s+2];h>127&&(h=255-h),c>127&&(c=255-c),l>127&&(l=255-l),e[s]=h,e[s+1]=c,e[s+2]=l}while(--o)}while(--a)}}(),function(){"use strict";Konva.Filters.Kaleidoscope=function(t){var e,n,i,a,r,o,s,h,c,l=t.width,d=t.height,u=Math.round(this.kaleidoscopePower()),f=Math.round(this.kaleidoscopeAngle()),g=Math.floor(l*(f%360)/360);if(!(u<1)){var v=Konva.Util.createCanvasElement();v.width=l,v.height=d;var p=v.getContext("2d").getImageData(0,0,l,d);!function(t,e,n){var i,a,r,o,s=t.data,h=e.data,c=t.width,l=t.height,d=n.polarCenterX||c/2,u=n.polarCenterY||l/2,f=0,g=0,v=0,p=0,m=Math.sqrt(d*d+u*u);a=c-d,r=l-u,m=(o=Math.sqrt(a*a+r*r))>m?o:m;var _,y,S,K,x=l,C=c,b=360/C*Math.PI/180;for(y=0;y<C;y+=1)for(S=Math.sin(y*b),K=Math.cos(y*b),_=0;_<x;_+=1)a=Math.floor(d+m*_/x*K),f=s[0+(i=4*((r=Math.floor(u+m*_/x*S))*c+a))],g=s[i+1],v=s[i+2],p=s[i+3],h[0+(i=4*(y+_*c))]=f,h[i+1]=g,h[i+2]=v,h[i+3]=p}(t,p,{polarCenterX:l/2,polarCenterY:d/2});for(var m=l/Math.pow(2,u);m<=8;)m*=2,u-=1;var _=m=Math.ceil(m),y=0,S=_,K=1;for(g+m>l&&(y=_,S=0,K=-1),n=0;n<d;n+=1)for(e=y;e!==S;e+=K)h=4*(l*n+Math.round(e+g)%l),a=p.data[h+0],r=p.data[h+1],o=p.data[h+2],s=p.data[h+3],c=4*(l*n+e),p.data[c+0]=a,p.data[c+1]=r,p.data[c+2]=o,p.data[c+3]=s;for(n=0;n<d;n+=1)for(_=Math.floor(m),i=0;i<u;i+=1){for(e=0;e<_+1;e+=1)h=4*(l*n+e),a=p.data[h+0],r=p.data[h+1],o=p.data[h+2],s=p.data[h+3],c=4*(l*n+2*_-e-1),p.data[c+0]=a,p.data[c+1]=r,p.data[c+2]=o,p.data[c+3]=s;_*=2}!function(t,e,n){var i,a,r,o,s,h,c=t.data,l=e.data,d=t.width,u=t.height,f=n.polarCenterX||d/2,g=n.polarCenterY||u/2,v=0,p=0,m=0,_=0,y=Math.sqrt(f*f+g*g);a=d-f,r=u-g,y=(h=Math.sqrt(a*a+r*r))>y?h:y;var S,K,x,C=u,b=d,w=n.polarRotation||0;for(a=0;a<d;a+=1)for(r=0;r<u;r+=1)o=a-f,s=r-g,S=Math.sqrt(o*o+s*s)*C/y,K=(K=(180*Math.atan2(s,o)/Math.PI+360+w)%360)*b/360,x=Math.floor(K),v=c[0+(i=4*(Math.floor(S)*d+x))],p=c[i+1],m=c[i+2],_=c[i+3],l[0+(i=4*(r*d+a))]=v,l[i+1]=p,l[i+2]=m,l[i+3]=_}(p,t,{polarRotation:0})}},Konva.Factory.addGetterSetter(Konva.Node,"kaleidoscopePower",2,null,Konva.Factory.afterSetFilter),Konva.Factory.addGetterSetter(Konva.Node,"kaleidoscopeAngle",0,null,Konva.Factory.afterSetFilter)}(),function(t){"use strict";t.Filters.Contrast=function(t){var e,n=Math.pow((parseInt(this.contrast())+100)/100,2),i=t.data,a=i.length,r=150,o=150,s=150;for(e=0;e<a;e+=4)r=i[e],o=i[e+1],s=i[e+2],r/=255,r-=.5,r*=n,r+=.5,o/=255,o-=.5,o*=n,o+=.5,o*=255,s/=255,s-=.5,s*=n,s+=.5,s*=255,r=(r*=255)<0?0:r>255?255:r,o=o<0?0:o>255?255:o,s=s<0?0:s>255?255:s,i[e]=r,i[e+1]=o,i[e+2]=s},t.Factory.addGetterSetter(t.Node,"contrast",0,null,t.Factory.afterSetFilter)}(Konva),function(){"use strict";Konva.Container=function(t){this.__init(t)},Konva.Util.addMethods(Konva.Container,{__init:function(t){this.children=new Konva.Collection,Konva.Node.call(this,t)},getChildren:function(t){if(!t)return this.children;var e=new Konva.Collection;return this.children.each(function(n){t(n)&&e.push(n)}),e},hasChildren:function(){return this.getChildren().length>0},removeChildren:function(){for(var t,e=Konva.Collection.toCollection(this.children),n=0;n<e.length;n++)delete(t=e[n]).parent,t.index=0,t.remove();return e=null,this.children=new Konva.Collection,this},destroyChildren:function(){for(var t,e=Konva.Collection.toCollection(this.children),n=0;n<e.length;n++)delete(t=e[n]).parent,t.index=0,t.destroy();return e=null,this.children=new Konva.Collection,this},add:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.add(arguments[e]);return this}if(t.getParent())return t.moveTo(this),this;var n=this.children;return this._validateAdd(t),t.index=n.length,t.parent=this,n.push(t),this._fire("add",{child:t}),Konva.DD&&t.isDragging()&&Konva.DD.anim.setLayers(t.getLayer()),this},destroy:function(){return this.hasChildren()&&this.destroyChildren(),Konva.Node.prototype.destroy.call(this),this},find:function(t){return this._generalFind(t,!1)},findOne:function(t){var e=this._generalFind(t,!0);return e.length>0?e[0]:void 0},_generalFind:function(t,e){var n=[];return"string"==typeof t?n=this._findByString(t,e):"function"==typeof t&&(n=this._findByFunction(t,e)),Konva.Collection.toCollection(n)},_findByString:function(t){var e,n,i,a,r,o,s,h=[],c=t.replace(/ /g,"").split(","),l=c.length;for(e=0;e<l;e++)if(i=c[e],Konva.Util.isValidSelector(i)||(Konva.Util.warn('Selector "'+i+'" is invalid. Allowed selectors examples are "#foo", ".bar" or "Group".'),Konva.Util.warn('If you have a custom shape with such className, please change it to start with upper letter like "Triangle".'),Konva.Util.warn("Konva is awesome, right?")),"#"===i.charAt(0))(r=this._getNodeById(i.slice(1)))&&h.push(r);else if("."===i.charAt(0))a=this._getNodesByName(i.slice(1)),h=h.concat(a);else for(s=(o=this.getChildren()).length,n=0;n<s;n++)h=h.concat(o[n]._get(i));return h},_findByFunction:function(t,e){var n=[],i=function(a){if(!(e&&n.length>0)){var r=a.getChildren(),o=r.length;t(a)&&(n=n.concat(a));for(var s=0;s<o;s++)i(r[s])}};return i(this),n},_getNodeById:function(t){var e=Konva.ids[t];return void 0!==e&&this.isAncestorOf(e)?e:null},_getNodesByName:function(t){var e=Konva.names[t]||[];return this._getDescendants(e)},_get:function(t){for(var e=Konva.Node.prototype._get.call(this,t),n=this.getChildren(),i=n.length,a=0;a<i;a++)e=e.concat(n[a]._get(t));return e},toObject:function(){var t=Konva.Node.prototype.toObject.call(this);t.children=[];for(var e=this.getChildren(),n=e.length,i=0;i<n;i++){var a=e[i];t.children.push(a.toObject())}return t},_getDescendants:function(t){for(var e=[],n=t.length,i=0;i<n;i++){var a=t[i];this.isAncestorOf(a)&&e.push(a)}return e},isAncestorOf:function(t){for(var e=t.getParent();e;){if(e._id===this._id)return!0;e=e.getParent()}return!1},clone:function(t){var e=Konva.Node.prototype.clone.call(this,t);return this.getChildren().each(function(t){e.add(t.clone())}),e},getAllIntersections:function(t){var e=[];return this.find("Shape").each(function(n){n.isVisible()&&n.intersects(t)&&e.push(n)}),e},_setChildrenIndices:function(){this.children.each(function(t,e){t.index=e})},drawScene:function(t,e,n){var i=this.getLayer(),a=t||i&&i.getCanvas(),r=a&&a.getContext(),o=this._cache.canvas,s=o&&o.scene;return(this.isVisible()||n)&&(!n&&s?(r.save(),i._applyTransform(this,r,e),this._drawCachedSceneCanvas(r),r.restore()):this._drawChildren(a,"drawScene",e,!1,n)),this},drawHit:function(t,e,n){var i=this.getLayer(),a=t||i&&i.hitCanvas,r=a&&a.getContext(),o=this._cache.canvas,s=o&&o.hit;return(this.shouldDrawHit(a)||n)&&(i&&i.clearHitCache(),!n&&s?(r.save(),i._applyTransform(this,r,e),this._drawCachedHitCanvas(r),r.restore()):this._drawChildren(a,"drawHit",e)),this},_drawChildren:function(t,e,n,i,a){var r,o,s=this.getLayer(),h=t&&t.getContext(),c=this.getClipWidth(),l=this.getClipHeight(),d=this.getClipFunc(),u=c&&l||d;if(u&&s){h.save();var f=this.getAbsoluteTransform(n),g=f.getMatrix();h.transform(g[0],g[1],g[2],g[3],g[4],g[5]),h.beginPath(),d?d.call(this,h,this):(r=this.getClipX(),o=this.getClipY(),h.rect(r,o,c,l)),h.clip(),g=f.copy().invert().getMatrix(),h.transform(g[0],g[1],g[2],g[3],g[4],g[5])}this.children.each(function(r){r[e](t,n,i,a)}),u&&h.restore()},shouldDrawHit:function(t){var e=this.getLayer(),n=Konva.DD&&Konva.isDragging()&&-1!==Konva.DD.anim.getLayers().indexOf(e);return t&&t.isCache||e&&e.hitGraphEnabled()&&this.isVisible()&&!n},getClientRect:function(t){var e,n,i,a,r=(t=t||{}).skipTransform,o=t.relativeTo,s={x:0,y:0,width:0,height:0},h=this;this.children.each(function(t){if(t.getVisible()){var r=t.getClientRect({relativeTo:h});void 0===e?(e=r.x,n=r.y,i=r.x+r.width,a=r.y+r.height):(e=Math.min(e,r.x),n=Math.min(n,r.y),i=Math.max(i,r.x+r.width),a=Math.max(a,r.y+r.height))}});for(var c=this.find("Shape"),l=!1,d=0;d<c.length;d++){if(c[d].getVisible()){l=!0;break}}return l&&(s={x:e,y:n,width:i-e,height:a-n}),r?s:this._transformedRect(s,o)}}),Konva.Util.extend(Konva.Container,Konva.Node),Konva.Container.prototype.get=Konva.Container.prototype.find,Konva.Factory.addComponentsGetterSetter(Konva.Container,"clip",["x","y","width","height"]),Konva.Factory.addGetterSetter(Konva.Container,"clipX"),Konva.Factory.addGetterSetter(Konva.Container,"clipY"),Konva.Factory.addGetterSetter(Konva.Container,"clipWidth"),Konva.Factory.addGetterSetter(Konva.Container,"clipHeight"),Konva.Factory.addGetterSetter(Konva.Container,"clipFunc"),Konva.Collection.mapMethods(Konva.Container)}(),function(t){"use strict";var e="hasShadow",n="shadowRGBA";function i(t){t.fill()}function a(t){t.stroke()}function r(t){t.fill()}function o(t){t.stroke()}function s(){this._clearCache(e)}function h(){this._clearCache(n)}t.Shape=function(t){this.__init(t)},t.Util.addMethods(t.Shape,{__init:function(e){this.nodeType="Shape",this._fillFunc=i,this._strokeFunc=a,this._fillFuncHit=r,this._strokeFuncHit=o;for(var n,c=t.shapes;!(n=t.Util.getRandomColor())||n in c;);this.colorKey=n,c[n]=this,t.Node.call(this,e),this.on("shadowColorChange.konva shadowBlurChange.konva shadowOffsetChange.konva shadowOpacityChange.konva shadowEnabledChange.konva",s),this.on("shadowColorChange.konva shadowOpacityChange.konva shadowEnabledChange.konva",h)},hasChildren:function(){return!1},getChildren:function(){return[]},getContext:function(){return this.getLayer().getContext()},getCanvas:function(){return this.getLayer().getCanvas()},hasShadow:function(){return this._getCache(e,this._hasShadow)},_hasShadow:function(){return this.getShadowEnabled()&&0!==this.getShadowOpacity()&&!!(this.getShadowColor()||this.getShadowBlur()||this.getShadowOffsetX()||this.getShadowOffsetY())},getShadowRGBA:function(){return this._getCache(n,this._getShadowRGBA)},_getShadowRGBA:function(){if(this.hasShadow()){var e=t.Util.colorToRGBA(this.shadowColor());return"rgba("+e.r+","+e.g+","+e.b+","+e.a*(this.getShadowOpacity()||1)+")"}},hasFill:function(){return!!(this.getFill()||this.getFillPatternImage()||this.getFillLinearGradientColorStops()||this.getFillRadialGradientColorStops())},hasStroke:function(){return this.strokeEnabled()&&!(!this.stroke()&&!this.getStrokeLinearGradientColorStops())},intersects:function(t){var e=this.getStage().bufferHitCanvas;return e.getContext().clear(),this.drawHit(e),e.context.getImageData(Math.round(t.x),Math.round(t.y),1,1).data[3]>0},destroy:function(){return t.Node.prototype.destroy.call(this),delete t.shapes[this.colorKey],this},_useBufferCanvas:function(t){return!t&&this.perfectDrawEnabled()&&1!==this.getAbsoluteOpacity()&&this.hasFill()&&this.hasStroke()&&this.getStage()||this.perfectDrawEnabled()&&this.hasShadow()&&1!==this.getAbsoluteOpacity()&&this.hasFill()&&this.hasStroke()&&this.getStage()},getSelfRect:function(){var t=this.getSize();return{x:this._centroid?Math.round(-t.width/2):0,y:this._centroid?Math.round(-t.height/2):0,width:t.width,height:t.height}},getClientRect:function(t){var e=(t=t||{}).skipTransform,n=t.relativeTo,i=this.getSelfRect(),a=this.hasStroke()&&this.strokeWidth()||0,r=i.width+a,o=i.height+a,s=this.hasShadow()?this.shadowOffsetX():0,h=this.hasShadow()?this.shadowOffsetY():0,c=r+Math.abs(s),l=o+Math.abs(h),d=this.hasShadow()&&this.shadowBlur()||0,u=c+2*d,f=l+2*d,g=0;Math.round(a/2)!==a/2&&(g=1);var v={width:u+g,height:f+g,x:-Math.round(a/2+d)+Math.min(s,0)+i.x,y:-Math.round(a/2+d)+Math.min(h,0)+i.y};return e?v:this._transformedRect(v,n)},drawScene:function(t,e,n,i){var a,r,o=this.getLayer(),s=t||o.getCanvas(),h=s.getContext(),c=this._cache.canvas,l=this.sceneFunc(),d=this.hasShadow(),u=this.hasStroke();if(!this.isVisible()&&!n)return this;if(c)return h.save(),o._applyTransform(this,h,e),this._drawCachedSceneCanvas(h),h.restore(),this;if(!l)return this;if(h.save(),this._useBufferCanvas(n)&&!i){if((r=(a=this.getStage().bufferCanvas).getContext()).clear(),r.save(),r._applyLineJoin(this),!n)if(o)o._applyTransform(this,r,e);else{var f=this.getAbsoluteTransform(e).getMatrix();h.transform(f[0],f[1],f[2],f[3],f[4],f[5])}l.call(this,r),r.restore();var g=a.pixelRatio;d&&!s.hitCanvas?(h.save(),h._applyShadow(this),h._applyOpacity(this),h._applyGlobalCompositeOperation(this),h.drawImage(a._canvas,0,0,a.width/g,a.height/g),h.restore()):(h._applyOpacity(this),h._applyGlobalCompositeOperation(this),h.drawImage(a._canvas,0,0,a.width/g,a.height/g))}else{if(h._applyLineJoin(this),!n)if(o)o._applyTransform(this,h,e);else{var v=this.getAbsoluteTransform(e).getMatrix();h.transform(v[0],v[1],v[2],v[3],v[4],v[5])}d&&u&&!s.hitCanvas?(h.save(),n||(h._applyOpacity(this),h._applyGlobalCompositeOperation(this)),h._applyShadow(this),l.call(this,h),h.restore(),this.hasFill()&&this.getShadowForStrokeEnabled()&&l.call(this,h)):d&&!s.hitCanvas?(h.save(),n||(h._applyOpacity(this),h._applyGlobalCompositeOperation(this)),h._applyShadow(this),l.call(this,h),h.restore()):(n||(h._applyOpacity(this),h._applyGlobalCompositeOperation(this)),l.call(this,h))}return h.restore(),this},drawHit:function(t,e,n){var i=this.getLayer(),a=t||i.hitCanvas,r=a.getContext(),o=this.hitFunc()||this.sceneFunc(),s=this._cache.canvas,h=s&&s.hit;if(!this.shouldDrawHit(a)&&!n)return this;if(i&&i.clearHitCache(),h)return r.save(),i._applyTransform(this,r,e),this._drawCachedHitCanvas(r),r.restore(),this;if(!o)return this;if(r.save(),r._applyLineJoin(this),!n)if(i)i._applyTransform(this,r,e);else{var c=this.getAbsoluteTransform(e).getMatrix();r.transform(c[0],c[1],c[2],c[3],c[4],c[5])}return o.call(this,r),r.restore(),this},drawHitFromCache:function(e){var n,i,a,r,o,s=e||0,h=this._cache.canvas,c=this._getCachedSceneCanvas(),l=h.hit,d=l.getContext(),u=l.getWidth(),f=l.getHeight();d.clear(),d.drawImage(c._canvas,0,0,u,f);try{for(a=(i=(n=d.getImageData(0,0,u,f)).data).length,r=t.Util._hexToRgb(this.colorKey),o=0;o<a;o+=4)i[o+3]>s?(i[o]=r.r,i[o+1]=r.g,i[o+2]=r.b,i[o+3]=255):i[o+3]=0;d.putImageData(n,0,0)}catch(e){t.Util.error("Unable to draw hit graph from cached scene canvas. "+e.message)}return this}}),t.Util.extend(t.Shape,t.Node),t.Factory.addGetterSetter(t.Shape,"stroke"),t.Factory.addGetterSetter(t.Shape,"strokeWidth",2),t.Factory.addGetterSetter(t.Shape,"strokeHitEnabled",!0),t.Factory.addGetterSetter(t.Shape,"perfectDrawEnabled",!0),t.Factory.addGetterSetter(t.Shape,"shadowForStrokeEnabled",!0),t.Factory.addGetterSetter(t.Shape,"lineJoin"),t.Factory.addGetterSetter(t.Shape,"lineCap"),t.Factory.addGetterSetter(t.Shape,"sceneFunc"),t.Factory.addGetterSetter(t.Shape,"hitFunc"),t.Factory.addGetterSetter(t.Shape,"dash"),t.Factory.addGetterSetter(t.Shape,"dashOffset",0),t.Factory.addGetterSetter(t.Shape,"shadowColor"),t.Factory.addGetterSetter(t.Shape,"shadowBlur"),t.Factory.addGetterSetter(t.Shape,"shadowOpacity"),t.Factory.addComponentsGetterSetter(t.Shape,"shadowOffset",["x","y"]),t.Factory.addGetterSetter(t.Shape,"shadowOffsetX",0),t.Factory.addGetterSetter(t.Shape,"shadowOffsetY",0),t.Factory.addGetterSetter(t.Shape,"fillPatternImage"),t.Factory.addGetterSetter(t.Shape,"fill"),t.Factory.addGetterSetter(t.Shape,"fillPatternX",0),t.Factory.addGetterSetter(t.Shape,"fillPatternY",0),t.Factory.addGetterSetter(t.Shape,"fillLinearGradientColorStops"),t.Factory.addGetterSetter(t.Shape,"strokeLinearGradientColorStops"),t.Factory.addGetterSetter(t.Shape,"fillRadialGradientStartRadius",0),t.Factory.addGetterSetter(t.Shape,"fillRadialGradientEndRadius",0),t.Factory.addGetterSetter(t.Shape,"fillRadialGradientColorStops"),t.Factory.addGetterSetter(t.Shape,"fillPatternRepeat","repeat"),t.Factory.addGetterSetter(t.Shape,"fillEnabled",!0),t.Factory.addGetterSetter(t.Shape,"strokeEnabled",!0),t.Factory.addGetterSetter(t.Shape,"shadowEnabled",!0),t.Factory.addGetterSetter(t.Shape,"dashEnabled",!0),t.Factory.addGetterSetter(t.Shape,"strokeScaleEnabled",!0),t.Factory.addGetterSetter(t.Shape,"fillPriority","color"),t.Factory.addComponentsGetterSetter(t.Shape,"fillPatternOffset",["x","y"]),t.Factory.addGetterSetter(t.Shape,"fillPatternOffsetX",0),t.Factory.addGetterSetter(t.Shape,"fillPatternOffsetY",0),t.Factory.addComponentsGetterSetter(t.Shape,"fillPatternScale",["x","y"]),t.Factory.addGetterSetter(t.Shape,"fillPatternScaleX",1),t.Factory.addGetterSetter(t.Shape,"fillPatternScaleY",1),t.Factory.addComponentsGetterSetter(t.Shape,"fillLinearGradientStartPoint",["x","y"]),t.Factory.addComponentsGetterSetter(t.Shape,"strokeLinearGradientStartPoint",["x","y"]),t.Factory.addGetterSetter(t.Shape,"fillLinearGradientStartPointX",0),t.Factory.addGetterSetter(t.Shape,"strokeLinearGradientStartPointX",0),t.Factory.addGetterSetter(t.Shape,"fillLinearGradientStartPointY",0),t.Factory.addGetterSetter(t.Shape,"strokeLinearGradientStartPointY",0),t.Factory.addComponentsGetterSetter(t.Shape,"fillLinearGradientEndPoint",["x","y"]),t.Factory.addComponentsGetterSetter(t.Shape,"strokeLinearGradientEndPoint",["x","y"]),t.Factory.addGetterSetter(t.Shape,"fillLinearGradientEndPointX",0),t.Factory.addGetterSetter(t.Shape,"strokeLinearGradientEndPointX",0),t.Factory.addGetterSetter(t.Shape,"fillLinearGradientEndPointY",0),t.Factory.addGetterSetter(t.Shape,"strokeLinearGradientEndPointY",0),t.Factory.addComponentsGetterSetter(t.Shape,"fillRadialGradientStartPoint",["x","y"]),t.Factory.addGetterSetter(t.Shape,"fillRadialGradientStartPointX",0),t.Factory.addGetterSetter(t.Shape,"fillRadialGradientStartPointY",0),t.Factory.addComponentsGetterSetter(t.Shape,"fillRadialGradientEndPoint",["x","y"]),t.Factory.addGetterSetter(t.Shape,"fillRadialGradientEndPointX",0),t.Factory.addGetterSetter(t.Shape,"fillRadialGradientEndPointY",0),t.Factory.addGetterSetter(t.Shape,"fillPatternRotation",0),t.Factory.backCompat(t.Shape,{dashArray:"dash",getDashArray:"getDash",setDashArray:"getDash",drawFunc:"sceneFunc",getDrawFunc:"getSceneFunc",setDrawFunc:"setSceneFunc",drawHitFunc:"hitFunc",getDrawHitFunc:"getHitFunc",setDrawHitFunc:"setHitFunc"}),t.Collection.mapMethods(t.Shape)}(Konva),function(){"use strict";var t="_",e=["mousedown","mousemove","mouseup","mouseout","touchstart","touchmove","touchend","mouseover","wheel","contextmenu"],n=e.length;function i(e,n){e.content.addEventListener(n,function(i){e[t+n](i)},!1)}Konva.Stage=function(t){this.___init(t)},Konva.Util.addMethods(Konva.Stage,{___init:function(t){this.nodeType="Stage",Konva.Container.call(this,t),this._id=Konva.idCounter++,this._buildDOM(),this._bindContentEvents(),this._enableNestedTransforms=!1,Konva.stages.push(this)},_validateAdd:function(t){"Layer"!==t.getType()&&Konva.Util.throw("You may only add layers to the stage.")},setContainer:function(t){if("string"==typeof t){if("."===t.charAt(0)){var e=t.slice(1);t=Konva.document.getElementsByClassName(e)[0]}else{var n;n="#"!==t.charAt(0)?t:t.slice(1),t=Konva.document.getElementById(n)}if(!t)throw"Can not find container in document with id "+n}return this._setAttr("container",t),this},shouldDrawHit:function(){return!0},draw:function(){return Konva.Node.prototype.draw.call(this),this},setHeight:function(t){return Konva.Node.prototype.setHeight.call(this,t),this._resizeDOM(),this},setWidth:function(t){return Konva.Node.prototype.setWidth.call(this,t),this._resizeDOM(),this},clear:function(){var t,e=this.children,n=e.length;for(t=0;t<n;t++)e[t].clear();return this},clone:function(t){return t||(t={}),t.container=Konva.document.createElement("div"),Konva.Container.prototype.clone.call(this,t)},destroy:function(){var t=this.content;Konva.Container.prototype.destroy.call(this),t&&Konva.Util._isInDocument(t)&&this.getContainer().removeChild(t);var e=Konva.stages.indexOf(this);return e>-1&&Konva.stages.splice(e,1),this},getPointerPosition:function(){return this.pointerPos},getStage:function(){return this},getContent:function(){return this.content},toDataURL:function(t){var e=(t=t||{}).mimeType||null,n=t.quality||null,i=t.x||0,a=t.y||0,r=new Konva.SceneCanvas({width:t.width||this.getWidth(),height:t.height||this.getHeight(),pixelRatio:t.pixelRatio||1}),o=r.getContext()._context,s=this.children;(i||a)&&o.translate(-1*i,-1*a),s.each(function(t){var e=t.getCanvas().getWidth(),n=t.getCanvas().getHeight(),i=t.getCanvas().getPixelRatio();o.drawImage(t.getCanvas()._canvas,0,0,e/i,n/i)});var h=r.toDataURL(e,n);return t.callback&&t.callback(h),h},toImage:function(t){var e=t.callback;t.callback=function(t){Konva.Util._getImage(t,function(t){e(t)})},this.toDataURL(t)},getIntersection:function(t,e){var n,i,a=this.getChildren();for(n=a.length-1;n>=0;n--)if(i=a[n].getIntersection(t,e))return i;return null},_resizeDOM:function(){if(this.content){var t,e,n=this.getWidth(),i=this.getHeight(),a=this.getChildren(),r=a.length;for(this.content.style.width=n+"px",this.content.style.height=i+"px",this.bufferCanvas.setSize(n,i),this.bufferHitCanvas.setSize(n,i),t=0;t<r;t++)(e=a[t]).setSize(n,i),e.draw()}},add:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return Konva.Container.prototype.add.call(this,t),t._setCanvasSize(this.width(),this.height()),t.draw(),Konva.isBrowser&&this.content.appendChild(t.canvas._canvas),this},getParent:function(){return null},getLayer:function(){return null},getLayers:function(){return this.getChildren()},_bindContentEvents:function(){if(Konva.isBrowser)for(var t=0;t<n;t++)i(this,e[t])},_mouseover:function(t){Konva.UA.mobile||(this._setPointerPosition(t),this._fire("contentMouseover",{evt:t}))},_mouseout:function(t){if(!Konva.UA.mobile){this._setPointerPosition(t);var e=this.targetShape;e&&!Konva.isDragging()&&(e._fireAndBubble("mouseout",{evt:t}),e._fireAndBubble("mouseleave",{evt:t}),this.targetShape=null),this.pointerPos=void 0,this._fire("contentMouseout",{evt:t})}},_mousemove:function(t){return Konva.UA.ieMobile?this._touchmove(t):void 0===t.movementX&&void 0===t.movementY||0!==t.movementY||0!==t.movementX?Konva.UA.mobile?null:(this._setPointerPosition(t),Konva.isDragging()||((e=this.getIntersection(this.getPointerPosition()))&&e.isListening()?Konva.isDragging()||this.targetShape&&this.targetShape._id===e._id?e._fireAndBubble("mousemove",{evt:t}):(this.targetShape&&(this.targetShape._fireAndBubble("mouseout",{evt:t},e),this.targetShape._fireAndBubble("mouseleave",{evt:t},e)),e._fireAndBubble("mouseover",{evt:t},this.targetShape),e._fireAndBubble("mouseenter",{evt:t},this.targetShape),this.targetShape=e):(this.targetShape&&!Konva.isDragging()&&(this.targetShape._fireAndBubble("mouseout",{evt:t}),this.targetShape._fireAndBubble("mouseleave",{evt:t}),this.targetShape=null),this._fire("mousemove",{evt:t,target:this,currentTarget:this})),this._fire("contentMousemove",{evt:t})),void(t.cancelable&&t.preventDefault())):null;var e},_mousedown:function(t){if(Konva.UA.ieMobile)return this._touchstart(t);if(!Konva.UA.mobile){this._setPointerPosition(t);var e=this.getIntersection(this.getPointerPosition());Konva.listenClickTap=!0,e&&e.isListening()?(this.clickStartShape=e,e._fireAndBubble("mousedown",{evt:t})):this._fire("mousedown",{evt:t,target:this,currentTarget:this}),this._fire("contentMousedown",{evt:t})}t.cancelable&&t.preventDefault()},_mouseup:function(t){if(Konva.UA.ieMobile)return this._touchend(t);if(!Konva.UA.mobile){this._setPointerPosition(t);var e=this.getIntersection(this.getPointerPosition()),n=this.clickStartShape,i=this.clickEndShape,a=!1,r=Konva.DD;Konva.inDblClickWindow?(a=!0,clearTimeout(this.dblTimeout)):r&&r.justDragged?r&&(r.justDragged=!1):(Konva.inDblClickWindow=!0,clearTimeout(this.dblTimeout)),this.dblTimeout=setTimeout(function(){Konva.inDblClickWindow=!1},Konva.dblClickWindow),e&&e.isListening()?(this.clickEndShape=e,e._fireAndBubble("mouseup",{evt:t}),Konva.listenClickTap&&n&&n._id===e._id&&(e._fireAndBubble("click",{evt:t}),a&&i&&i._id===e._id&&e._fireAndBubble("dblclick",{evt:t}))):(this._fire("mouseup",{evt:t,target:this,currentTarget:this}),this._fire("click",{evt:t,target:this,currentTarget:this}),a&&this._fire("dblclick",{evt:t,target:this,currentTarget:this})),this._fire("contentMouseup",{evt:t}),Konva.listenClickTap&&(this._fire("contentClick",{evt:t}),a&&this._fire("contentDblclick",{evt:t})),Konva.listenClickTap=!1}t.cancelable&&t.preventDefault()},_contextmenu:function(t){this._setPointerPosition(t);var e=this.getIntersection(this.getPointerPosition());e&&e.isListening()?e._fireAndBubble("contextmenu",{evt:t}):this._fire("contextmenu",{evt:t,target:this,currentTarget:this}),this._fire("contentContextmenu",{evt:t})},_touchstart:function(t){this._setPointerPosition(t);var e=this.getIntersection(this.getPointerPosition());Konva.listenClickTap=!0,e&&e.isListening()?(this.tapStartShape=e,e._fireAndBubble("touchstart",{evt:t}),e.isListening()&&e.preventDefault()&&t.cancelable&&t.preventDefault()):this._fire("touchstart",{evt:t,target:this,currentTarget:this}),this._fire("contentTouchstart",{evt:t})},_touchend:function(t){this._setPointerPosition(t);var e=this.getIntersection(this.getPointerPosition()),n=!1;Konva.inDblClickWindow?(n=!0,clearTimeout(this.dblTimeout)):(Konva.inDblClickWindow=!0,clearTimeout(this.dblTimeout)),this.dblTimeout=setTimeout(function(){Konva.inDblClickWindow=!1},Konva.dblClickWindow),e&&e.isListening()?(e._fireAndBubble("touchend",{evt:t}),Konva.listenClickTap&&this.tapStartShape&&e._id===this.tapStartShape._id&&(e._fireAndBubble("tap",{evt:t}),n&&e._fireAndBubble("dbltap",{evt:t})),e.isListening()&&e.preventDefault()&&t.cancelable&&t.preventDefault()):(this._fire("touchend",{evt:t,target:this,currentTarget:this}),this._fire("tap",{evt:t,target:this,currentTarget:this}),n&&this._fire("dbltap",{evt:t,target:this,currentTarget:this})),this._fire("contentTouchend",{evt:t}),Konva.listenClickTap&&(this._fire("contentTap",{evt:t}),n&&this._fire("contentDbltap",{evt:t})),Konva.listenClickTap=!1},_touchmove:function(t){this._setPointerPosition(t);var e,n=Konva.DD;Konva.isDragging()||((e=this.getIntersection(this.getPointerPosition()))&&e.isListening()?(e._fireAndBubble("touchmove",{evt:t}),e.isListening()&&e.preventDefault()&&t.cancelable&&t.preventDefault()):this._fire("touchmove",{evt:t,target:this,currentTarget:this}),this._fire("contentTouchmove",{evt:t})),n&&Konva.isDragging()&&Konva.DD.node.preventDefault()&&t.cancelable&&t.preventDefault()},_wheel:function(t){this._setPointerPosition(t);var e=this.getIntersection(this.getPointerPosition());e&&e.isListening()?e._fireAndBubble("wheel",{evt:t}):this._fire("wheel",{evt:t,target:this,currentTarget:this}),this._fire("contentWheel",{evt:t})},_setPointerPosition:function(t){var e=this._getContentPosition(),n=null,i=null;if(void 0!==(t=t||window.event).touches){if(t.touches.length>0){var a=t.touches[0];n=a.clientX-e.left,i=a.clientY-e.top}}else n=t.clientX-e.left,i=t.clientY-e.top;null!==n&&null!==i&&(this.pointerPos={x:n,y:i})},_getContentPosition:function(){var t=this.content.getBoundingClientRect?this.content.getBoundingClientRect():{top:0,left:0};return{top:t.top,left:t.left}},_buildDOM:function(){if(this.bufferCanvas=new Konva.SceneCanvas,this.bufferHitCanvas=new Konva.HitCanvas({pixelRatio:1}),Konva.isBrowser){var t=this.getContainer();if(!t)throw"Stage has no container. A container is required.";t.innerHTML="",this.content=Konva.document.createElement("div"),this.content.style.position="relative",this.content.className="konvajs-content",this.content.setAttribute("role","presentation"),t.appendChild(this.content),this._resizeDOM()}},_onContent:function(t,e){var n,i,a=t.split(" "),r=a.length;for(n=0;n<r;n++)i=a[n],this.content.addEventListener(i,e,!1)},cache:function(){Konva.Util.warn("Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.")},clearCache:function(){}}),Konva.Util.extend(Konva.Stage,Konva.Container),Konva.Factory.addGetter(Konva.Stage,"container"),Konva.Factory.addOverloadedGetterSetter(Konva.Stage,"container")}(),function(t){"use strict";t.BaseLayer=function(t){this.___init(t)},t.Util.addMethods(t.BaseLayer,{___init:function(e){this.nodeType="Layer",t.Container.call(this,e)},createPNGStream:function(){return this.canvas._canvas.createPNGStream()},getCanvas:function(){return this.canvas},getHitCanvas:function(){return this.hitCanvas},getContext:function(){return this.getCanvas().getContext()},clear:function(t){return this.getContext().clear(t),this},clearHitCache:function(){this._hitImageData=void 0},setZIndex:function(e){t.Node.prototype.setZIndex.call(this,e);var n=this.getStage();return n&&(n.content.removeChild(this.getCanvas()._canvas),e<n.getChildren().length-1?n.content.insertBefore(this.getCanvas()._canvas,n.getChildren()[e+1].getCanvas()._canvas):n.content.appendChild(this.getCanvas()._canvas)),this},moveToTop:function(){t.Node.prototype.moveToTop.call(this);var e=this.getStage();return e&&(e.content.removeChild(this.getCanvas()._canvas),e.content.appendChild(this.getCanvas()._canvas)),this},moveUp:function(){if(!t.Node.prototype.moveUp.call(this))return this;var e=this.getStage();return e?(e.content.removeChild(this.getCanvas()._canvas),this.index<e.getChildren().length-1?e.content.insertBefore(this.getCanvas()._canvas,e.getChildren()[this.index+1].getCanvas()._canvas):e.content.appendChild(this.getCanvas()._canvas),this):this},moveDown:function(){if(t.Node.prototype.moveDown.call(this)){var e=this.getStage();if(e){var n=e.getChildren();e.content.removeChild(this.getCanvas()._canvas),e.content.insertBefore(this.getCanvas()._canvas,n[this.index+1].getCanvas()._canvas)}}return this},moveToBottom:function(){if(t.Node.prototype.moveToBottom.call(this)){var e=this.getStage();if(e){var n=e.getChildren();e.content.removeChild(this.getCanvas()._canvas),e.content.insertBefore(this.getCanvas()._canvas,n[1].getCanvas()._canvas)}}return this},getLayer:function(){return this},remove:function(){var e=this.getCanvas()._canvas;return t.Node.prototype.remove.call(this),e&&e.parentNode&&t.Util._isInDocument(e)&&e.parentNode.removeChild(e),this},getStage:function(){return this.parent},setSize:function(t,e){return this.canvas.setSize(t,e),this},getWidth:function(){if(this.parent)return this.parent.getWidth()},setWidth:function(){t.Util.warn('Can not change width of layer. Use "stage.width(value)" function instead.')},getHeight:function(){if(this.parent)return this.parent.getHeight()},setHeight:function(){t.Util.warn('Can not change height of layer. Use "stage.height(value)" function instead.')},_applyTransform:function(t,e,n){var i=t.getAbsoluteTransform(n).getMatrix();e.transform(i[0],i[1],i[2],i[3],i[4],i[5])}}),t.Util.extend(t.BaseLayer,t.Container),t.Factory.addGetterSetter(t.BaseLayer,"clearBeforeDraw",!0),t.Collection.mapMethods(t.BaseLayer)}(Konva),function(){"use strict";var t=[{x:0,y:0},{x:-1,y:0},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:1,y:0},{x:1,y:1},{x:0,y:1},{x:-1,y:1}],e=t.length;Konva.Layer=function(t){this.____init(t)},Konva.Util.addMethods(Konva.Layer,{____init:function(t){this.nodeType="Layer",this.canvas=new Konva.SceneCanvas,this.hitCanvas=new Konva.HitCanvas({pixelRatio:1}),Konva.BaseLayer.call(this,t)},_setCanvasSize:function(t,e){this.canvas.setSize(t,e),this.hitCanvas.setSize(t,e)},_validateAdd:function(t){var e=t.getType();"Group"!==e&&"Shape"!==e&&Konva.Util.throw("You may only add groups and shapes to a layer.")},getIntersection:function(n,i){var a,r,o,s;if(!this.hitGraphEnabled()||!this.isVisible())return null;for(var h=1,c=!1;;){for(r=0;r<e;r++){if(o=t[r],(s=(a=this._getIntersection({x:n.x+o.x*h,y:n.y+o.y*h})).shape)&&i)return s.findAncestor(i,!0);if(s)return s;if(c=!!a.antialiased,!a.antialiased)break}if(!c)return null;h+=1}},_getImageData:function(t,e){var n=this.hitCanvas.width||1,i=this.hitCanvas.height||1,a=Math.round(e)*n+Math.round(t);return this._hitImageData||(this._hitImageData=this.hitCanvas.context.getImageData(0,0,n,i)),[this._hitImageData.data[4*a+0],this._hitImageData.data[4*a+1],this._hitImageData.data[4*a+2],this._hitImageData.data[4*a+3]]},_getIntersection:function(t){var e,n,i=this.hitCanvas.pixelRatio,a=this.hitCanvas.context.getImageData(Math.round(t.x*i),Math.round(t.y*i),1,1).data,r=a[3];return 255===r?(e=Konva.Util._rgbToHex(a[0],a[1],a[2]),(n=Konva.shapes["#"+e])?{shape:n}:{antialiased:!0}):r>0?{antialiased:!0}:{}},drawScene:function(t,e){var n=this.getLayer(),i=t||n&&n.getCanvas();return this._fire("beforeDraw",{node:this}),this.getClearBeforeDraw()&&i.getContext().clear(),Konva.Container.prototype.drawScene.call(this,i,e),this._fire("draw",{node:this}),this},drawHit:function(t,e){var n=this.getLayer(),i=t||n&&n.hitCanvas;return n&&n.getClearBeforeDraw()&&n.getHitCanvas().getContext().clear(),Konva.Container.prototype.drawHit.call(this,i,e),this.imageData=null,this},clear:function(t){return Konva.BaseLayer.prototype.clear.call(this,t),this.getHitCanvas().getContext().clear(t),this.imageData=null,this},setVisible:function(t){return Konva.Node.prototype.setVisible.call(this,t),t?(this.getCanvas()._canvas.style.display="block",this.hitCanvas._canvas.style.display="block"):(this.getCanvas()._canvas.style.display="none",this.hitCanvas._canvas.style.display="none"),this},enableHitGraph:function(){return this.setHitGraphEnabled(!0),this},disableHitGraph:function(){return this.setHitGraphEnabled(!1),this},setSize:function(t,e){return Konva.BaseLayer.prototype.setSize.call(this,t,e),this.hitCanvas.setSize(t,e),this}}),Konva.Util.extend(Konva.Layer,Konva.BaseLayer),Konva.Factory.addGetterSetter(Konva.Layer,"hitGraphEnabled",!0),Konva.Collection.mapMethods(Konva.Layer)}(),function(){"use strict";Konva.FastLayer=function(t){this.____init(t)},Konva.Util.addMethods(Konva.FastLayer,{____init:function(t){this.nodeType="Layer",this.canvas=new Konva.SceneCanvas,Konva.BaseLayer.call(this,t)},_validateAdd:function(t){"Shape"!==t.getType()&&Konva.Util.throw("You may only add shapes to a fast layer.")},_setCanvasSize:function(t,e){this.canvas.setSize(t,e)},hitGraphEnabled:function(){return!1},getIntersection:function(){return null},drawScene:function(t){var e=this.getLayer(),n=t||e&&e.getCanvas();return this.getClearBeforeDraw()&&n.getContext().clear(),Konva.Container.prototype.drawScene.call(this,n),this},draw:function(){return this.drawScene(),this},setVisible:function(t){return Konva.Node.prototype.setVisible.call(this,t),this.getCanvas()._canvas.style.display=t?"block":"none",this}}),Konva.Util.extend(Konva.FastLayer,Konva.BaseLayer),Konva.Collection.mapMethods(Konva.FastLayer)}(),function(){"use strict";Konva.Group=function(t){this.___init(t)},Konva.Util.addMethods(Konva.Group,{___init:function(t){this.nodeType="Group",Konva.Container.call(this,t)},_validateAdd:function(t){var e=t.getType();"Group"!==e&&"Shape"!==e&&Konva.Util.throw("You may only add groups and shapes to groups.")}}),Konva.Util.extend(Konva.Group,Konva.Container),Konva.Collection.mapMethods(Konva.Group)}(),function(t){"use strict";var e=t.global.performance&&t.global.performance.now?function(){return t.global.performance.now()}:function(){return(new Date).getTime()};function n(t){setTimeout(t,1e3/60)}var i=t.global.requestAnimationFrame||t.global.webkitRequestAnimationFrame||t.global.mozRequestAnimationFrame||t.global.oRequestAnimationFrame||t.global.msRequestAnimationFrame||n;function a(){return i.apply(t.global,arguments)}t.Animation=function(n,i){var a=t.Animation;this.func=n,this.setLayers(i),this.id=a.animIdCounter++,this.frame={time:0,timeDiff:0,lastTime:e()}},t.Animation.prototype={setLayers:function(t){var e=[];return e=t?t.length>0?t:[t]:[],this.layers=e,this},getLayers:function(){return this.layers},addLayer:function(t){var e,n=this.layers,i=n.length;for(e=0;e<i;e++)if(n[e]._id===t._id)return!1;return this.layers.push(t),!0},isRunning:function(){var e,n=t.Animation.animations,i=n.length;for(e=0;e<i;e++)if(n[e].id===this.id)return!0;return!1},start:function(){var n=t.Animation;return this.stop(),this.frame.timeDiff=0,this.frame.lastTime=e(),n._addAnimation(this),this},stop:function(){return t.Animation._removeAnimation(this),this},_updateFrameObject:function(t){this.frame.timeDiff=t-this.frame.lastTime,this.frame.lastTime=t,this.frame.time+=this.frame.timeDiff,this.frame.frameRate=1e3/this.frame.timeDiff}},t.Animation.animations=[],t.Animation.animIdCounter=0,t.Animation.animRunning=!1,t.Animation._addAnimation=function(t){this.animations.push(t),this._handleAnimation()},t.Animation._removeAnimation=function(t){var e,n=t.id,i=this.animations,a=i.length;for(e=0;e<a;e++)if(i[e].id===n){this.animations.splice(e,1);break}},t.Animation._runFrames=function(){var t,n,i,a,r,o,s,h,c={},l=this.animations;for(a=0;a<l.length;a++)if(n=(t=l[a]).layers,i=t.func,t._updateFrameObject(e()),o=n.length,!i||!1!==i.call(t,t.frame))for(r=0;r<o;r++)void 0!==(s=n[r])._id&&(c[s._id]=s);for(h in c)c.hasOwnProperty(h)&&c[h].draw()},t.Animation._animationLoop=function(){var e=t.Animation;e.animations.length?(e._runFrames(),a(e._animationLoop)):e.animRunning=!1},t.Animation._handleAnimation=function(){this.animRunning||(this.animRunning=!0,a(this._animationLoop))},t.BaseLayer.prototype.batchDraw=function(){var e=this,n=t.Animation;return this.batchAnim||(this.batchAnim=new n(function(){e.batchAnim.stop()},this)),this.batchAnim.isRunning()||this.batchAnim.start(),this},t.Stage.prototype.batchDraw=function(){return this.getChildren().each(function(t){t.batchDraw()}),this}}(Konva),function(){"use strict";var t={node:1,duration:1,easing:1,onFinish:1,yoyo:1},e=0,n=["fill","stroke","shadowColor"],i=function(t,e,n,i,a,r,o){this.prop=t,this.propFunc=e,this.begin=i,this._pos=i,this.duration=r,this._change=0,this.prevPos=0,this.yoyo=o,this._time=0,this._position=0,this._startTime=0,this._finish=0,this.func=n,this._change=a-this.begin,this.pause()};i.prototype={fire:function(t){var e=this[t];e&&e()},setTime:function(t){t>this.duration?this.yoyo?(this._time=this.duration,this.reverse()):this.finish():t<0?this.yoyo?(this._time=0,this.play()):this.reset():(this._time=t,this.update())},getTime:function(){return this._time},setPosition:function(t){this.prevPos=this._pos,this.propFunc(t),this._pos=t},getPosition:function(t){return void 0===t&&(t=this._time),this.func(t,this.begin,this._change,this.duration)},play:function(){this.state=2,this._startTime=this.getTimer()-this._time,this.onEnterFrame(),this.fire("onPlay")},reverse:function(){this.state=3,this._time=this.duration-this._time,this._startTime=this.getTimer()-this._time,this.onEnterFrame(),this.fire("onReverse")},seek:function(t){this.pause(),this._time=t,this.update(),this.fire("onSeek")},reset:function(){this.pause(),this._time=0,this.update(),this.fire("onReset")},finish:function(){this.pause(),this._time=this.duration,this.update(),this.fire("onFinish")},update:function(){this.setPosition(this.getPosition(this._time))},onEnterFrame:function(){var t=this.getTimer()-this._startTime;2===this.state?this.setTime(t):3===this.state&&this.setTime(this.duration-t)},pause:function(){this.state=1,this.fire("onPause")},getTimer:function(){return(new Date).getTime()}},Konva.Tween=function(n){var a,r,o=this,s=n.node,h=s._id,c=n.easing||Konva.Easings.Linear,l=!!n.yoyo;a=void 0===n.duration?1:0===n.duration?.001:n.duration,this.node=s,this._id=e++;var d=s.getLayer()||(s instanceof Konva.Stage?s.getLayers():null);for(r in d||Konva.Util.error("Tween constructor have `node` that is not in a layer. Please add node into layer first."),this.anim=new Konva.Animation(function(){o.tween.onEnterFrame()},d),this.tween=new i(r,function(t){o._tweenFunc(t)},c,0,1,1e3*a,l),this._addListeners(),Konva.Tween.attrs[h]||(Konva.Tween.attrs[h]={}),Konva.Tween.attrs[h][this._id]||(Konva.Tween.attrs[h][this._id]={}),Konva.Tween.tweens[h]||(Konva.Tween.tweens[h]={}),n)void 0===t[r]&&this._addAttr(r,n[r]);this.reset(),this.onFinish=n.onFinish,this.onReset=n.onReset},Konva.Tween.attrs={},Konva.Tween.tweens={},Konva.Tween.prototype={_addAttr:function(t,e){var i,a,r,o,s,h,c,l=this.node,d=l._id;if((r=Konva.Tween.tweens[d][t])&&delete Konva.Tween.attrs[d][r][t],i=l.getAttr(t),Konva.Util._isArray(e))for(a=[],s=Math.max(e.length,i.length),"points"===t&&e.length!==i.length&&(e.length>i.length?(c=i,i=Konva.Util._prepareArrayForTween(i,e,l.closed())):(h=e,e=Konva.Util._prepareArrayForTween(e,i,l.closed()))),o=0;o<s;o++)a.push(e[o]-i[o]);else if(-1!==n.indexOf(t)){i=Konva.Util.colorToRGBA(i);var u=Konva.Util.colorToRGBA(e);a={r:u.r-i.r,g:u.g-i.g,b:u.b-i.b,a:u.a-i.a}}else a=e-i;Konva.Tween.attrs[d][this._id][t]={start:i,diff:a,end:e,trueEnd:h,trueStart:c},Konva.Tween.tweens[d][t]=this._id},_tweenFunc:function(t){var e,i,a,r,o,s,h,c,l=this.node,d=Konva.Tween.attrs[l._id][this._id];for(e in d){if(a=(i=d[e]).start,r=i.diff,c=i.end,Konva.Util._isArray(a))for(o=[],h=Math.max(a.length,c.length),s=0;s<h;s++)o.push((a[s]||0)+r[s]*t);else o=-1!==n.indexOf(e)?"rgba("+Math.round(a.r+r.r*t)+","+Math.round(a.g+r.g*t)+","+Math.round(a.b+r.b*t)+","+(a.a+r.a*t)+")":a+r*t;l.setAttr(e,o)}},_addListeners:function(){var t=this;this.tween.onPlay=function(){t.anim.start()},this.tween.onReverse=function(){t.anim.start()},this.tween.onPause=function(){t.anim.stop()},this.tween.onFinish=function(){var e=t.node,n=Konva.Tween.attrs[e._id][t._id];n.points&&n.points.trueEnd&&e.points(n.points.trueEnd),t.onFinish&&t.onFinish.call(t)},this.tween.onReset=function(){var e=t.node,n=Konva.Tween.attrs[e._id][t._id];n.points&&n.points.trueStart&&e.points(n.points.trueStart),t.onReset&&t.onReset()}},play:function(){return this.tween.play(),this},reverse:function(){return this.tween.reverse(),this},reset:function(){return this.tween.reset(),this},seek:function(t){return this.tween.seek(1e3*t),this},pause:function(){return this.tween.pause(),this},finish:function(){return this.tween.finish(),this},destroy:function(){var t,e=this.node._id,n=this._id,i=Konva.Tween.tweens[e];for(t in this.pause(),i)delete Konva.Tween.tweens[e][t];delete Konva.Tween.attrs[e][n]}},Konva.Node.prototype.to=function(t){var e=t.onFinish;t.node=this,t.onFinish=function(){this.destroy(),e&&e()},new Konva.Tween(t).play()},Konva.Easings={BackEaseIn:function(t,e,n,i){var a=1.70158;return n*(t/=i)*t*((a+1)*t-a)+e},BackEaseOut:function(t,e,n,i){var a=1.70158;return n*((t=t/i-1)*t*((a+1)*t+a)+1)+e},BackEaseInOut:function(t,e,n,i){var a=1.70158;return(t/=i/2)<1?n/2*(t*t*((1+(a*=1.525))*t-a))+e:n/2*((t-=2)*t*((1+(a*=1.525))*t+a)+2)+e},ElasticEaseIn:function(t,e,n,i,a,r){var o=0;return 0===t?e:1==(t/=i)?e+n:(r||(r=.3*i),!a||a<Math.abs(n)?(a=n,o=r/4):o=r/(2*Math.PI)*Math.asin(n/a),-a*Math.pow(2,10*(t-=1))*Math.sin((t*i-o)*(2*Math.PI)/r)+e)},ElasticEaseOut:function(t,e,n,i,a,r){var o=0;return 0===t?e:1==(t/=i)?e+n:(r||(r=.3*i),!a||a<Math.abs(n)?(a=n,o=r/4):o=r/(2*Math.PI)*Math.asin(n/a),a*Math.pow(2,-10*t)*Math.sin((t*i-o)*(2*Math.PI)/r)+n+e)},ElasticEaseInOut:function(t,e,n,i,a,r){var o=0;return 0===t?e:2==(t/=i/2)?e+n:(r||(r=i*(.3*1.5)),!a||a<Math.abs(n)?(a=n,o=r/4):o=r/(2*Math.PI)*Math.asin(n/a),t<1?a*Math.pow(2,10*(t-=1))*Math.sin((t*i-o)*(2*Math.PI)/r)*-.5+e:a*Math.pow(2,-10*(t-=1))*Math.sin((t*i-o)*(2*Math.PI)/r)*.5+n+e)},BounceEaseOut:function(t,e,n,i){return(t/=i)<1/2.75?n*(7.5625*t*t)+e:t<2/2.75?n*(7.5625*(t-=1.5/2.75)*t+.75)+e:t<2.5/2.75?n*(7.5625*(t-=2.25/2.75)*t+.9375)+e:n*(7.5625*(t-=2.625/2.75)*t+.984375)+e},BounceEaseIn:function(t,e,n,i){return n-Konva.Easings.BounceEaseOut(i-t,0,n,i)+e},BounceEaseInOut:function(t,e,n,i){return t<i/2?.5*Konva.Easings.BounceEaseIn(2*t,0,n,i)+e:.5*Konva.Easings.BounceEaseOut(2*t-i,0,n,i)+.5*n+e},EaseIn:function(t,e,n,i){return n*(t/=i)*t+e},EaseOut:function(t,e,n,i){return-n*(t/=i)*(t-2)+e},EaseInOut:function(t,e,n,i){return(t/=i/2)<1?n/2*t*t+e:-n/2*(--t*(t-2)-1)+e},StrongEaseIn:function(t,e,n,i){return n*(t/=i)*t*t*t*t+e},StrongEaseOut:function(t,e,n,i){return n*((t=t/i-1)*t*t*t*t+1)+e},StrongEaseInOut:function(t,e,n,i){return(t/=i/2)<1?n/2*t*t*t*t*t+e:n/2*((t-=2)*t*t*t*t+2)+e},Linear:function(t,e,n,i){return n*t/i+e}}}(),function(){"use strict";Konva.DD={anim:new Konva.Animation(function(){var t=this.dirty;return this.dirty=!1,t}),isDragging:!1,justDragged:!1,offset:{x:0,y:0},node:null,_drag:function(t){var e=Konva.DD,n=e.node;if(n){if(!e.isDragging){var i=n.getStage().getPointerPosition();i||(n.getStage()._setPointerPosition(t),i=n.getStage().getPointerPosition());var a=n.dragDistance();if(Math.max(Math.abs(i.x-e.startPointerPos.x),Math.abs(i.y-e.startPointerPos.y))<a)return}n.getStage()._setPointerPosition(t),n._setDragPosition(t),e.isDragging||(e.isDragging=!0,n.fire("dragstart",{type:"dragstart",target:n,evt:t},!0)),n.fire("dragmove",{type:"dragmove",target:n,evt:t},!0)}},_endDragBefore:function(t){var e,n=Konva.DD,i=n.node;i&&(e=i.getLayer(),n.anim.stop(),n.isDragging&&(n.isDragging=!1,n.justDragged=!0,Konva.listenClickTap=!1,t&&(t.dragEndNode=i)),delete n.node,(i.getLayer()||e||i instanceof Konva.Stage)&&(e||i).draw())},_endDragAfter:function(t){var e=(t=t||{}).dragEndNode;t&&e&&e.fire("dragend",{type:"dragend",target:e,evt:t},!0)}},Konva.Node.prototype.startDrag=function(){var t=Konva.DD,e=this.getStage(),n=this.getLayer(),i=e.getPointerPosition(),a=this.getAbsolutePosition();i&&(t.node&&t.node.stopDrag(),t.node=this,t.startPointerPos=i,t.offset.x=i.x-a.x,t.offset.y=i.y-a.y,t.anim.setLayers(n||this.getLayers()),t.anim.start(),this._setDragPosition())},Konva.Node.prototype._setDragPosition=function(t){var e=Konva.DD,n=this.getStage().getPointerPosition(),i=this.getDragBoundFunc();if(n){var a={x:n.x-e.offset.x,y:n.y-e.offset.y};void 0!==i&&(a=i.call(this,a,t)),this.setAbsolutePosition(a),this._lastPos&&this._lastPos.x===a.x&&this._lastPos.y===a.y||(e.anim.dirty=!0),this._lastPos=a}},Konva.Node.prototype.stopDrag=function(){var t=Konva.DD,e={};t._endDragBefore(e),t._endDragAfter(e)},Konva.Node.prototype.setDraggable=function(t){this._setAttr("draggable",t),this._dragChange()};var t=Konva.Node.prototype.remove;if(Konva.Node.prototype.__originalRemove=t,Konva.Node.prototype.remove=function(){var e=Konva.DD;e.node&&e.node._id===this._id&&this.stopDrag(),t.call(this)},Konva.Node.prototype.isDragging=function(){var t=Konva.DD;return!(!t.node||t.node._id!==this._id||!t.isDragging)},Konva.Node.prototype._listenDrag=function(){var t=this;this._dragCleanup(),"Stage"===this.getClassName()?this.on("contentMousedown.konva contentTouchstart.konva",function(e){Konva.DD.node||t.startDrag(e)}):this.on("mousedown.konva touchstart.konva",function(e){1!==e.evt.button&&2!==e.evt.button&&(Konva.DD.node||t.startDrag(e))})},Konva.Node.prototype._dragChange=function(){if(this.attrs.draggable)this._listenDrag();else{this._dragCleanup();var t=this.getStage(),e=Konva.DD;t&&e.node&&e.node._id===this._id&&e.node.stopDrag()}},Konva.Node.prototype._dragCleanup=function(){"Stage"===this.getClassName()?(this.off("contentMousedown.konva"),this.off("contentTouchstart.konva")):(this.off("mousedown.konva"),this.off("touchstart.konva"))},Konva.Factory.addGetterSetter(Konva.Node,"dragBoundFunc"),Konva.Factory.addGetter(Konva.Node,"draggable",!1),Konva.Factory.addOverloadedGetterSetter(Konva.Node,"draggable"),Konva.isBrowser){var e=Konva.document.documentElement;e.addEventListener("mouseup",Konva.DD._endDragBefore,!0),e.addEventListener("touchend",Konva.DD._endDragBefore,!0),e.addEventListener("mousemove",Konva.DD._drag),e.addEventListener("touchmove",Konva.DD._drag),e.addEventListener("mouseup",Konva.DD._endDragAfter,!1),e.addEventListener("touchend",Konva.DD._endDragAfter,!1)}}(),function(){"use strict";Konva.Rect=function(t){this.___init(t)},Konva.Rect.prototype={___init:function(t){Konva.Shape.call(this,t),this.className="Rect",this.sceneFunc(this._sceneFunc)},_sceneFunc:function(t){var e=this.getCornerRadius(),n=this.getWidth(),i=this.getHeight();t.beginPath(),e?(e=Math.min(e,n/2,i/2),t.moveTo(e,0),t.lineTo(n-e,0),t.arc(n-e,e,e,3*Math.PI/2,0,!1),t.lineTo(n,i-e),t.arc(n-e,i-e,e,0,Math.PI/2,!1),t.lineTo(e,i),t.arc(e,i-e,e,Math.PI/2,Math.PI,!1),t.lineTo(0,e),t.arc(e,e,e,Math.PI,3*Math.PI/2,!1)):t.rect(0,0,n,i),t.closePath(),t.fillStrokeShape(this)}},Konva.Util.extend(Konva.Rect,Konva.Shape),Konva.Factory.addGetterSetter(Konva.Rect,"cornerRadius",0),Konva.Collection.mapMethods(Konva.Rect)}(),function(t){"use strict";var e=2*Math.PI-1e-4;t.Circle=function(t){this.___init(t)},t.Circle.prototype={_centroid:!0,___init:function(e){t.Shape.call(this,e),this.className="Circle",this.sceneFunc(this._sceneFunc)},_sceneFunc:function(t){t.beginPath(),t.arc(0,0,this.getRadius(),0,e,!1),t.closePath(),t.fillStrokeShape(this)},getWidth:function(){return 2*this.getRadius()},getHeight:function(){return 2*this.getRadius()},setWidth:function(e){t.Node.prototype.setWidth.call(this,e),this.radius()!==e/2&&this.setRadius(e/2)},setHeight:function(e){t.Node.prototype.setHeight.call(this,e),this.radius()!==e/2&&this.setRadius(e/2)}},t.Util.extend(t.Circle,t.Shape),t.Factory.addGetterSetter(t.Circle,"radius",0),t.Factory.addOverloadedGetterSetter(t.Circle,"radius"),t.Collection.mapMethods(t.Circle)}(Konva),function(){"use strict";var t=2*Math.PI-1e-4;Konva.Ellipse=function(t){this.___init(t)},Konva.Ellipse.prototype={_centroid:!0,___init:function(t){Konva.Shape.call(this,t),this.className="Ellipse",this.sceneFunc(this._sceneFunc)},_sceneFunc:function(e){var n=this.getRadiusX(),i=this.getRadiusY();e.beginPath(),e.save(),n!==i&&e.scale(1,i/n),e.arc(0,0,n,0,t,!1),e.restore(),e.closePath(),e.fillStrokeShape(this)},getWidth:function(){return 2*this.getRadiusX()},getHeight:function(){return 2*this.getRadiusY()},setWidth:function(t){Konva.Node.prototype.setWidth.call(this,t),this.setRadius({x:t/2})},setHeight:function(t){Konva.Node.prototype.setHeight.call(this,t),this.setRadius({y:t/2})}},Konva.Util.extend(Konva.Ellipse,Konva.Shape),Konva.Factory.addComponentsGetterSetter(Konva.Ellipse,"radius",["x","y"]),Konva.Factory.addGetterSetter(Konva.Ellipse,"radiusX",0),Konva.Factory.addGetterSetter(Konva.Ellipse,"radiusY",0),Konva.Collection.mapMethods(Konva.Ellipse)}(),function(){"use strict";var t=2*Math.PI-1e-4;Konva.Ring=function(t){this.___init(t)},Konva.Ring.prototype={_centroid:!0,___init:function(t){Konva.Shape.call(this,t),this.className="Ring",this.sceneFunc(this._sceneFunc)},_sceneFunc:function(e){e.beginPath(),e.arc(0,0,this.getInnerRadius(),0,t,!1),e.moveTo(this.getOuterRadius(),0),e.arc(0,0,this.getOuterRadius(),t,0,!0),e.closePath(),e.fillStrokeShape(this)},getWidth:function(){return 2*this.getOuterRadius()},getHeight:function(){return 2*this.getOuterRadius()},setWidth:function(t){Konva.Node.prototype.setWidth.call(this,t),this.outerRadius()!==t/2&&this.setOuterRadius(t/2)},setHeight:function(t){Konva.Node.prototype.setHeight.call(this,t),this.outerRadius()!==t/2&&this.setOuterRadius(t/2)},setOuterRadius:function(t){this._setAttr("outerRadius",t),this.setWidth(2*t),this.setHeight(2*t)}},Konva.Util.extend(Konva.Ring,Konva.Shape),Konva.Factory.addGetterSetter(Konva.Ring,"innerRadius",0),Konva.Factory.addGetter(Konva.Ring,"outerRadius",0),Konva.Factory.addOverloadedGetterSetter(Konva.Ring,"outerRadius"),Konva.Collection.mapMethods(Konva.Ring)}(),function(){"use strict";Konva.Wedge=function(t){this.___init(t)},Konva.Wedge.prototype={_centroid:!0,___init:function(t){Konva.Shape.call(this,t),this.className="Wedge",this.sceneFunc(this._sceneFunc)},_sceneFunc:function(t){t.beginPath(),t.arc(0,0,this.getRadius(),0,Konva.getAngle(this.getAngle()),this.getClockwise()),t.lineTo(0,0),t.closePath(),t.fillStrokeShape(this)},getWidth:function(){return 2*this.getRadius()},getHeight:function(){return 2*this.getRadius()},setWidth:function(t){Konva.Node.prototype.setWidth.call(this,t),this.radius()!==t/2&&this.setRadius(t/2)},setHeight:function(t){Konva.Node.prototype.setHeight.call(this,t),this.radius()!==t/2&&this.setRadius(t/2)}},Konva.Util.extend(Konva.Wedge,Konva.Shape),Konva.Factory.addGetterSetter(Konva.Wedge,"radius",0),Konva.Factory.addGetterSetter(Konva.Wedge,"angle",0),Konva.Factory.addGetterSetter(Konva.Wedge,"clockwise",!1),Konva.Factory.backCompat(Konva.Wedge,{angleDeg:"angle",getAngleDeg:"getAngle",setAngleDeg:"setAngle"}),Konva.Collection.mapMethods(Konva.Wedge)}(),function(t){"use strict";t.Arc=function(t){this.___init(t)},t.Arc.prototype={_centroid:!0,___init:function(e){t.Shape.call(this,e),this.className="Arc",this.sceneFunc(this._sceneFunc)},_sceneFunc:function(e){var n=t.getAngle(this.angle()),i=this.clockwise();e.beginPath(),e.arc(0,0,this.getOuterRadius(),0,n,i),e.arc(0,0,this.getInnerRadius(),n,0,!i),e.closePath(),e.fillStrokeShape(this)},getWidth:function(){return 2*this.getOuterRadius()},getHeight:function(){return 2*this.getOuterRadius()},setWidth:function(e){t.Node.prototype.setWidth.call(this,e),this.getOuterRadius()!==e/2&&this.setOuterRadius(e/2)},setHeight:function(e){t.Node.prototype.setHeight.call(this,e),this.getOuterRadius()!==e/2&&this.setOuterRadius(e/2)}},t.Util.extend(t.Arc,t.Shape),t.Factory.addGetterSetter(t.Arc,"innerRadius",0),t.Factory.addGetterSetter(t.Arc,"outerRadius",0),t.Factory.addGetterSetter(t.Arc,"angle",0),t.Factory.addGetterSetter(t.Arc,"clockwise",!1),t.Collection.mapMethods(t.Arc)}(Konva),function(){"use strict";Konva.Image=function(t){this.___init(t)},Konva.Image.prototype={___init:function(t){Konva.Shape.call(this,t),this.className="Image",this.sceneFunc(this._sceneFunc),this.hitFunc(this._hitFunc)},_useBufferCanvas:function(){return(this.hasShadow()||1!==this.getAbsoluteOpacity())&&this.hasStroke()&&this.getStage()},_sceneFunc:function(t){var e,n,i,a=this.getWidth(),r=this.getHeight(),o=this.getImage();o&&(e=this.getCropWidth(),n=this.getCropHeight(),i=e&&n?[o,this.getCropX(),this.getCropY(),e,n,0,0,a,r]:[o,0,0,a,r]),(this.hasFill()||this.hasStroke())&&(t.beginPath(),t.rect(0,0,a,r),t.closePath(),t.fillStrokeShape(this)),o&&t.drawImage.apply(t,i)},_hitFunc:function(t){var e=this.getWidth(),n=this.getHeight();t.beginPath(),t.rect(0,0,e,n),t.closePath(),t.fillStrokeShape(this)},getWidth:function(){var t=this.getImage();return this.attrs.width||(t?t.width:0)},getHeight:function(){var t=this.getImage();return this.attrs.height||(t?t.height:0)}},Konva.Util.extend(Konva.Image,Konva.Shape),Konva.Factory.addGetterSetter(Konva.Image,"image"),Konva.Factory.addComponentsGetterSetter(Konva.Image,"crop",["x","y","width","height"]),Konva.Factory.addGetterSetter(Konva.Image,"cropX",0),Konva.Factory.addGetterSetter(Konva.Image,"cropY",0),Konva.Factory.addGetterSetter(Konva.Image,"cropWidth",0),Konva.Factory.addGetterSetter(Konva.Image,"cropHeight",0),Konva.Collection.mapMethods(Konva.Image),Konva.Image.fromURL=function(t,e){var n=new Image;n.onload=function(){var t=new Konva.Image({image:n});e(t)},n.crossOrigin="Anonymous",n.src=t}}(),function(){"use strict";var t,e="2d",n=["fontFamily","fontSize","fontStyle","fontVariant","padding","align","lineHeight","text","width","height","wrap","ellipsis","letterSpacing"],i=n.length;function a(){return t||(t=Konva.Util.createCanvasElement().getContext(e))}function r(t){t.fillText(this.partialText,0,0)}function o(t){t.strokeText(this.partialText,0,0)}Konva.Text=function(t){this.___init(t)},Konva.Text.prototype={___init:function(t){(t=t||{}).fillLinearGradientColorStops||t.fillRadialGradientColorStops||(t.fill=t.fill||"black"),Konva.Shape.call(this,t),this._fillFunc=r,this._strokeFunc=o,this.className="Text";for(var e=0;e<i;e++)this.on(n[e]+"Change.konva",this._setTextData);this._setTextData(),this.sceneFunc(this._sceneFunc),this.hitFunc(this._hitFunc)},_sceneFunc:function(t){var e,n=this.getPadding(),i=this.getTextHeight(),a=this.getLineHeight()*i,r=this.textArr,o=r.length,s=this.getAlign(),h=this.getWidth(),c=this.getLetterSpacing(),l=this.textDecoration(),d=this.fill(),u=this.fontSize();for(t.setAttr("font",this._getContextFont()),t.setAttr("textBaseline","middle"),t.setAttr("textAlign","left"),n?(t.translate(n,0),t.translate(0,n+a/2)):t.translate(0,a/2),e=0;e<o;e++){var f=r[e],g=f.text,v=f.width;if(t.save(),"right"===s?t.translate(h-v-2*n,0):"center"===s&&t.translate((h-v-2*n)/2,0),-1!==l.indexOf("underline")&&(t.save(),t.beginPath(),t.moveTo(0,Math.round(a/2)),t.lineTo(Math.round(v),Math.round(a/2)),t.lineWidth=u/15,t.strokeStyle=d,t.stroke(),t.restore()),-1!==l.indexOf("line-through")&&(t.save(),t.beginPath(),t.moveTo(0,0),t.lineTo(Math.round(v),0),t.lineWidth=u/15,t.strokeStyle=d,t.stroke(),t.restore()),0!==c||"justify"===s)for(var p=g.split(" ").length-1,m=0;m<g.length;m++){var _=g[m];" "===_&&e!==o-1&&"justify"===s&&t.translate(Math.floor((h-v)/p),0),this.partialText=_,t.fillStrokeShape(this),t.translate(Math.round(this._getTextSize(_).width)+c,0)}else this.partialText=g,t.fillStrokeShape(this);t.restore(),o>1&&t.translate(0,a)}},_hitFunc:function(t){var e=this.getWidth(),n=this.getHeight();t.beginPath(),t.rect(0,0,e,n),t.closePath(),t.fillStrokeShape(this)},setText:function(t){var e=Konva.Util._isString(t)?t:(t||"").toString();return this._setAttr("text",e),this},getWidth:function(){return"auto"===this.attrs.width||void 0===this.attrs.width?this.getTextWidth()+2*this.getPadding():this.attrs.width},getHeight:function(){return"auto"===this.attrs.height||void 0===this.attrs.height?this.getTextHeight()*this.textArr.length*this.getLineHeight()+2*this.getPadding():this.attrs.height},getTextWidth:function(){return this.textWidth},getTextHeight:function(){return this.textHeight},_getTextSize:function(t){var e,n=a(),i=this.getFontSize();return n.save(),n.font=this._getContextFont(),e=n.measureText(t),n.restore(),{width:e.width,height:parseInt(i,10)}},_getContextFont:function(){return Konva.UA.isIE?this.getFontStyle()+" "+this.getFontSize()+"px "+this.getFontFamily():this.getFontStyle()+" "+this.getFontVariant()+" "+this.getFontSize()+"px "+this.getFontFamily()},_addTextLine:function(t){"justify"===this.align()&&(t=t.trim());var e=this._getTextWidth(t);return this.textArr.push({text:t,width:e})},_getTextWidth:function(t){var e=this.getLetterSpacing(),n=t.length;return a().measureText(t).width+(n?e*(n-1):0)},_setTextData:function(){var t=this.getText().split("\n"),e=+this.getFontSize(),n=0,i=this.getLineHeight()*e,r=this.attrs.width,o=this.attrs.height,s="auto"!==r,h="auto"!==o,c=this.getPadding(),l=r-2*c,d=o-2*c,u=0,f=this.getWrap(),g="none"!==f,v="char"!==f&&g,p=this.getEllipsis()&&!g;this.textArr=[],a().font=this._getContextFont();for(var m=0,_=t.length;m<_;++m){var y=t[m],S=p?this._getTextWidth("…"):0,K=this._getTextWidth(y);if(s&&K>l)for(;y.length>0;){for(var x=0,C=y.length,b="",w=0;x<C;){var F=x+C>>>1,T=y.slice(0,F+1),P=this._getTextWidth(T)+S;P<=l?(x=F+1,b=T+(p?"…":""),w=P):C=F}if(!b)break;if(v){var A,M=y[b.length];(A=(" "===M||"-"===M)&&w<=l?b.length:Math.max(b.lastIndexOf(" "),b.lastIndexOf("-"))+1)>0&&(x=A,b=b.slice(0,x),w=this._getTextWidth(b))}if(this._addTextLine(b),n=Math.max(n,w),u+=i,!g||h&&u+i>d)break;if((y=y.slice(x)).length>0&&(K=this._getTextWidth(y))<=l){this._addTextLine(y),u+=i,n=Math.max(n,K);break}}else this._addTextLine(y),u+=i,n=Math.max(n,K);if(h&&u+i>d)break}this.textHeight=e,this.textWidth=n}},Konva.Util.extend(Konva.Text,Konva.Shape),Konva.Factory.addGetterSetter(Konva.Text,"fontFamily","Arial"),Konva.Factory.addGetterSetter(Konva.Text,"fontSize",12),Konva.Factory.addGetterSetter(Konva.Text,"fontStyle","normal"),Konva.Factory.addGetterSetter(Konva.Text,"fontVariant","normal"),Konva.Factory.addGetterSetter(Konva.Text,"padding",0),Konva.Factory.addGetterSetter(Konva.Text,"align","left"),Konva.Factory.addGetterSetter(Konva.Text,"lineHeight",1),Konva.Factory.addGetterSetter(Konva.Text,"wrap","word"),Konva.Factory.addGetterSetter(Konva.Text,"ellipsis",!1),Konva.Factory.addGetterSetter(Konva.Text,"letterSpacing",0),Konva.Factory.addGetter(Konva.Text,"text",""),Konva.Factory.addOverloadedGetterSetter(Konva.Text,"text"),Konva.Factory.addGetterSetter(Konva.Text,"textDecoration",""),Konva.Collection.mapMethods(Konva.Text)}(),function(){"use strict";Konva.Line=function(t){this.___init(t)},Konva.Line.prototype={___init:function(t){Konva.Shape.call(this,t),this.className="Line",this.on("pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva",function(){this._clearCache("tensionPoints")}),this.sceneFunc(this._sceneFunc)},_sceneFunc:function(t){var e,n,i,a=this.getPoints(),r=a.length,o=this.getTension(),s=this.getClosed(),h=this.getBezier();if(r){if(t.beginPath(),t.moveTo(a[0],a[1]),0!==o&&r>4){for(n=(e=this.getTensionPoints()).length,i=s?0:4,s||t.quadraticCurveTo(e[0],e[1],e[2],e[3]);i<n-2;)t.bezierCurveTo(e[i++],e[i++],e[i++],e[i++],e[i++],e[i++]);s||t.quadraticCurveTo(e[n-2],e[n-1],a[r-2],a[r-1])}else if(h)for(i=2;i<r;)t.bezierCurveTo(a[i++],a[i++],a[i++],a[i++],a[i++],a[i++]);else for(i=2;i<r;i+=2)t.lineTo(a[i],a[i+1]);s?(t.closePath(),t.fillStrokeShape(this)):t.strokeShape(this)}},getTensionPoints:function(){return this._getCache("tensionPoints",this._getTensionPoints)},_getTensionPoints:function(){return this.getClosed()?this._getTensionPointsClosed():Konva.Util._expandPoints(this.getPoints(),this.getTension())},_getTensionPointsClosed:function(){var t=this.getPoints(),e=t.length,n=this.getTension(),i=Konva.Util,a=i._getControlPoints(t[e-2],t[e-1],t[0],t[1],t[2],t[3],n),r=i._getControlPoints(t[e-4],t[e-3],t[e-2],t[e-1],t[0],t[1],n),o=Konva.Util._expandPoints(t,n);return[a[2],a[3]].concat(o).concat([r[0],r[1],t[e-2],t[e-1],r[2],r[3],a[0],a[1],t[0],t[1]])},getWidth:function(){return this.getSelfRect().width},getHeight:function(){return this.getSelfRect().height},getSelfRect:function(){for(var t,e,n,i=(t=0!==this.getTension()?this._getTensionPoints():this.getPoints())[0],a=t[0],r=t[1],o=t[1],s=0;s<t.length/2;s++)e=t[2*s],n=t[2*s+1],i=Math.min(i,e),a=Math.max(a,e),r=Math.min(r,n),o=Math.max(o,n);return{x:Math.round(i),y:Math.round(r),width:Math.round(a-i),height:Math.round(o-r)}}},Konva.Util.extend(Konva.Line,Konva.Shape),Konva.Factory.addGetterSetter(Konva.Line,"closed",!1),Konva.Factory.addGetterSetter(Konva.Line,"bezier",!1),Konva.Factory.addGetterSetter(Konva.Line,"tension",0),Konva.Factory.addGetterSetter(Konva.Line,"points",[]),Konva.Collection.mapMethods(Konva.Line)}(),function(){"use strict";Konva.Sprite=function(t){this.___init(t)},Konva.Sprite.prototype={___init:function(t){Konva.Shape.call(this,t),this.className="Sprite",this._updated=!0;var e=this;this.anim=new Konva.Animation(function(){var t=e._updated;return e._updated=!1,t}),this.on("animationChange.konva",function(){this.frameIndex(0)}),this.on("frameIndexChange.konva",function(){this._updated=!0}),this.on("frameRateChange.konva",function(){this.anim.isRunning()&&(clearInterval(this.interval),this._setInterval())}),this.sceneFunc(this._sceneFunc),this.hitFunc(this._hitFunc)},_sceneFunc:function(t){var e=this.getAnimation(),n=this.frameIndex(),i=4*n,a=this.getAnimations()[e],r=this.frameOffsets(),o=a[i+0],s=a[i+1],h=a[i+2],c=a[i+3],l=this.getImage();if((this.hasFill()||this.hasStroke())&&(t.beginPath(),t.rect(0,0,h,c),t.closePath(),t.fillStrokeShape(this)),l)if(r){var d=r[e],u=2*n;t.drawImage(l,o,s,h,c,d[u+0],d[u+1],h,c)}else t.drawImage(l,o,s,h,c,0,0,h,c)},_hitFunc:function(t){var e=this.getAnimation(),n=this.frameIndex(),i=4*n,a=this.getAnimations()[e],r=this.frameOffsets(),o=a[i+2],s=a[i+3];if(t.beginPath(),r){var h=r[e],c=2*n;t.rect(h[c+0],h[c+1],o,s)}else t.rect(0,0,o,s);t.closePath(),t.fillShape(this)},_useBufferCanvas:function(){return(this.hasShadow()||1!==this.getAbsoluteOpacity())&&this.hasStroke()},_setInterval:function(){var t=this;this.interval=setInterval(function(){t._updateIndex()},1e3/this.getFrameRate())},start:function(){var t=this.getLayer();this.anim.setLayers(t),this._setInterval(),this.anim.start()},stop:function(){this.anim.stop(),clearInterval(this.interval)},isRunning:function(){return this.anim.isRunning()},_updateIndex:function(){var t=this.frameIndex(),e=this.getAnimation();t<this.getAnimations()[e].length/4-1?this.frameIndex(t+1):this.frameIndex(0)}},Konva.Util.extend(Konva.Sprite,Konva.Shape),Konva.Factory.addGetterSetter(Konva.Sprite,"animation"),Konva.Factory.addGetterSetter(Konva.Sprite,"animations"),Konva.Factory.addGetterSetter(Konva.Sprite,"frameOffsets"),Konva.Factory.addGetterSetter(Konva.Sprite,"image"),Konva.Factory.addGetterSetter(Konva.Sprite,"frameIndex",0),Konva.Factory.addGetterSetter(Konva.Sprite,"frameRate",17),Konva.Factory.backCompat(Konva.Sprite,{index:"frameIndex",getIndex:"getFrameIndex",setIndex:"setFrameIndex"}),Konva.Collection.mapMethods(Konva.Sprite)}(),function(){"use strict";Konva.Path=function(t){this.___init(t)},Konva.Path.prototype={___init:function(t){this.dataArray=[];var e=this;Konva.Shape.call(this,t),this.className="Path",this.dataArray=Konva.Path.parsePathData(this.getData()),this.on("dataChange.konva",function(){e.dataArray=Konva.Path.parsePathData(this.getData())}),this.sceneFunc(this._sceneFunc)},_sceneFunc:function(t){var e=this.dataArray;t.beginPath();for(var n=0;n<e.length;n++){var i=e[n].command,a=e[n].points;switch(i){case"L":t.lineTo(a[0],a[1]);break;case"M":t.moveTo(a[0],a[1]);break;case"C":t.bezierCurveTo(a[0],a[1],a[2],a[3],a[4],a[5]);break;case"Q":t.quadraticCurveTo(a[0],a[1],a[2],a[3]);break;case"A":var r=a[0],o=a[1],s=a[2],h=a[3],c=a[4],l=a[5],d=a[6],u=a[7],f=s>h?s:h,g=s>h?1:s/h,v=s>h?h/s:1;t.translate(r,o),t.rotate(d),t.scale(g,v),t.arc(0,0,f,c,c+l,1-u),t.scale(1/g,1/v),t.rotate(-d),t.translate(-r,-o);break;case"z":t.closePath()}}t.fillStrokeShape(this)},getSelfRect:function(){var t=[];this.dataArray.forEach(function(e){t=t.concat(e.points)});for(var e,n,i=t[0],a=t[0],r=t[1],o=t[1],s=0;s<t.length/2;s++)e=t[2*s],n=t[2*s+1],i=Math.min(i,e),a=Math.max(a,e),r=Math.min(r,n),o=Math.max(o,n);return{x:Math.round(i),y:Math.round(r),width:Math.round(a-i),height:Math.round(o-r)}}},Konva.Util.extend(Konva.Path,Konva.Shape),Konva.Path.getLineLength=function(t,e,n,i){return Math.sqrt((n-t)*(n-t)+(i-e)*(i-e))},Konva.Path.getPointOnLine=function(t,e,n,i,a,r,o){void 0===r&&(r=e),void 0===o&&(o=n);var s=(a-n)/(i-e+1e-8),h=Math.sqrt(t*t/(1+s*s));i<e&&(h*=-1);var c,l=s*h;if(i===e)c={x:r,y:o+l};else if((o-n)/(r-e+1e-8)===s)c={x:r+h,y:o+l};else{var d,u,f=this.getLineLength(e,n,i,a);if(f<1e-8)return;var g=(r-e)*(i-e)+(o-n)*(a-n);d=e+(g/=f*f)*(i-e),u=n+g*(a-n);var v=this.getLineLength(r,o,d,u),p=Math.sqrt(t*t-v*v);h=Math.sqrt(p*p/(1+s*s)),i<e&&(h*=-1),c={x:d+h,y:u+(l=s*h)}}return c},Konva.Path.getPointOnCubicBezier=function(t,e,n,i,a,r,o,s,h){function c(t){return t*t*t}function l(t){return 3*t*t*(1-t)}function d(t){return 3*t*(1-t)*(1-t)}function u(t){return(1-t)*(1-t)*(1-t)}return{x:s*c(t)+r*l(t)+i*d(t)+e*u(t),y:h*c(t)+o*l(t)+a*d(t)+n*u(t)}},Konva.Path.getPointOnQuadraticBezier=function(t,e,n,i,a,r,o){function s(t){return t*t}function h(t){return 2*t*(1-t)}function c(t){return(1-t)*(1-t)}return{x:r*s(t)+i*h(t)+e*c(t),y:o*s(t)+a*h(t)+n*c(t)}},Konva.Path.getPointOnEllipticalArc=function(t,e,n,i,a,r){var o=Math.cos(r),s=Math.sin(r),h=n*Math.cos(a),c=i*Math.sin(a);return{x:t+(h*o-c*s),y:e+(h*s+c*o)}},Konva.Path.parsePathData=function(t){if(!t)return[];var e=t,n=["m","M","l","L","v","V","h","H","z","Z","c","C","q","Q","t","T","s","S","a","A"];e=e.replace(new RegExp(" ","g"),",");for(var i=0;i<n.length;i++)e=e.replace(new RegExp(n[i],"g"),"|"+n[i]);var a,r=e.split("|"),o=[],s=[],h=0,c=0,l=/([-+]?((\d+\.\d+)|((\d+)|(\.\d+)))(?:e[-+]?\d+)?)/gi;for(i=1;i<r.length;i++){var d=r[i],u=d.charAt(0);for(d=d.slice(1),s.length=0;a=l.exec(d);)s.push(a[0]);for(var f=[],g=0,v=s.length;g<v;g++){var p=parseFloat(s[g]);isNaN(p)||f.push(p)}for(;f.length>0&&!isNaN(f[0]);){var m,_,y,S,K,x,C,b,w,F,T=null,P=[],A=h,M=c;switch(u){case"l":h+=f.shift(),c+=f.shift(),T="L",P.push(h,c);break;case"L":h=f.shift(),c=f.shift(),P.push(h,c);break;case"m":var k=f.shift(),G=f.shift();if(h+=k,c+=G,T="M",o.length>2&&"z"===o[o.length-1].command)for(var R=o.length-2;R>=0;R--)if("M"===o[R].command){h=o[R].points[0]+k,c=o[R].points[1]+G;break}P.push(h,c),u="l";break;case"M":h=f.shift(),c=f.shift(),T="M",P.push(h,c),u="L";break;case"h":h+=f.shift(),T="L",P.push(h,c);break;case"H":h=f.shift(),T="L",P.push(h,c);break;case"v":c+=f.shift(),T="L",P.push(h,c);break;case"V":c=f.shift(),T="L",P.push(h,c);break;case"C":P.push(f.shift(),f.shift(),f.shift(),f.shift()),h=f.shift(),c=f.shift(),P.push(h,c);break;case"c":P.push(h+f.shift(),c+f.shift(),h+f.shift(),c+f.shift()),h+=f.shift(),c+=f.shift(),T="C",P.push(h,c);break;case"S":_=h,y=c,"C"===(m=o[o.length-1]).command&&(_=h+(h-m.points[2]),y=c+(c-m.points[3])),P.push(_,y,f.shift(),f.shift()),h=f.shift(),c=f.shift(),T="C",P.push(h,c);break;case"s":_=h,y=c,"C"===(m=o[o.length-1]).command&&(_=h+(h-m.points[2]),y=c+(c-m.points[3])),P.push(_,y,h+f.shift(),c+f.shift()),h+=f.shift(),c+=f.shift(),T="C",P.push(h,c);break;case"Q":P.push(f.shift(),f.shift()),h=f.shift(),c=f.shift(),P.push(h,c);break;case"q":P.push(h+f.shift(),c+f.shift()),h+=f.shift(),c+=f.shift(),T="Q",P.push(h,c);break;case"T":_=h,y=c,"Q"===(m=o[o.length-1]).command&&(_=h+(h-m.points[0]),y=c+(c-m.points[1])),h=f.shift(),c=f.shift(),T="Q",P.push(_,y,h,c);break;case"t":_=h,y=c,"Q"===(m=o[o.length-1]).command&&(_=h+(h-m.points[0]),y=c+(c-m.points[1])),h+=f.shift(),c+=f.shift(),T="Q",P.push(_,y,h,c);break;case"A":S=f.shift(),K=f.shift(),x=f.shift(),C=f.shift(),b=f.shift(),w=h,F=c,h=f.shift(),c=f.shift(),T="A",P=this.convertEndpointToCenterParameterization(w,F,h,c,C,b,S,K,x);break;case"a":S=f.shift(),K=f.shift(),x=f.shift(),C=f.shift(),b=f.shift(),w=h,F=c,h+=f.shift(),c+=f.shift(),T="A",P=this.convertEndpointToCenterParameterization(w,F,h,c,C,b,S,K,x)}o.push({command:T||u,points:P,start:{x:A,y:M},pathLength:this.calcLength(A,M,T||u,P)})}"z"!==u&&"Z"!==u||o.push({command:"z",points:[],start:void 0,pathLength:0})}return o},Konva.Path.calcLength=function(t,e,n,i){var a,r,o,s,h=Konva.Path;switch(n){case"L":return h.getLineLength(t,e,i[0],i[1]);case"C":for(a=0,r=h.getPointOnCubicBezier(0,t,e,i[0],i[1],i[2],i[3],i[4],i[5]),s=.01;s<=1;s+=.01)o=h.getPointOnCubicBezier(s,t,e,i[0],i[1],i[2],i[3],i[4],i[5]),a+=h.getLineLength(r.x,r.y,o.x,o.y),r=o;return a;case"Q":for(a=0,r=h.getPointOnQuadraticBezier(0,t,e,i[0],i[1],i[2],i[3]),s=.01;s<=1;s+=.01)o=h.getPointOnQuadraticBezier(s,t,e,i[0],i[1],i[2],i[3]),a+=h.getLineLength(r.x,r.y,o.x,o.y),r=o;return a;case"A":a=0;var c=i[4],l=i[5],d=i[4]+l,u=Math.PI/180;if(Math.abs(c-d)<u&&(u=Math.abs(c-d)),r=h.getPointOnEllipticalArc(i[0],i[1],i[2],i[3],c,0),l<0)for(s=c-u;s>d;s-=u)o=h.getPointOnEllipticalArc(i[0],i[1],i[2],i[3],s,0),a+=h.getLineLength(r.x,r.y,o.x,o.y),r=o;else for(s=c+u;s<d;s+=u)o=h.getPointOnEllipticalArc(i[0],i[1],i[2],i[3],s,0),a+=h.getLineLength(r.x,r.y,o.x,o.y),r=o;return o=h.getPointOnEllipticalArc(i[0],i[1],i[2],i[3],d,0),a+=h.getLineLength(r.x,r.y,o.x,o.y)}return 0},Konva.Path.convertEndpointToCenterParameterization=function(t,e,n,i,a,r,o,s,h){var c=h*(Math.PI/180),l=Math.cos(c)*(t-n)/2+Math.sin(c)*(e-i)/2,d=-1*Math.sin(c)*(t-n)/2+Math.cos(c)*(e-i)/2,u=l*l/(o*o)+d*d/(s*s);u>1&&(o*=Math.sqrt(u),s*=Math.sqrt(u));var f=Math.sqrt((o*o*(s*s)-o*o*(d*d)-s*s*(l*l))/(o*o*(d*d)+s*s*(l*l)));a===r&&(f*=-1),isNaN(f)&&(f=0);var g=f*o*d/s,v=f*-s*l/o,p=(t+n)/2+Math.cos(c)*g-Math.sin(c)*v,m=(e+i)/2+Math.sin(c)*g+Math.cos(c)*v,_=function(t){return Math.sqrt(t[0]*t[0]+t[1]*t[1])},y=function(t,e){return(t[0]*e[0]+t[1]*e[1])/(_(t)*_(e))},S=function(t,e){return(t[0]*e[1]<t[1]*e[0]?-1:1)*Math.acos(y(t,e))},K=S([1,0],[(l-g)/o,(d-v)/s]),x=[(l-g)/o,(d-v)/s],C=[(-1*l-g)/o,(-1*d-v)/s],b=S(x,C);return y(x,C)<=-1&&(b=Math.PI),y(x,C)>=1&&(b=0),0===r&&b>0&&(b-=2*Math.PI),1===r&&b<0&&(b+=2*Math.PI),[p,m,o,s,K,b,c,r]},Konva.Factory.addGetterSetter(Konva.Path,"data"),Konva.Collection.mapMethods(Konva.Path)}(),function(){"use strict";function t(t){t.fillText(this.partialText,0,0)}function e(t){t.strokeText(this.partialText,0,0)}Konva.TextPath=function(t){this.___init(t)},Konva.TextPath.prototype={___init:function(n){var i=this;this.dummyCanvas=Konva.Util.createCanvasElement(),this.dataArray=[],this.getKerning=n&&n.getKerning,Konva.Shape.call(this,n),this._fillFunc=t,this._strokeFunc=e,this._fillFuncHit=t,this._strokeFuncHit=e,this.className="TextPath",this.dataArray=Konva.Path.parsePathData(this.attrs.data),this.on("dataChange.konva",function(){i.dataArray=Konva.Path.parsePathData(this.attrs.data),i._setTextData()}),this.on("textChange.konva alignChange.konva letterSpacingChange.konva",i._setTextData),i._setTextData(),this.sceneFunc(this._sceneFunc),this.hitFunc(this._hitFunc)},_sceneFunc:function(t){t.setAttr("font",this._getContextFont()),t.setAttr("textBaseline",this.getTextBaseline()),t.setAttr("textAlign","left"),t.save();var e=this.textDecoration(),n=this.fill(),i=this.fontSize(),a=this.glyphInfo;"underline"===e&&t.beginPath();for(var r=0;r<a.length;r++){t.save();var o=a[r].p0;t.translate(o.x,o.y),t.rotate(a[r].rotation),this.partialText=a[r].text,t.fillStrokeShape(this),"underline"===e&&(0===r&&t.moveTo(0,i/2+1),t.lineTo(i,i/2+1)),t.restore()}"underline"===e&&(t.strokeStyle=n,t.lineWidth=i/20,t.stroke()),t.restore()},_hitFunc:function(t){t.beginPath();var e=this.glyphInfo;if(e.length>=1){var n=e[0].p0;t.moveTo(n.x,n.y)}for(var i=0;i<e.length;i++){var a=e[i].p1;t.lineTo(a.x,a.y)}t.setAttr("lineWidth",this.getFontSize()),t.setAttr("strokeStyle",this.colorKey),t.stroke()},getTextWidth:function(){return this.textWidth},getTextHeight:function(){return this.textHeight},setText:function(t){Konva.Text.prototype.setText.call(this,t)},_getTextSize:function(t){var e=this.dummyCanvas.getContext("2d");e.save(),e.font=this._getContextFont();var n=e.measureText(t);return e.restore(),{width:n.width,height:parseInt(this.attrs.fontSize,10)}},_setTextData:function(){var t=this,e=this._getTextSize(this.attrs.text),n=this.getLetterSpacing(),i=this.align();this.textWidth=e.width,this.textHeight=e.height;var a=Math.max(this.textWidth+((this.attrs.text||"").length-1)*n,0);this.glyphInfo=[];for(var r=0,o=0;o<t.dataArray.length;o++)t.dataArray[o].pathLength>0&&(r+=t.dataArray[o].pathLength);var s=0;"center"===i&&(s=Math.max(0,r/2-a/2)),"right"===i&&(s=Math.max(0,r-a));for(var h,c,l,d=this.getText().split(""),u=this.getText().split(" ").length-1,f=-1,g=0,v=function(){g=0;for(var e=t.dataArray,n=f+1;n<e.length;n++){if(e[n].pathLength>0)return f=n,e[n];"M"===e[n].command&&(h={x:e[n].points[0],y:e[n].points[1]})}return{}},p=function(e){var o=t._getTextSize(e).width+n;" "===e&&"justify"===i&&(o+=(r-a)/u);var s=0,d=0;for(c=void 0;Math.abs(o-s)/o>.01&&d<25;){d++;for(var f=s;void 0===l;)(l=v())&&f+l.pathLength<o&&(f+=l.pathLength,l=void 0);if(l==={}||void 0===h)return;var p=!1;switch(l.command){case"L":Konva.Path.getLineLength(h.x,h.y,l.points[0],l.points[1])>o?c=Konva.Path.getPointOnLine(o,h.x,h.y,l.points[0],l.points[1],h.x,h.y):l=void 0;break;case"A":var m=l.points[4],_=l.points[5],y=l.points[4]+_;0===g?g=m+1e-8:o>s?g+=Math.PI/180*_/Math.abs(_):g-=Math.PI/360*_/Math.abs(_),(_<0&&g<y||_>=0&&g>y)&&(g=y,p=!0),c=Konva.Path.getPointOnEllipticalArc(l.points[0],l.points[1],l.points[2],l.points[3],g,l.points[6]);break;case"C":0===g?g=o>l.pathLength?1e-8:o/l.pathLength:o>s?g+=(o-s)/l.pathLength:g-=(s-o)/l.pathLength,g>1&&(g=1,p=!0),c=Konva.Path.getPointOnCubicBezier(g,l.start.x,l.start.y,l.points[0],l.points[1],l.points[2],l.points[3],l.points[4],l.points[5]);break;case"Q":0===g?g=o/l.pathLength:o>s?g+=(o-s)/l.pathLength:g-=(s-o)/l.pathLength,g>1&&(g=1,p=!0),c=Konva.Path.getPointOnQuadraticBezier(g,l.start.x,l.start.y,l.points[0],l.points[1],l.points[2],l.points[3])}void 0!==c&&(s=Konva.Path.getLineLength(h.x,h.y,c.x,c.y)),p&&(p=!1,l=void 0)}},m=t._getTextSize("C").width+n,_=0;_<s/m&&(p("C"),void 0!==h&&void 0!==c);_++)h=c;for(var y=0;y<d.length&&(p(d[y]),void 0!==h&&void 0!==c);y++){var S=Konva.Path.getLineLength(h.x,h.y,c.x,c.y),K=0;if(this.getKerning)try{K=this.getKerning(d[y-1],d[y])*this.fontSize()}catch(t){K=0}h.x+=K,c.x+=K,this.textWidth+=K;var x=Konva.Path.getPointOnLine(K+S/2,h.x,h.y,c.x,c.y),C=Math.atan2(c.y-h.y,c.x-h.x);this.glyphInfo.push({transposeX:x.x,transposeY:x.y,text:d[y],rotation:C,p0:h,p1:c}),h=c}},getSelfRect:function(){var t=[];this.glyphInfo.forEach(function(e){t.push(e.p0.x),t.push(e.p0.y),t.push(e.p1.x),t.push(e.p1.y)});for(var e,n,i=t[0],a=t[0],r=t[0],o=t[0],s=0;s<t.length/2;s++)e=t[2*s],n=t[2*s+1],i=Math.min(i,e),a=Math.max(a,e),r=Math.min(r,n),o=Math.max(o,n);var h=this.fontSize();return{x:Math.round(i)-h/2,y:Math.round(r)-h/2,width:Math.round(a-i)+h,height:Math.round(o-r)+h}}},Konva.TextPath.prototype._getContextFont=Konva.Text.prototype._getContextFont,Konva.Util.extend(Konva.TextPath,Konva.Shape),Konva.Factory.addGetterSetter(Konva.TextPath,"fontFamily","Arial"),Konva.Factory.addGetterSetter(Konva.TextPath,"fontSize",12),Konva.Factory.addGetterSetter(Konva.TextPath,"fontStyle","normal"),Konva.Factory.addGetterSetter(Konva.TextPath,"align","left"),Konva.Factory.addGetterSetter(Konva.TextPath,"letterSpacing",0),Konva.Factory.addGetterSetter(Konva.TextPath,"textBaseline","middle"),Konva.Factory.addGetterSetter(Konva.TextPath,"fontVariant","normal"),Konva.Factory.addGetter(Konva.TextPath,"text",""),Konva.Factory.addGetterSetter(Konva.TextPath,"textDecoration",null),Konva.Collection.mapMethods(Konva.TextPath)}(),function(){"use strict";Konva.RegularPolygon=function(t){this.___init(t)},Konva.RegularPolygon.prototype={_centroid:!0,___init:function(t){Konva.Shape.call(this,t),this.className="RegularPolygon",this.sceneFunc(this._sceneFunc)},_sceneFunc:function(t){var e,n,i,a=this.attrs.sides,r=this.attrs.radius;for(t.beginPath(),t.moveTo(0,0-r),e=1;e<a;e++)n=r*Math.sin(2*e*Math.PI/a),i=-1*r*Math.cos(2*e*Math.PI/a),t.lineTo(n,i);t.closePath(),t.fillStrokeShape(this)},getWidth:function(){return 2*this.getRadius()},getHeight:function(){return 2*this.getRadius()},setWidth:function(t){Konva.Node.prototype.setWidth.call(this,t),this.radius()!==t/2&&this.setRadius(t/2)},setHeight:function(t){Konva.Node.prototype.setHeight.call(this,t),this.radius()!==t/2&&this.setRadius(t/2)}},Konva.Util.extend(Konva.RegularPolygon,Konva.Shape),Konva.Factory.addGetterSetter(Konva.RegularPolygon,"radius",0),Konva.Factory.addGetterSetter(Konva.RegularPolygon,"sides",0),Konva.Collection.mapMethods(Konva.RegularPolygon)}(),function(){"use strict";Konva.Star=function(t){this.___init(t)},Konva.Star.prototype={_centroid:!0,___init:function(t){Konva.Shape.call(this,t),this.className="Star",this.sceneFunc(this._sceneFunc)},_sceneFunc:function(t){var e=this.innerRadius(),n=this.outerRadius(),i=this.numPoints();t.beginPath(),t.moveTo(0,0-n);for(var a=1;a<2*i;a++){var r=a%2==0?n:e,o=r*Math.sin(a*Math.PI/i),s=-1*r*Math.cos(a*Math.PI/i);t.lineTo(o,s)}t.closePath(),t.fillStrokeShape(this)},getWidth:function(){return 2*this.getOuterRadius()},getHeight:function(){return 2*this.getOuterRadius()},setWidth:function(t){Konva.Node.prototype.setWidth.call(this,t),this.outerRadius()!==t/2&&this.setOuterRadius(t/2)},setHeight:function(t){Konva.Node.prototype.setHeight.call(this,t),this.outerRadius()!==t/2&&this.setOuterRadius(t/2)}},Konva.Util.extend(Konva.Star,Konva.Shape),Konva.Factory.addGetterSetter(Konva.Star,"numPoints",5),Konva.Factory.addGetterSetter(Konva.Star,"innerRadius",0),Konva.Factory.addGetterSetter(Konva.Star,"outerRadius",0),Konva.Collection.mapMethods(Konva.Star)}(),function(){"use strict";var t=["fontFamily","fontSize","fontStyle","padding","lineHeight","text","width"],e=t.length;Konva.Label=function(t){this.____init(t)},Konva.Label.prototype={____init:function(t){var e=this;Konva.Group.call(this,t),this.className="Label",this.on("add.konva",function(t){e._addListeners(t.child),e._sync()})},getText:function(){return this.find("Text")[0]},getTag:function(){return this.find("Tag")[0]},_addListeners:function(n){var i,a=this,r=function(){a._sync()};for(i=0;i<e;i++)n.on(t[i]+"Change.konva",r)},getWidth:function(){return this.getText().getWidth()},getHeight:function(){return this.getText().getHeight()},_sync:function(){var t,e,n,i,a,r,o,s=this.getText(),h=this.getTag();if(s&&h){switch(t=s.getWidth(),e=s.getHeight(),n=h.getPointerDirection(),i=h.getPointerWidth(),o=h.getPointerHeight(),a=0,r=0,n){case"up":a=t/2,r=-1*o;break;case"right":a=t+i,r=e/2;break;case"down":a=t/2,r=e+o;break;case"left":a=-1*i,r=e/2}h.setAttrs({x:-1*a,y:-1*r,width:t,height:e}),s.setAttrs({x:-1*a,y:-1*r})}}},Konva.Util.extend(Konva.Label,Konva.Group),Konva.Collection.mapMethods(Konva.Label),Konva.Tag=function(t){this.___init(t)},Konva.Tag.prototype={___init:function(t){Konva.Shape.call(this,t),this.className="Tag",this.sceneFunc(this._sceneFunc)},_sceneFunc:function(t){var e=this.getWidth(),n=this.getHeight(),i=this.getPointerDirection(),a=this.getPointerWidth(),r=this.getPointerHeight(),o=Math.min(this.getCornerRadius(),e/2,n/2);t.beginPath(),o?t.moveTo(o,0):t.moveTo(0,0),"up"===i&&(t.lineTo((e-a)/2,0),t.lineTo(e/2,-1*r),t.lineTo((e+a)/2,0)),o?(t.lineTo(e-o,0),t.arc(e-o,o,o,3*Math.PI/2,0,!1)):t.lineTo(e,0),"right"===i&&(t.lineTo(e,(n-r)/2),t.lineTo(e+a,n/2),t.lineTo(e,(n+r)/2)),o?(t.lineTo(e,n-o),t.arc(e-o,n-o,o,0,Math.PI/2,!1)):t.lineTo(e,n),"down"===i&&(t.lineTo((e+a)/2,n),t.lineTo(e/2,n+r),t.lineTo((e-a)/2,n)),o?(t.lineTo(o,n),t.arc(o,n-o,o,Math.PI/2,Math.PI,!1)):t.lineTo(0,n),"left"===i&&(t.lineTo(0,(n+r)/2),t.lineTo(-1*a,n/2),t.lineTo(0,(n-r)/2)),o&&(t.lineTo(0,o),t.arc(o,o,o,Math.PI,3*Math.PI/2,!1)),t.closePath(),t.fillStrokeShape(this)},getSelfRect:function(){var t=0,e=0,n=this.getPointerWidth(),i=this.getPointerHeight(),a=this.pointerDirection(),r=this.getWidth(),o=this.getHeight();return"up"===a?(e-=i,o+=i):"down"===a?o+=i:"left"===a?(t-=1.5*n,r+=n):"right"===a&&(r+=1.5*n),{x:t,y:e,width:r,height:o}}},Konva.Util.extend(Konva.Tag,Konva.Shape),Konva.Factory.addGetterSetter(Konva.Tag,"pointerDirection","none"),Konva.Factory.addGetterSetter(Konva.Tag,"pointerWidth",0),Konva.Factory.addGetterSetter(Konva.Tag,"pointerHeight",0),Konva.Factory.addGetterSetter(Konva.Tag,"cornerRadius",0),Konva.Collection.mapMethods(Konva.Tag)}(),function(t){"use strict";t.Arrow=function(t){this.____init(t)},t.Arrow.prototype={____init:function(e){t.Line.call(this,e),this.className="Arrow"},_sceneFunc:function(e){t.Line.prototype._sceneFunc.apply(this,arguments);var n=2*Math.PI,i=this.points(),a=i,r=0!==this.getTension()&&i.length>4;r&&(a=this.getTensionPoints());var o,s,h=i.length;r?(o=i[h-2]-a[h-2],s=i[h-1]-a[h-1]):(o=i[h-2]-i[h-4],s=i[h-1]-i[h-3]);var c=(Math.atan2(s,o)+n)%n,l=this.pointerLength(),d=this.pointerWidth();e.save(),e.beginPath(),e.translate(i[h-2],i[h-1]),e.rotate(c),e.moveTo(0,0),e.lineTo(-l,d/2),e.lineTo(-l,-d/2),e.closePath(),e.restore(),this.pointerAtBeginning()&&(e.save(),e.translate(i[0],i[1]),r?(o=a[0]-i[0],s=a[1]-i[1]):(o=i[2]-i[0],s=i[3]-i[1]),e.rotate((Math.atan2(-s,-o)+n)%n),e.moveTo(0,0),e.lineTo(-l,d/2),e.lineTo(-l,-d/2),e.closePath(),e.restore());var u=this.dashEnabled();u&&(this.attrs.dashEnabled=!1,e.setLineDash([])),e.fillStrokeShape(this),u&&(this.attrs.dashEnabled=!0)}},t.Util.extend(t.Arrow,t.Line),t.Factory.addGetterSetter(t.Arrow,"pointerLength",10),t.Factory.addGetterSetter(t.Arrow,"pointerWidth",10),t.Factory.addGetterSetter(t.Arrow,"pointerAtBeginning",!1),t.Collection.mapMethods(t.Arrow)}(Konva),function(t){"use strict";var e=["resizeEnabledChange","rotateHandlerOffsetChange"].join(" "),n=["xChange.resizer","yChange.resizer","widthChange.resizer","heightChange.resizer","scaleXChange.resizer","scaleYChange.resizer","skewXChange.resizer","skewYChange.resizer","rotationChange.resizer","offsetXChange.resizer","offsetYChange.resizer","transformsEnabledChange.resizer"].join(" "),i=["widthChange.resizer","heightChange.resizer","scaleXChange.resizer","scaleYChange.resizer","skewXChange.resizer","skewYChange.resizer","rotationChange.resizer","offsetXChange.resizer","offsetYChange.resizer"].join(" "),a={"top-left":-45,"top-center":0,"top-right":45,"middle-right":-90,"middle-left":90,"bottom-left":-135,"bottom-center":180,"bottom-right":135};t.Transformer=function(t){this.____init(t)};var r=["top-left","top-center","top-right","middle-right","middle-left","bottom-left","bottom-center","bottom-right"],o=!1;t.Transformer.prototype={_centroid:!1,____init:function(n){t.Group.call(this,n),this.className="Transformer",this._createElements(),this._handleMouseMove=this._handleMouseMove.bind(this),this._handleMouseUp=this._handleMouseUp.bind(this),this.update=this.update.bind(this),this.on(e,this.update),o||(t.Util.warn("Konva.Transformer is currently experimental and may have bugs. Please report any issues to GitHub repo."),o=!0),this.getNode()&&this.update()},attachTo:function(t){this.setNode(t)},setNode:function(t){return this._node&&this.detach(),this._node=t,this._clearCache("nodeRect"),t.on(n,this._resetTransformCache.bind(this)),t.on(i,function(){this._transforming||this.update()}.bind(this)),!!this.findOne(".top-left")&&this.update(),this},getNode:function(){return this._node},detach:function(){this.getNode()&&(this.getNode().off(".resizer"),this._node=void 0),this._resetTransformCache()},_resetTransformCache:function(){this._clearCache("nodeRect"),this._clearCache("transform"),this._clearSelfAndDescendantCache("absoluteTransform")},_getNodeRect:function(){return this._getCache("nodeRect",this.__getNodeRect)},__getNodeRect:function(){var e=this.getNode();if(!e)return{x:-Number.MAX_SAFE_INTEGER,y:-Number.MAX_SAFE_INTEGER,width:0,height:0,rotation:0};var n=e.getClientRect({skipTransform:!0}),i=t.getAngle(e.rotation()),a=n.x*e.scaleX()-e.offsetX()*e.scaleX(),r=n.y*e.scaleY()-e.offsetY()*e.scaleY();return{x:e.x()+a*Math.cos(i)+r*Math.sin(-i),y:e.y()+r*Math.cos(i)+a*Math.sin(i),width:n.width*e.scaleX(),height:n.height*e.scaleY(),rotation:e.rotation()}},getX:function(){return this._getNodeRect().x},getY:function(){return this._getNodeRect().y},getRotation:function(){return this._getNodeRect().rotation},getWidth:function(){return this._getNodeRect().width},getHeight:function(){return this._getNodeRect().height},_createElements:function(){this._createBack(),r.forEach(function(t){this._createAnchor(t)}.bind(this)),this._createAnchor("rotater")},_createAnchor:function(e){var n=new t.Rect({stroke:"rgb(0, 161, 255)",fill:"white",strokeWidth:1,name:e,width:10,height:10,offsetX:5,offsetY:5,dragDistance:0}),i=this;n.on("mousedown touchstart",function(t){i._handleMouseDown(t)}),n.on("mouseenter",function(){var i=this.getLayer(),r=this.getParent(),o=t.getAngle(r.rotation()),s=function(e,n){if("rotater"===e)return"crosshair";n+=t.Util._degToRad(a[e]||0);var i=(t.Util._radToDeg(n)%360+360)%360;return t.Util._inRange(i,337.5,360)||t.Util._inRange(i,0,22.5)?"ns-resize":t.Util._inRange(i,22.5,67.5)?"nesw-resize":t.Util._inRange(i,67.5,112.5)?"ew-resize":t.Util._inRange(i,112.5,157.5)?"nwse-resize":t.Util._inRange(i,157.5,202.5)?"ns-resize":t.Util._inRange(i,202.5,247.5)?"nesw-resize":t.Util._inRange(i,247.5,292.5)?"ew-resize":t.Util._inRange(i,292.5,337.5)?"nwse-resize":(t.Util.error("Transformer has unknown angle for cursor detection: "+i),"pointer")}(e,o);n.getStage().content.style.cursor=s,i.batchDraw()}),n.on("mouseout",function(){var t=this.getLayer();t&&(n.getStage().content.style.cursor="",t.batchDraw())}),this.add(n)},_createBack:function(){var e=new t.Shape({stroke:"rgb(0, 161, 255)",name:"back",width:0,height:0,listening:!1,sceneFunc:function(e){var n=this.getParent(),i=n.getPadding();e.beginPath(),e.rect(-i,-i,this.width()+2*i,this.height()+2*i),e.moveTo(this.width()/2,-i),n.rotateEnabled()&&e.lineTo(this.width()/2,-n.rotateHandlerOffset()*t.Util._sign(this.height())),e.fillStrokeShape(this)}});this.add(e)},_handleMouseDown:function(t){this.movingResizer=t.target.name();var e=this._getNodeRect(),n=e.width,i=e.height,a=Math.sqrt(Math.pow(n,2)+Math.pow(i,2));this.sin=i/a,this.cos=n/a,window.addEventListener("mousemove",this._handleMouseMove),window.addEventListener("touchmove",this._handleMouseMove),window.addEventListener("mouseup",this._handleMouseUp,!0),window.addEventListener("touchend",this._handleMouseUp,!0),this._transforming=!0,this.fire("transformstart"),this.getNode().fire("transformstart")},_handleMouseMove:function(e){var n,i,a,r=this.findOne("."+this.movingResizer),o=r.getStage().getContent().getBoundingClientRect(),s=o.left,h=o.top,c={x:(void 0!==e.clientX?e.clientX:e.touches[0].clientX)-s,y:(void 0!==e.clientX?e.clientY:e.touches[0].clientY)-h};r.setAbsolutePosition(c);var l=this.keepRatio()||e.shiftKey;if("top-left"===this.movingResizer)l&&(n=(a=Math.sqrt(Math.pow(this.findOne(".bottom-right").x()-r.x(),2)+Math.pow(this.findOne(".bottom-right").y()-r.y(),2)))*this.cos,i=a*this.sin,this.findOne(".top-left").x(this.findOne(".bottom-right").x()-n),this.findOne(".top-left").y(this.findOne(".bottom-right").y()-i));else if("top-center"===this.movingResizer)this.findOne(".top-left").y(r.y());else if("top-right"===this.movingResizer){l&&(n=(a=Math.sqrt(Math.pow(this.findOne(".bottom-left").x()-r.x(),2)+Math.pow(this.findOne(".bottom-left").y()-r.y(),2)))*this.cos,i=a*this.sin,this.findOne(".top-right").x(n),this.findOne(".top-right").y(this.findOne(".bottom-left").y()-i));var d=r.position();this.findOne(".top-left").y(d.y),this.findOne(".bottom-right").x(d.x)}else if("middle-left"===this.movingResizer)this.findOne(".top-left").x(r.x());else if("middle-right"===this.movingResizer)this.findOne(".bottom-right").x(r.x());else if("bottom-left"===this.movingResizer)l&&(n=(a=Math.sqrt(Math.pow(this.findOne(".top-right").x()-r.x(),2)+Math.pow(this.findOne(".top-right").y()-r.y(),2)))*this.cos,i=a*this.sin,this.findOne(".bottom-left").x(this.findOne(".top-right").x()-n),this.findOne(".bottom-left").y(i)),d=r.position(),this.findOne(".top-left").x(d.x),this.findOne(".bottom-right").y(d.y);else if("bottom-center"===this.movingResizer)this.findOne(".bottom-right").y(r.y());else if("bottom-right"===this.movingResizer)l&&(n=(a=Math.sqrt(Math.pow(this.findOne(".bottom-right").x(),2)+Math.pow(this.findOne(".bottom-right").y(),2)))*this.cos,i=a*this.sin,this.findOne(".bottom-right").x(n),this.findOne(".bottom-right").y(i));else if("rotater"===this.movingResizer){var u=this.getPadding(),f=this._getNodeRect();n=r.x()-f.width/2,i=-r.y()+f.height/2;var g=Math.atan2(-i,n)+Math.PI/2;f.height<0&&(g-=Math.PI);for(var v=t.getAngle(this.rotation()),p=t.Util._radToDeg(v)+t.Util._radToDeg(g),m=t.getAngle(this.getNode().rotation()),_=t.Util._degToRad(p),y=this.rotationSnaps(),S=0;S<y.length;S++){var K=t.getAngle(y[S]);Math.abs(K-t.Util._degToRad(p))%(2*Math.PI)<.1&&(p=t.Util._radToDeg(K),_=t.Util._degToRad(p))}var x=u,C=u;this._fitNodeInto({rotation:t.angleDeg?p:t.Util._degToRad(p),x:f.x+(f.width/2+u)*(Math.cos(m)-Math.cos(_))+(f.height/2+u)*(Math.sin(-m)-Math.sin(-_))-(x*Math.cos(v)+C*Math.sin(-v)),y:f.y+(f.height/2+u)*(Math.cos(m)-Math.cos(_))+(f.width/2+u)*(Math.sin(m)-Math.sin(_))-(C*Math.cos(v)+x*Math.sin(v)),width:f.width+2*u,height:f.height+2*u})}else console.error(new Error("Wrong position argument of selection resizer: ",this.movingResizer));if("rotater"!==this.movingResizer){var b=this.findOne(".top-left").getAbsolutePosition(this.getParent());n=b.x,i=b.y;var w=this.findOne(".bottom-right").x()-this.findOne(".top-left").x(),F=this.findOne(".bottom-right").y()-this.findOne(".top-left").y();this._fitNodeInto({x:n+this.offsetX(),y:i+this.offsetY(),width:w,height:F})}},_handleMouseUp:function(){this._removeEvents()},_removeEvents:function(){this._transforming&&(this._transforming=!1,window.removeEventListener("mousemove",this._handleMouseMove),window.removeEventListener("touchmove",this._handleMouseMove),window.removeEventListener("mouseup",this._handleMouseUp,!0),window.removeEventListener("touchend",this._handleMouseUp,!0),this.fire("transformend"),this.getNode().fire("transformend"))},_fitNodeInto:function(e){var n=this.getBoundBoxFunc();if(n){var i=this._getNodeRect();e=n.call(this,i,e)}this._settings=!0;var a=this.getNode();void 0!==e.rotation&&this.getNode().rotation(e.rotation);var r=a.getClientRect({skipTransform:!0}),o=this.getPadding(),s=(e.width-2*o)/r.width,h=(e.height-2*o)/r.height,c=t.getAngle(a.getRotation()),l=r.x*s-o-a.offsetX()*s,d=r.y*h-o-a.offsetY()*h;this.getNode().setAttrs({scaleX:s,scaleY:h,x:e.x-(l*Math.cos(c)+d*Math.sin(-c)),y:e.y-(d*Math.cos(c)+l*Math.sin(c))}),this._settings=!1,this.fire("transform"),this.getNode().fire("transform"),this.update(),this.getLayer().batchDraw()},forceUpdate:function(){this._resetTransformCache(),this.update()},update:function(){var e=this._getNodeRect(),n=e.width,i=e.height,a=this.enabledHandlers(),r=this.resizeEnabled(),o=this.getPadding();this.findOne(".top-left").setAttrs({x:-o,y:-o,visible:r&&a.indexOf("top-left")>=0}),this.findOne(".top-center").setAttrs({x:n/2,y:-o,visible:r&&a.indexOf("top-center")>=0}),this.findOne(".top-right").setAttrs({x:n+o,y:-o,visible:r&&a.indexOf("top-right")>=0}),this.findOne(".middle-left").setAttrs({x:-o,y:i/2,visible:r&&a.indexOf("middle-left")>=0}),this.findOne(".middle-right").setAttrs({x:n+o,y:i/2,visible:r&&a.indexOf("middle-right")>=0}),this.findOne(".bottom-left").setAttrs({x:-o,y:i+o,visible:r&&a.indexOf("bottom-left")>=0}),this.findOne(".bottom-center").setAttrs({x:n/2,y:i+o,visible:r&&a.indexOf("bottom-center")>=0}),this.findOne(".bottom-right").setAttrs({x:n+o,y:i+o,visible:r&&a.indexOf("bottom-right")>=0}),this.findOne(".rotater").setAttrs({x:n/2,y:-this.rotateHandlerOffset()*t.Util._sign(i),visible:this.rotateEnabled()}),this.findOne(".back").setAttrs({width:n,height:i,visible:this.lineEnabled()})},isTransforming:function(){return this._transforming},stopTransform:function(){this._transforming&&this._removeEvents()},destroy:function(){t.Group.prototype.destroy.call(this),this.detach(),this._removeEvents()},toObject:function(){return t.Node.prototype.toObject.call(this)}},t.Util.extend(t.Transformer,t.Group),t.Factory.addGetterSetter(t.Transformer,"enabledHandlers",r,function(e){return e instanceof Array||t.Util.warn("enabledHandlers value should be an array"),e instanceof Array&&e.forEach(function(e){-1===r.indexOf(e)&&t.Util.warn("Unknown resizer name: "+e+". Available names are: "+r.join(", "))}),e||[]}),t.Factory.addGetterSetter(t.Transformer,"resizeEnabled",!0),t.Factory.addGetterSetter(t.Transformer,"rotateEnabled",!0),t.Factory.addGetterSetter(t.Transformer,"rotationSnaps",[]),t.Factory.addGetterSetter(t.Transformer,"rotateHandlerOffset",50),t.Factory.addGetterSetter(t.Transformer,"lineEnabled",!0),t.Factory.addGetterSetter(t.Transformer,"keepRatio",!0),t.Factory.addGetterSetter(t.Transformer,"padding",0),t.Factory.addOverloadedGetterSetter(t.Transformer,"node"),t.Factory.addGetterSetter(t.Transformer,"boundBoxFunc"),t.Collection.mapMethods(t.Transformer)}(Konva);

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],7:[function(require,module,exports){
var cachedSetTimeout,cachedClearTimeout,process=module.exports={};function defaultSetTimout(){throw new Error("setTimeout has not been defined")}function defaultClearTimeout(){throw new Error("clearTimeout has not been defined")}function runTimeout(e){if(cachedSetTimeout===setTimeout)return setTimeout(e,0);if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout)return cachedSetTimeout=setTimeout,setTimeout(e,0);try{return cachedSetTimeout(e,0)}catch(t){try{return cachedSetTimeout.call(null,e,0)}catch(t){return cachedSetTimeout.call(this,e,0)}}}function runClearTimeout(e){if(cachedClearTimeout===clearTimeout)return clearTimeout(e);if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout)return cachedClearTimeout=clearTimeout,clearTimeout(e);try{return cachedClearTimeout(e)}catch(t){try{return cachedClearTimeout.call(null,e)}catch(t){return cachedClearTimeout.call(this,e)}}}!function(){try{cachedSetTimeout="function"==typeof setTimeout?setTimeout:defaultSetTimout}catch(e){cachedSetTimeout=defaultSetTimout}try{cachedClearTimeout="function"==typeof clearTimeout?clearTimeout:defaultClearTimeout}catch(e){cachedClearTimeout=defaultClearTimeout}}();var currentQueue,queue=[],draining=!1,queueIndex=-1;function cleanUpNextTick(){draining&&currentQueue&&(draining=!1,currentQueue.length?queue=currentQueue.concat(queue):queueIndex=-1,queue.length&&drainQueue())}function drainQueue(){if(!draining){var e=runTimeout(cleanUpNextTick);draining=!0;for(var t=queue.length;t;){for(currentQueue=queue,queue=[];++queueIndex<t;)currentQueue&&currentQueue[queueIndex].run();queueIndex=-1,t=queue.length}currentQueue=null,draining=!1,runClearTimeout(e)}}function Item(e,t){this.fun=e,this.array=t}function noop(){}process.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];queue.push(new Item(e,t)),1!==queue.length||draining||runTimeout(drainQueue)},Item.prototype.run=function(){this.fun.apply(null,this.array)},process.title="browser",process.browser=!0,process.env={},process.argv=[],process.version="",process.versions={},process.on=noop,process.addListener=noop,process.once=noop,process.off=noop,process.removeListener=noop,process.removeAllListeners=noop,process.emit=noop,process.prependListener=noop,process.prependOnceListener=noop,process.listeners=function(e){return[]},process.binding=function(e){throw new Error("process.binding is not supported")},process.cwd=function(){return"/"},process.chdir=function(e){throw new Error("process.chdir is not supported")},process.umask=function(){return 0};

},{}],8:[function(require,module,exports){
"use strict";let Sseq=require("./Sseq.js"),SseqClassjs=require("./SseqClass.js"),SseqClass=SseqClassjs.SseqClass,Node=SseqClassjs.Node,Util=require("./Util.js"),Shapes=require("../src/Shape.js"),ExportToTex=require("./ExportToTex"),infinity=Util.infinity;const{parse:parse,stringify:stringify}=require("flatted/cjs");let default_node=new Node;default_node.fill=!0,default_node.stroke=!0,default_node.shape=Shapes.circle,default_node.size=6;class DisplaySseq{constructor(){this.classes=[],this.edges=[],this.min_page_idx=0,this.page_list=[0,infinity],this.initialxRange=[0,20],this.initialyRange=[0,20],this.xRange=[0,100],this.yRange=[0,100],this.offset_size=.3,this.default_node=new Node,this.default_node.fill=!0,this.default_node.stroke=!0,this.default_node.shape=Shapes.circle,this.default_node.size=6,this.class_scale=1,this.eventHandlers={},this.page_change_handler=(()=>!0),this.serializeSseqFields=Sseq.serializeSseqFields,this.serializeClassFields=Sseq.serializeClassFields,this.serializeEdgeFields=Sseq.serializeEdgeFields}static newClass(){return{x:0,y:0,idx:0,x_offset:!1,y_offset:!1,name:"",extra_info:"",page_list:[infinity],node_list:[default_node.copy()],visible:!0,_drawOnPageQ:()=>!0}}static newEdge(){let e={color:"black"};return e.page=infinity,e.page_min=0,e._drawOnPageQ=(()=>!0),e.visible=!0,e}addEventHandler(e,s){this.eventHandlers[e]=s}setPageChangeHandler(e){this.page_change_handler=e}pageChangeHandler(e){this.page_change_handler(e),this.real_sseq&&this.real_sseq.update()}update(){this.update_listener&&this.update_listener()}display(){"undefined"!=typeof window?window.display?(window.display.setSseq(this),display.update()):window.display=new Display(this):console.log("Can only display in browser.")}_registerUpdateListener(e){this.update_listener=e}_calculateDrawnElements(e,s,t,a,i){let l;Util.checkArgumentsDefined(DisplaySseq.prototype._calculateDrawnElements,arguments),Array.isArray(e)?(l=e,e=e[0]):l=[e,e],this.display_classes=this.classes.filter(l=>!!l&&(l.in_range=DisplaySseq._classInRangeQ(l,s,t,a,i),l.in_range&&DisplaySseq._drawClassOnPageQ(l,e))),this.display_edges=this.edges.filter(s=>s&&DisplaySseq._drawEdgeOnPageQ(s,l)&&DisplaySseq._drawClassOnPageQ(s.source,e)&&DisplaySseq._drawClassOnPageQ(s.target,e)&&(s.source.in_range||s.target.in_range));for(let e=0;e<this.display_edges.length;e++){let s=this.display_edges[e];s.source.in_range||this.display_classes.push(s.source),s.target.in_range||this.display_classes.push(s.target)}}static _classInRangeQ(e,s,t,a,i){return s<=e.x&&e.x<=t&&a<=e.y&&e.y<=i}static _drawClassOnPageQ(e,s){return e._drawOnPageQ?e._drawOnPageQ(s):SseqClass.prototype._drawOnPageQ.call(e,s)}static _drawEdgeOnPageQ(e,s){if(e._drawOnPageQ)return e._drawOnPageQ(s);switch(e.type){case"Differential":return Differential.prototype._drawOnPageQ.call(e,s);case"Extension":return Extension.prototype._drawOnPageQ.call(e,s);case"Structline":return Structline.prototype._drawOnPageQ.call(e,s);default:return Edge.prototype._drawOnPageQ.call(e,s)}}_getClassesToDisplay(){return this.display_classes}_getEdgesToDisplay(){return this.display_edges}_getXOffset(e,s){if(!1!==e.x_offset)return e.x_offset*this.offset_size;let t=this.num_classes_by_degree.get([e.x,e.y]),a=(e.idx-(t-1)/2)*this.offset_size;return isNaN(a)?(console.log("Invalid offset for class:"),console.log(e),0):a}_getYOffset(e,s){if(!1!==e.x_offset)return e.y_offset;let t=this.num_classes_by_degree.get([e.x,e.y]);return-(e.idx-(t-1)/2)*this.offset_size}getClassNode(e,s){return e.node_list[SseqClass.prototype._getPageIndex.call(e,s)]}getClassTooltip(e,s){let t,a="";if(""!==e.name&&(a=`\\(${e.name}\\) &mdash; `),a+=`(${e.x}, ${e.y})`,e.extra_info_page_map){let a;for(let t of e.extra_info_page_map.keys()){if(t>s)break;a=t}t="\n"+e.extra_info_page_map.get(a)}else t=e.extra_info;return a+=t}static async loadFromResolutionJSON(e){let s=await fetch(e),t=await s.json(),a=new StringifyingMap,i=new Map,l=[];for(let e of t.classes){let s=DisplaySseq.newClass();s.x=e.degree[0],s.y=e.degree[1];let t=a.getOrElse([s.x,s.y],0);a.set([s.x,s.y],t+1),i.set(e.name,s),s.idx=t,l.push(s)}let n=[];console.log("sls");for(let e of t.structlines){let s=DisplaySseq.newEdge();s.source=i.get(e.sourceName),s.target=i.get(e.targetName),e.type&&(s.mult=e.type),n.push(s)}let r=new DisplaySseq;return r.num_classes_by_degree=a,r.classes=l,r.edges=n,console.log(r),r}static async fromJSONOld(e){let s=await fetch(e),t=await s.text(),a=parse(t);Object.setPrototypeOf(a,DisplaySseq.prototype),a.default_node=Object.assign(new Node,a.default_node);let i=new StringifyingMap;for(let e of a.classes){if(!e)continue;let s=i.getOrElse([e.x,e.y],0);i.set([e.x,e.y],s+1);for(let s=0;s<e.node_list.length;s++)e.node_list[s]=new Node(e.node_list[s]),e.node_list[s].shape=Shapes[e.node_list[s].shape.name]}console.log(a.classes);for(let e of a.edges)"Extension"===e.type&&(e._drawOnPageQ=void 0);return a.num_classes_by_degree=i,a}static async fromJSON(e){let s=await fetch(e),t=await s.json(),a=Object.assign(new DisplaySseq,t);a.default_node=Object.assign(new Node,a.default_node);let i=new StringifyingMap,l=new Map;for(let e=0;e<a.classes.length;e++){let s=a.classes[e];if(l.set(e,s),!s)continue;let t=i.getOrElse([s.x,s.y],0);i.set([s.x,s.y],t+1);for(let e=0;e<s.node_list.length;e++)s.node_list[e]=new Node(a.master_node_list[s.node_list[e]]),s.node_list[e].shape=Shapes[s.node_list[e].shape.name]}for(let e of a.edges)"Extension"===e.type&&(e._drawOnPageQ=void 0),e.source=l.get(e.source),e.target=l.get(e.target);return a.num_classes_by_degree=i,a}toJSON(){let e={};for(let s of this.serializeSseqFields)e[s]=this[s];let s=new StringifyingMap(e=>JSON.stringify(e));e.master_node_list=[],e.classes=[],e.edges=[];for(let t of this.classes){if(t.invalid)continue;let a={};for(let e of this.serializeClassFields)a[e]=t[e];console.log(a),a.node_list=[];for(let i of t.node_list)s.has(i)||(s.set(i,e.master_node_list.length),e.master_node_list.push(i)),a.node_list.push(s.get(i));t.list_index=e.classes.length,e.classes.push(a)}for(let s of this.edges){if(s.invalid)continue;let t={};for(let e of this.serializeEdgeFields)t[e]=s[e];t.source=s.source.list_index,t.target=s.target.list_index,e.edges.push(t)}return console.log(e),e}exportToTex(e,s,t,a,i,l){ExportToTex.DownloadSpectralSequenceTex(e,this,s,t,a,i,l)}}DisplaySseq.default_node=default_node,exports.DisplaySseq=DisplaySseq;

},{"../src/Shape.js":11,"./ExportToTex":10,"./Sseq.js":12,"./SseqClass.js":13,"./Util.js":15,"flatted/cjs":5}],9:[function(require,module,exports){
"use strict";let Util=require("./Util.js"),infinity=Util.infinity;class Edge{constructor(t,e){if(t.y>e.y){let i=t;t=e,e=i}this.source=t,this.target=e,this.source_name=this.source.last_page_name,this.target_name=this.target.last_page_name,this.page=infinity,this.page_min=0,this.color="#000",this.type=this.constructor.name,this.visible=!0}otherClass(t){return this.source===t?this.target:this.target===t?this.source:void console.log("Invalid class")}setMinPage(t){return this.page_min=t,this}isDummy(){return!1}delete(){if(this.constructor===Differential){if(-1!==this.source.page_list.indexOf(this.page)&&this.source.page_list.indexOf(this.page)!==this.source.page_list.length-1)return void console.log("Cannot remove differential, source has done stuff since.");if(-1!==this.target.page_list.indexOf(this.page)&&this.target.page_list.indexOf(this.page)!==this.target.page_list.length-1)return void console.log("Cannot remove differential, target has done stuff since.");this.source.page_list[this.source.page_list.length-1]=infinity,this.target.page_list[this.target.page_list.length-1]=infinity}this.invalid=!0,this.source.edges=this.source.edges.filter(t=>!t.invalid),this.target.edges=this.target.edges.filter(t=>!t.invalid),this.source.update(),this.target.update(),this.display_edge.invalid=!0}static getDummy(){if(Edge._dummy)return Edge._dummy;let t=Object.create(Edge);return Edge._dummy=t,t.isDummy=(()=>!0),Util.setPrivateMethodsToInvalidOperation(t),t.setMinPage=Util.getDummyConstantFunction(t),t.constructor=Edge.constructor,t.otherClass=Util.getDummyConstantFunction(SseqClass.getDummy()),t.delete=(()=>!0),Util.checkAllCommandsDefined(t),t}_drawOnPageQ(t){return t[0]<=this.page&&this.page_min<=t[0]}}exports.Edge=Edge;class Structline extends Edge{}exports.Structline=Structline;class Extension extends Edge{_drawOnPageQ(t){return t[0]===infinity}}exports.Extension=Extension;class Differential extends Edge{constructor(t,e,i){super(t,e),this.page=i,this.color="#00F"}static getDummy(){if(Differential._dummy)return Differential._dummy;let t=Object.create(Differential);Differential._dummy=t;let e=Edge.getDummy();Object.assign(t,e);let i=Util.getDummyConstantFunction(t);return Util.setRemainingMethods(t,()=>!0,()=>i),Util.setPrivateMethodsToInvalidOperation(t),t.toString=Util.getDummyConstantFunction(""),t}setMinPage(t){throw"Unsupported operation"}setKernel(t,e){return this.source.replace(t,e),this}replaceSource(t,e){return this.setKernel(t,e),this}setCokernel(t,e){return this.target.replace(t,e),this}replaceTarget(t,e){return this.setCokernel(t,e),this}setTargetName(t){return this.target_name=t,this}setSourceName(t){return this.source_name=t,this}addInfoToSourceAndTarget(){return this.source.addExtraInfo(this.toString(!0,!1)),this.target.addExtraInfo(this.toString(!1,!0)),this.source.update(),this.target.update(),this}leibniz(t){for(let e of t){let i=this.source.getProductIfPresent(e),s=this.target.getProductIfPresent(e);i.isAlive()&&s.isAlive()&&sseq.addDifferential(i,s,this.page).leibniz(t)}}setSourceStructlinePages(){return this.source.setStructlinePages(this.page),this}setTargetStructlinePages(){return this.target.setStructlinePages(this.page),this}setStructlinePages(){return this.source.setStructlinePages(this.page),this.target.setStructlinePages(this.page),this}toString(t,e){let i=this.source_name;i||(i=this.source.name);let s=this.target_name;return s||(s=this.target.name),t&&(i=`{\\color{blue}{${i}}}`),e&&(s=`{\\color{blue}{${s}}}`),`\\(d_{${this.page}}(${i}) = ${s}\\)`}_drawOnPageQ(t){return 0===t[0]||t[0]<=this.page&&this.page<=t[1]}}exports.Differential=Differential;

},{"./Util.js":15}],10:[function(require,module,exports){
let Util=require("./Util.js"),texHead="\\documentclass{spectralsequence-example}\n\\makeatletter\n\\begin{document}",beginSseqpage="\\begin{sseqpage}",texFoot="\\end{sseqpage}\n\\end{document}";function SpectralSequenceToTex(e,t,n,s,l,o){console.log(t),t&&e._calculateDrawnElements(t,n,s,l,o);let u=e._getClassesToDisplay(),a=e._getEdgesToDisplay();this.sseq=e;let i=[],c=[],r=[];for(let e of u)i.push(latexClassString(e));for(let e of a)c.push(latexStructlineString(e));return r.push(texHead),r.push(beginSseqpage),r.push(i.join("\n")),r.push(c.join("\n")),r.push(texFoot),r.join("\n")}function DownloadSpectralSequenceTex(e,t,n,s,l,o,u){Util.download(e,SpectralSequenceToTex(t,n,s,l,o,u))}function latexClassString(e){let t=[];return t.push(`name=${"id"+e.unique_id}`),0===e.x_offset&&t.push("offset={(0,0)}"),`\\class[${t.join(", ")}](${e.x},${e.y})`}function latexStructlineString(e){return`\\structline(${"id"+e.source.unique_id})(${"id"+e.target.unique_id})`}exports.SpectralSequenceToTex=SpectralSequenceToTex,exports.DownloadSpectralSequenceTex=DownloadSpectralSequenceTex;

},{"./Util.js":15}],11:[function(require,module,exports){
"use strict";let Shapes={};Shapes.circle={draw:function(i){!0!==this.fill()?this.save_fill=this.fill():!0===this.fill()&&this.save_fill&&this.fill(this.save_fill),i.beginPath(),i.arc(0,0,this.size(),0,2*Math.PI,!1),i.closePath(),i.fillStrokeShape(this)},hitRegion:function(i){i.beginPath(),i.arc(0,0,this.size(),0,2*Math.PI,!1),i.closePath();let t=this.fillEnabled();this.fillEnabled(!0),i.fillStrokeShape(this),this.fill(t)}},Shapes.square={draw:function(i){let t=this.size();i.beginPath(),i.rect(-t,-t,2*t,2*t),i.closePath(),i.fillStrokeShape(this)},hitRegion:function(i){let t=this.size();i.beginPath(),i.rect(-t,-t,2*t,2*t),i.closePath();let e=this.fillEnabled();this.fillEnabled(!0),i.fillStrokeShape(this),this.fillEnabled(e)}};for(let i of Object.getOwnPropertyNames(Shapes))Shapes[i].name=i,exports[i]=Shapes[i];

},{}],12:[function(require,module,exports){
"use strict";let DisplaySseq=require("./DisplaySseq.js").DisplaySseq,Shapes=require("./Shape.js"),SseqClassjs=require("./SseqClass.js"),SseqClass=SseqClassjs.SseqClass,Node=SseqClassjs.Node,Edges=require("./Edges.js"),Edge=Edges.Edge,Structline=Edges.Structline,Extension=Edges.Extension,Differential=Edges.Differential,monomial_basisjs=require("./monomial_basis.js"),monomial_basis=monomial_basisjs.monomial_basis,slice_basis=monomial_basisjs.slice_basis,Util=require("./Util.js"),infinity=Util.infinity;exports.DisplaySseq=DisplaySseq,exports.SseqClass=SseqClass,exports.Node=Node,exports.Edge=Edge,exports.Differential=Differential,exports.Structline=Structline,exports.Extension=Extension,exports.monomialString=monomial_basisjs.monomialString,exports.range=monomial_basisjs.range,exports.StringifyingMap=monomial_basisjs.StringifyingMap,exports.product=monomial_basisjs.product,exports.vectorSum=monomial_basisjs.vectorSum,exports.vectorScale=monomial_basisjs.vectorScale,exports.vectorLinearCombination=monomial_basisjs.vectorLinearCombination;let StringifyingMap=require("./StringifyingMap.js");function dot_product(s,e){let i=0;for(let t=0;t<s.length;t++)i+=s[t]*e[t];return i}function addToDictionaryOfLists(s,e,i){s.has(e)||s.set(e,[]),s.get(e).push(i)}class Sseq{constructor(){this.display_sseq=new DisplaySseq,this.display_class_to_real_class=new StringifyingMap(s=>`${s.x}, ${s.y}, ${s.unique_id}`),this.display_edge_to_real_edge=new StringifyingMap(s=>`${s.type}(${s.page}) : (${s.source.x}, ${s.source.y}, ${s.source.unique_id}) => (${s.target.x}, ${s.target.y}, ${s.target.unique_id})`),this.total_classes=0,this.initialxRange=[0,10],this.initialyRange=[0,10],this.classes_by_degree=new StringifyingMap,this.num_classes_by_degree=new StringifyingMap,this.classes_by_stem=new Map,this.classes=[],this.structlines=[],this.differentials=[],this.edges=[],this.display_classes=[],this.display_structlines=[],this.display_differentials=[],this.xshift=0,this.yshift=0,this.offset_size=.3,this.class_scale=1,this.min_page_idx=0,this.page_list=[0,infinity],this.default_node=new Node,this.default_node.fill=!0,this.default_node.stroke=!0,this.default_node.shape=Shapes.circle,this.default_node.size=6,this.projection=function(s){return[s.degree.x,s.degree.y]},this._class_update_fields=["x","y","idx","uid","x_offset","y_offset","name","extra_info","page_list","node_list","visible","_classInRangeQ","_drawOnPageQ"],this._edge_update_fields=["page","page_min","color","source_name","target_name","_drawOnPageQ","visible","bend","opacity","dash","lineWidth"],this.serializeSseqFields=Sseq.serializeSseqFields,this.serializeClassFields=Sseq.serializeClassFields,this.serializeEdgeFields=Sseq.serializeEdgeFields}set_shift(s,e){return this.xshift=s,this.yshift=e,this}add_to_shift(s,e){return this.xshift+=s,this.yshift+=e,this}onClassAdded(s){return this.on_class_added=s,this}onEdgeAdded(s){return this.on_edge_added=s,this}onDifferentialAdded(s){return this.on_differential_added=s,this}onStructlineAdded(s){return this.on_structline_added=s,this}onExtensionAdded(s){return this.on_extension_added=s,this}onDraw(s){this.on_draw=s}getClasses(){return this.classes}getEdges(){return this.edges}getStructlines(){return this.structlines}getDifferentials(){return this.differentials}getClassesInDegree(s,e){return this.classes.filter(i=>i.x===s&&i.y===e)}getOccupiedStems(){return Array.from(this.classes_by_degree.keys())}getStem(s){return this.classes_by_stem.get(s)}addClass(s,e){let i;i=void 0===e?s:{x:s+=this.xshift,y:e+=this.yshift};let t=new SseqClass(this,i),a=this.num_classes_by_degree.getOrElse([t.x,t.y],0);return this.num_classes_by_degree.set([t.x,t.y],a+1),t.idx=a,t.class_list_index=this.classes.length,this.classes.push(t),addToDictionaryOfLists(this.classes_by_degree,i,t),addToDictionaryOfLists(this.classes_by_stem,t.x,t),this.total_classes++,this.on_class_added&&this.on_class_added(t),t.display_class={},this.display_sseq.classes[t.class_list_index]=t.display_class,this.updateClass(t),this.display_class_to_real_class.set(t.display_class,t),t}addStructline(s,e){if(!s||!e||s.isDummy()||e.isDummy())return Structline.getDummy();let i=new Structline(s,e);return s._addStructline(i),e._addStructline(i),this.structlines.push(i),i.edge_list_index=this.edges.length,this.edges.push(i),this.on_edge_added&&this.on_edge_added(i),this.on_structline_added&&this.on_structline_added(i),this.setupDisplayEdge(i),i}addDifferential(s,e,i){if("number"==typeof s)return console.log("addDifferential a SseqClass in position 1, got a number. Probably the arguments are in the wrong order."),Differential.getDummy();if(i<=0)return console.log("No page <= 0 differentials allowed."),Differential.getDummy();if(!s||!e||s.isDummy()||e.isDummy())return Differential.getDummy();let t=new Differential(s,e,i);return s._addOutgoingDifferential(t),e._addIncomingDifferential(t),t.edge_list_index=this.edges.length,this.differentials.push(t),this.edges.push(t),this.addPageToPageList(i),this.on_edge_added&&this.on_edge_added(t),this.on_differential_added&&this.on_differential_added(t),this.setupDisplayEdge(t),t}addExtension(s,e){if(!s||!e||s.isDummy()||e.isDummy())return Extension.getDummy();let i=new Extension(s,e);return i.edge_list_index=this.edges.length,this.edges.push(i),this.on_edge_added&&this.on_edge_added(i),this.on_extension_added&&this.on_extension_added(i),this.setupDisplayEdge(i),i}setupDisplayEdge(s){let e={};s.display_edge=e,this.display_sseq.edges[s.edge_list_index]=e,e.source=s.source.display_class,e.target=s.target.display_class,e.type=s.constructor.name,this.updateEdge(s)}updateClass(s){Util.assignFields(s.display_class,s,this._class_update_fields),s.display_class.tooltip=void 0}updateEdge(s){if(s.isDummy())return;let e=s.display_edge;Util.assignFields(e,s,this._edge_update_fields)}decrementClassIndex(s){let e=this.getClassesInDegree(s.x,s.y),i=s.idx;if(0!==i)for(let t of e)if(t.idx===i-1)return s.idx--,t.idx++,this.updateClass(s),this.updateClass(t),void this.display_sseq.update()}incrementClassIndex(s){let e=this.getClassesInDegree(s.x,s.y),i=s.idx;if(i!==e.length)for(let t of e)if(t.idx===i+1)return s.idx++,t.idx--,this.updateClass(s),this.updateClass(t),void this.display_sseq.update()}addPageToPageList(s){for(let e=0;e<this.page_list.length;e++){let i;if((i=Array.isArray(this.page_list[e])?this.page_list[e][0]:this.page_list[e])>s&&this.page_list.splice(e,0,s),i>=s&&!Array.isArray(this.page_list[e]))return this}}addPageRangeToPageList(s){let e=s[0];for(let i=0;i<this.page_list.length;i++){let t;if((t=Array.isArray(this.page_list[i])?this.page_list[i][0]:this.page_list[i])>e)return this.page_list.splice(i,0,s),this;if(t==e){if(!Array.isArray(this.page_list[i]))return this.page_list.splice(i,0,s),this;if(this.page_list[i][1]>s[1])return this.page_list.splice(i,0,s),this;if(this.page_list[i][1]==s[1])return this}}}addPolynomialClasses(s,e,i={"":[0,0]}){if(!Array.isArray(e))throw"Second argument of addPolynomialClasses should be an array";return new monomial_basis(this,s,e,i)}addSliceClasses(s,e,i){if(!Array.isArray(e))throw"Second argument of addPolynomialClasses should be an array";return new slice_basis(this,s,e,i)}getSurvivingClasses(s){return void 0===s&&(s=infinity-1),this.classes.filter(e=>e.page_list[e.page_list.length-1]>=s)}update(){for(let s of this.classes)this.updateClass(s);for(let s of this.edges)this.updateEdge(s);this.display_sseq.update()}static getSseqFromDisplay(s){let e=new Sseq;s.real_sseq=e,Object.assign(e,s),e.num_classes_by_degree=new StringifyingMap,e.classes=[],e.edges=[],e.display_class_to_real_class=new StringifyingMap(s=>`${s.x}, ${s.y}, ${s.unique_id}`);let i=s.classes,t=s.edges;for(let s of i){if(!s)continue;let i=e.addClass(s.x,s.y);s.unique_id=i.unique_id,Object.assign(i,s),i.constructor=SseqClass.constructor,i.display_class=s,e.display_class_to_real_class.set(s,i),e.updateClass(i)}for(let s of t){if(!s)continue;if(s.source.y>s.target.y){let e=s.target;s.target=s.source,s.source=e}let i,t=e.display_class_to_real_class.get(s.source),a=e.display_class_to_real_class.get(s.target);switch(s.type){case"Differential":i=e.addDifferential(t,a,s.page);break;case"Extension":i=e.addExtension(t,a);break;case"Structline":default:i=e.addStructline(t,a)}Object.assign(i,s),i.source=t,i.target=a,i.display_edge=s,e.updateEdge(i)}return e.display_sseq=s,e.getDisplaySseq(),e}getDisplaySseq(){let s=this.display_sseq;return s.real_sseq=this,s.min_page_idx=this.min_page_idx,s.initial_page_idx=this.initial_page_idx,s.page_list=this.page_list,s.initialxRange=this.initialxRange,s.initialyRange=this.initialyRange,s.xRange=this.xRange,s.yRange=this.yRange,s.on_draw=this.on_draw,s.class_scale=this.class_scale,s.num_classes_by_degree=this.num_classes_by_degree,s.serializeSseqFields=this.serializeSseqFields,s.serializeClassFields=this.serializeClassFields,s.serializeEdgeFields=this.serializeEdgeFields,this._getXOffset&&(s._getXOffset=this._getXOffset),this._getYOffset&&(s._getYOffset=this._getYOffset),this.offset_size&&(s.offset_size=this.offset_size),this.onmouseoverClass&&(s.onmouseoverClass=this.onmouseoverClass),s}addSseqFieldToSerialize(s){Array.isArray(s)?s.forEach(s=>this.addSseqFieldToSerialize(s)):this.serializeSseqFields.includes(s)||this.serializeSseqFields.push(s)}addClassFieldToSerialize(s){Array.isArray(s)?s.forEach(s=>this.addClassFieldToSerialize(s)):this.serializeClassFields.includes(s)||this.serializeClassFields.push(s)}addEdgeFieldToSerialize(s){Array.isArray(s)?s.forEach(s=>this.addEdgeFieldToSerialize(s)):this.serializeEdgeFields.includes(s)||this.serializeEdgeFields.push(s)}toJSON(){for(let s of this.serializeSseqFields)this[s]&&(this.display_sseq[s]=this[s]);for(let s of this.getClasses())for(let e of this.serializeClassFields)s[e]&&(s.display_class[e]=s[e]);for(let s of this.getEdges())for(let e of this.serializeClassFields)s[e]&&(s.display_edge[e]=s[e]);return this.getDisplaySseq().toJSON()}download(s){Util.download(s,JSON.stringify(this))}display(){this.update();let s=this.getDisplaySseq();return s.display(),s}deleteDuplicateEdges(){for(let s of this.getClasses()){let e=[];for(let i of s.getEdges())e.includes(i.otherClass(s))?i.delete():e.push(i.otherClass(s))}}}Sseq.serializeSseqFields=["min_page_idx","page_list","xRange","yRange","initialxRange","initialyRange","default_node","class_scale","offset_size","serializeSseqFields","serializeClassFields","serializeEdgeFields"],Sseq.serializeClassFields=["x","y","name","extra_info","unique_id","idx","x_offset","y_offset","page_list","visible"],Sseq.serializeEdgeFields=["color","bend","dash","lineWidth","opacity","page_min","page","type"],exports.Sseq=Sseq;

},{"./DisplaySseq.js":8,"./Edges.js":9,"./Shape.js":11,"./SseqClass.js":13,"./StringifyingMap.js":14,"./Util.js":15,"./monomial_basis.js":19}],13:[function(require,module,exports){
"use strict";let Util=require("./Util.js"),infinity=Util.infinity;class Node{constructor(t){this.opacity=1,this.color="black",t&&Object.assign(this,t)}copy(){return this.isDummy()?new Node:Object.assign(new Node,this)}getShape(){return this.shape}setShape(t){return this.shape=t,this}getColor(){return this.color}setColor(t){return this.color=t,this}setFill(t){return this.fill=t,this}setStroke(t){return this.stroke=t,this}setOpacity(t){return this.opacity=t,this}isDummy(){return!1}static getDummy(){if(Node._dummy)return Node._dummy;let t=new Node,e=Util.getDummyConstantFunction(t);t.isDummy=function(){return!0},t.setShape=e,t.setColor=e}static merge(...t){let e=new Node;for(var i=0;i<t.length;i++)if(!t[i].isDummy||!t[i].isDummy())for(var s in t[i])e[s]=t[i][s];return e}}let unique_id=0;class SseqClass{constructor(t,e){this.sseq=t,this.degree=e,this.projection=t.projection(this),this.x=this.projection[0],this.y=this.projection[1],this.x_offset=!1,this.y_offset=!1,this.idx=0,this.unique_id=unique_id++,this.edges=[],this.structlines=[],this.name="",this.last_page_name="",this.extra_info="",this.page_list=[infinity],this.node_list=[t.default_node.copy()],this.visible=!0,this._last_page=0,this._last_page_idx=0}static getDummy(){if(SseqClass._dummy)return SseqClass._dummy;let t=Object.create(SseqClass);SseqClass._dummy=t;let e=Util.getDummyConstantFunction(t);t.isDummy=Util.getDummyConstantFunction(!0),t.getName=Util.getDummyConstantFunction("dummy"),t.getColor=Util.getDummyConstantFunction("black"),t.getShape=Util.getDummyConstantFunction(null),t.getTooltip=Util.getDummyConstantFunction(""),t.getPage=Util.getDummyConstantFunction(-1),t.getNode=Util.getDummyConstantFunction(Node.getDummy()),t.toString=t.getName,t.constructor=SseqClass.constructor,t.update=e,t.replace=e,t.addExtraInfo=e,t.isAlive=Util.getDummyConstantFunction(!1);for(let e of["getEdges","getDifferentials","getIncomingDifferentials","getOutgoingDifferentials","getStructlines","getIncomingStructlines","getOutgoingStructlines","getProducts","getDivisors","getExtensions"])t[e]=Util.getDummyConstantFunction([]);return t.getProductIfPresent=Util.getDummyConstantFunction(t),t.getDivisorIfPresent=Util.getDummyConstantFunction(t),t.getStringifyingMapKey=Util.getDummyInvalidOperation(t,"getStringifyingMapKey"),Util.setPrivateMethodsToInvalidOperation(t),Util.setDummyMethods(t,t=>t.startsWith("set"),()=>e),Util.checkAllCommandsDefined(t,SseqClass),t}isDummy(){return!1}update(){this.sseq.updateClass(this)}getName(){return this.name}setName(t){return this.name=t,this.last_page_name=t,this}getPage(){return this.page_list[this.page_list.length-1]}setPage(t){return this.page_list[this.page_list.length-1]=t,this}isAlive(t){return t||(t=infinity-1),this.getPage()>t}getNode(t){const e=this._getPageIndex(t);return this.node_list[e]}setNode(t,e){void 0===t&&(t={});const i=this._getPageIndex(e);return this.node_list[i]=Node.merge(this.node_list[i],t),this}getColor(t){return this.getNode(t).getColor()}setColor(t,e){return this.getNode(e).setColor(t),this}getShape(t){return this.getNode(t).getShape()}setShape(t,e){return this.getNode(e).setShape(t),this}setStructlinePages(t){let e=this.getStructlines();for(let i=0;i<e.length;i++){let s=e[i];s.page>t&&(s.page=t)}return this}replace(t,e){return e&&(this.last_page_name="string"==typeof e?e:e(this.name)),this._appendPage(infinity),this.setNode(t),this}addExtraInfo(t){return this.extra_info+="\n"+t,this}setPermanentCycleInfo(t){this.permanent_cycle_info=t,this.addExtraInfo(this.permanent_cycle_info)}getEdges(){return this.edges}getDifferentials(){return this.edges.filter(t=>"Differential"===t.type)}getOutgoingDifferentials(){return this.edges.filter(t=>"Differential"===t.type&&this===t.source)}getIncomingDifferentials(){return this.edges.filter(t=>"Differential"===t.type&&this===t.target)}getStructlines(){return this.edges.filter(t=>"Structline"===t.type)}getOutgoingStructlines(){return this.edges.filter(t=>"Structline"===t.type&&this===t.source)}getIncomingStructlines(){return this.edges.filter(t=>"Structline"===t.type&&this===t.target)}getExtensions(){return this.edges.filter(t=>"Extension"===t.type)}getProducts(t){let e=this.edges.filter(t=>"Structline"===t.type&&t.otherClass(this).y>this.y);return t&&(e=e.filter(e=>e.mult===t)),e}getDivisors(t){let e=this.edges.filter(t=>"Structline"===t.type&&t.otherClass(this).y<this.y);return t&&(e=e.filter(e=>e.mult===t)),e}getProductIfPresent(t){let e=this.getProducts(t);return 1===e.length?e[0].otherClass(this):SseqClass.getDummy()}getDivisorIfPresent(t){let e=this.getDivisors(t);return 1===e.length?e[0].otherClass(this):SseqClass.getDummy()}toString(){return this.name}getStringifyingMapKey(){return this.x+","+this.y+","+this.idx}_getPageIndex(t){if(void 0===t)return this.page_list.length-1;if(t===this._last_page)return this._last_page_idx;let e;for(let i=0;i<this.page_list.length;i++)if(this.page_list[i]>=t){e=i;break}if(void 0===e)throw"Page too large.";return this._last_page=t,this._last_page_idx=e,e}_appendPage(t){return this.page_list.push(t),this.node_list.push(this.node_list[this.node_list.length-1].copy()),this}_addStructline(t){this.edges.push(t)}_addOutgoingDifferential(t){this.getPage(),t.page,this.setPage(t.page),this.edges.push(t)}_addIncomingDifferential(t){this.getPage(),t.page,this.setPage(t.page),this.edges.push(t)}_drawOnPageQ(t){return this.page_list[this.page_list.length-1]>=t&&this.visible}_inRangeQ(t,e,i,s){return t<=this.x&&this.x<=e&&i<=this.y&&this.y<=s}}exports.Node=Node,exports.SseqClass=SseqClass;

},{"./Util.js":15}],14:[function(require,module,exports){
"use strict";function stdCatToString(t){if(void 0!==t)return void 0!==t.getStringifyingMapKey?t.getStringifyingMapKey():t.toString()}var StringifyingMap=function(){function t(t){void 0===t&&(t=stdCatToString),this.catToString=t,this.m=new Map,this.key_string_to_key_object=new Map}return t.prototype.set=function(t,e){let i=this.catToString(t);if(void 0===i)throw new Error("Key encoding undefined.");return this.key_string_to_key_object.set(i,t),this.m.set(i,e)},t.prototype.get=function(t){if(void 0!==this.catToString(t))return this.m.get(this.catToString(t))},t.prototype.delete=function(t){return this.key_string_to_key_object.delete(this.catToString(t)),this.m.delete(this.catToString(t))},t.prototype.has=function(t){return void 0!==t&&this.m.has(this.catToString(t))},t.prototype.getOrElse=function(t,e){return this.has(t)?this.get(t):e},t.prototype[Symbol.iterator]=function*(){for(let t of this.m)yield[this.key_string_to_key_object.get(t[0]),t[1]]},t.prototype.keys=function(){return this.key_string_to_key_object.values()},Object.defineProperty(t.prototype,"size",{get:function(){return this.m.size},enumerable:!0,configurable:!0}),t}();module.exports=StringifyingMap;

},{}],15:[function(require,module,exports){
let assert=require("assert");exports.infinity=1e4,exports.limited_logger=function(e){let t=function(e){t.msgs_so_far<t.max_msgs&&(console.log(e),t.msgs_so_far++)};return t.max_msgs=e,t.msgs_so_far=0,t},exports.download=function(e,t){var o=document.createElement("a");o.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(t)),o.setAttribute("download",e),o.style.display="none",document.body.appendChild(o),o.click(),document.body.removeChild(o)},exports.getDummyConstantFunction=function(e){return function(){return e}},exports.getDummyInvalidOperation=function(e,t){return function(){throw new ReferenceError(`Invalid operation: cannot use method ${t} on a dummy ${e.prototype.constructor.name}.`)}},exports.setDummyMethods=function(e,t,o){Object.getOwnPropertyNames(e.prototype).filter(t).forEach(function(t){e[t]=o(t)})},exports.setRemainingMethods=function(e,t,o){Object.getOwnPropertyNames(e.prototype).filter(t=>!e.hasOwnProperty(t)).filter(t).forEach(function(t){e[t]=o(t)})},exports.setPrivateMethodsToInvalidOperation=function(e){exports.setDummyMethods(e,e=>"_"===e[0],t=>exports.getDummyInvalidOperation(e,t))},exports.checkAllCommandsDefined=function(e){let t=Object.getOwnPropertyNames(e.prototype).filter(t=>!e.hasOwnProperty(t));if(t.length>0){let o=e.prototype.constructor.name;console.log(`Not all fields of ${o} have been defined in ${o} dummy. The list of undefined fields is:\n${t}`)}},exports.getArguments=function(e){return(e+"").replace(/[/][/].*$/gm,"").replace(/\s+/g,"").replace(/[/][*][^/*]*[*][/]/g,"").split("){",1)[0].replace(/^[^(]*[(]/,"").replace(/=[^,]+/g,"").split(",").filter(Boolean)},exports.checkArgumentsDefined=function(e,t){for(let o=0;o<t.length;o++)if(void 0===t[o]){let t=exports.getArguments(e)[o];throw Error(`Argument ${t} of ${e.name} is undefined`)}},exports.getObjectWithFields=function(e,t){let o=new Object;for(let n of t)o[n]=e[n];return o},exports.assignFields=function(e,t,o){for(let n of o)e[n]=t[n];return e},Map.prototype.getOrElse=function(e,t){return this.has(e)?this.get(e):t};

},{"assert":1}],16:[function(require,module,exports){
let Sseqjs=require("./Sseq.js"),Sseq=Sseqjs.Sseq;function variablePowerString(e,s){return 1===s?e:`${e}^{${s}}`}exports.getClassExpression=function(e){let s=`(${e.x}, ${e.y})`;return e.name&&(s+=` [${e.name}]`),s},exports.multiply_monomial=function(e,s,t){let l=new RegExp(`${e}(\\^{?(.)}?)?`.replace("\\","\\\\").replace(/\{/g,"\\{").replace(/\}/g,"\\}")),o=l.exec(t);if(!l.test(t))return console.log(t),variablePowerString(e,s)+t;console.log(l),console.log(o[2]);let r=Number.parseInt(o[2]||1)+s;return t.replace(l,`${e}^{${r}}`)},exports.straightenTowers=function(e){new Map;for(let s of e.classes)s.h0div=[],s.h0mult=[],s.tower={length:0,base:s};for(let s of e.getStructlines()){if(s.source.x!==s.target.x)continue;let e,t;s.source.y<s.target.y?(e=s.source,t=s.target):(e=s.target,t=s.source),e.h0mult.push(t),t.h0div.push(e)}let s=new Map,t=(new Map,0),l=0;for(let o of e.classes)s.has(o.x)||s.set(o.x,new Map),s.get(o.x).has(o.y)||s.get(o.x).set(o.y,[]),s.get(o.x).get(o.y).push(o),o.x>0&&o.y>l&&(l=o.y),o.x>t&&(t=o.x);new Map;for(let o=1;o<t;o++){if(!s.has(o))continue;let t=s.get(o),r={},a=-1;for(let e=1;e<l;e++)if(t.has(e))for(let s of t.get(e)){let e=s.tower;for(let t of s.h0div)t.tower.length>e.length&&(e=t.tower);e.length++,s.tower=e,e.length>a&&(a=e.length,r=e)}if(r.length>3)for(let s=r.base;s;s=s.h0mult[0]){s.x_offset=0,e.updateClass(s);for(let t of e.getClassesInDegree(s.x,s.y))t.display_class.has_fixed_class=!0}}},exports.minimizeCrossings=function(e){new StringifyingMap;for(let s of e.getOccupiedStems()){e.getStem(s);let t=new Map;for(let s of e.getClasses())t.has(s.y)||t.set(s.y,[]),t.get(s.y).push(s);for(let e of t.values())if(1!==e.length){for(let s of e){s.crossing_score=0;for(let e of s.structlines){let t=otherClass(e,s);t.x<s.x?s.crossing_score--:t.x>s.x&&s.crossing_score++}}e.sort(e=>e.crossing_score);for(let s=0;s<e.length;s++)e[s].idx=s}}},exports.fixed_tower_xOffset=function(e,s){if(!1!==e.x_offset)return e.x_offset*this.offset_size;let t=this.num_classes_by_degree.get([e.x,e.y]),l=e.idx-(t-1)/2;if(e.has_fixed_class){t%2==0?l>=0?l+=.5:l-=.5:l>=0&&(l+=1)}return l*this.offset_size},exports.install_edit_handlers=function(e,s){e.addEventHandler("q",e=>{e.mouseover_class&&sseq.incrementClassIndex(sseq.display_class_to_real_class.get(e.mouseover_class))}),e.addEventHandler("w",e=>{e.mouseover_class&&sseq.decrementClassIndex(sseq.display_class_to_real_class.get(e.mouseover_class))}),e.addEventHandler("d",t=>{e.real_sseq.download(s+".json")}),e.addEventHandler("s",s=>{if(s.mouseover_class){let t=s.mouseover_class;e.temp_source_class=t,display.status_div.html(`Adding differential. Source: ${exports.getClassExpression(t)}`)}}),e.addEventHandler("t",s=>{if(s.mouseover_class&&e.temp_source_class){let t=e.temp_source_class,l=s.mouseover_class;if(console.log(t),console.log(l),t.x!==l.x+1)return;let o=l.y-t.y;if(confirm(`Add d${o} differential from ${exports.getClassExpression(t)} to ${exports.getClassExpression(l)}`)){let s=sseq.addDifferential(sseq.display_class_to_real_class.get(t),sseq.display_class_to_real_class.get(l),o);s.display_edge.color=s.color,e.update()}}}),e.addEventHandler("n",s=>{if(s.mouseover_class&&e.temp_source_class){let t=e.temp_source_class,l=s.mouseover_class,o=sseq.display_class_to_real_class.get(t),r=sseq.display_class_to_real_class.get(l);confirm(`Delete edges ${exports.getClassExpression(t)} to ${exports.getClassExpression(l)}`)&&(o.getEdges().filter(e=>e.otherClass(o)===r).forEach(e=>e.delete()),e.update())}}),e.addEventHandler("onclick",e=>{if(!e.mouseover_class)return;let s=e.mouseover_class,t="";s.name&&(t=s.name);let l=prompt(`Enter new name for class at position (${s.x},${s.y})`,t),o=sseq.display_class_to_real_class.get(s);(l||""===l)&&(o.name=l,o.setColor("black"),sseq.update()),s.tooltip_html=void 0}),e.addEventHandler("p",e=>{e.mouseover_class&&(e.mouseover_class.problem=!0)})},exports.addProductNames=function(e,s){let t=e.classes.filter(e=>!e.structlines.some(s=>otherClass(s,e).y<e.y&&s.visible));for(let l of t){let t=l.name;if(!t)continue;let o=1;for(;l;){let r=l.getProducts(s);if(1!==r.length)break;if((l=otherClass(r[0],l)).name)break;l.name=tools.multiply_monomial(s,o,t),e.update(),o++}}};

},{"./Sseq.js":12}],17:[function(require,module,exports){
"use strict";let d3=require("d3"),Mousetrap=require("mousetrap"),Konva=require("konva");function setNode(t){this.node=t,this.setAttrs(t),this.sceneFunc(t.shape.draw),t.shape.hitRegion&&this.hitFunc(t.shape.hitRegion),this.setFillEnabled(t.fill),this.setStrokeEnabled(t.stroke),(!0!==t.fill&&t.fill||t.color)&&this.fill(!0!==t.fill&&t.fill||t.color),(!0!==t.stroke&&t.stroke||t.color)&&this.stroke(!0!==t.stroke&&t.stroke||t.color),t.opacity&&this.opacity(t.opacity)}document.documentElement.style.overflow="hidden",Konva.Factory.addGetterSetter(Konva.Shape,"size"),Konva.Shape.prototype.setNode=setNode;class Display{constructor(t){this.body=d3.select("body"),this.xScaleInit=d3.scaleLinear(),this.yScaleInit=d3.scaleLinear(),this.stage=new Konva.Stage({container:"main"}),this._makeLayer("gridLayer"),this._makeLayer("edgeLayer"),this._makeLayer("classLayer"),this._makeLayer("marginLayer"),this._makeLayer("supermarginLayer");let i=["tooltip_div","tooltip_div_dummy"].map(t=>this.body.append("div").attr("id",t).attr("class","tooltip").style("opacity",0));this.status_div=this.body.append("div").attr("id","status").style("position","absolute").style("left","20px").style("bottom","20px"),this.tooltip_div=i[0],this.tooltip_div_dummy=i[1],this._initializeCanvas.bind(this),window.addEventListener("resize",()=>{this._initializeCanvas(),this.updateBatch()}),this.zoom=d3.zoom().scaleExtent([0,4]),this.updateBatch=this.updateBatch.bind(this),this.zoom.on("zoom",this.updateBatch),this.zoomDomElement=d3.select("#supermarginLayer"),this.zoomDomElement.call(this.zoom).on("dblclick.zoom",null),this.nextPage=this.nextPage.bind(this),this.previousPage=this.previousPage.bind(this),this.setSseq(t,!0),this.update()}_initializeCanvas(){this.gridColor="#c6c6c6",this.gridStrokeWidth=.3,this.boxSize=50,this.TICK_STEP_LOG_BASE=1.1;const t=document.getElementById("main").getBoundingClientRect(),i=t.width,s=t.height;this.stage.clear(),this.stage.width(i).height(s),this.width=this.stage.width(),this.height=this.stage.height(),this.leftMargin=40,this.rightMargin=5,this.topMargin=30,this.bottomMargin=60;for(let t of["left","right","top","bottom"]){let i=t+"Margin";this.sseq[i]&&(this[i]=this.sseq[i])}this.clipX=this.leftMargin,this.clipY=this.topMargin,this.clipWidth=this.width-this.rightMargin,this.clipHeight=this.height-this.bottomMargin,this.xScaleInit=this.xScaleInit.range([this.leftMargin,this.width-this.rightMargin]),this.yScaleInit=this.yScaleInit.range([this.height-this.bottomMargin,this.topMargin]),this.classLayerContext.clearRect(0,0,this.width,this.height),this._clipLayer(this.gridLayerContext),this._clipLayer(this.edgeLayerContext),this._clipLayer(this.classLayerContext),this.hitCtx=this.classLayer.getHitCanvas().context,this.gridLayerContext.strokeStyle=this.gridColor,this.marginLayerContext.textBaseline="middle",this.marginLayerContext.font="15px Arial",this.supermarginLayerContext.fillStyle="#FFF",this.supermarginLayerContext.rect(0,this.clipHeight,this.leftMargin-5,this.bottomMargin),this.supermarginLayerContext.fill(),this.supermarginLayerContext.fillStyle="#000",this.supermarginLayerContext.beginPath(),this.supermarginLayerContext.moveTo(this.leftMargin,this.topMargin),this.supermarginLayerContext.lineTo(this.leftMargin,this.clipHeight),this.supermarginLayerContext.lineTo(this.width-this.rightMargin,this.clipHeight),this.supermarginLayerContext.stroke()}_makeLayer(t){let i=new Konva.Layer;this.stage.add(i);let s=document.getElementsByTagName("canvas");s[s.length-1].setAttribute("id",t);let e=d3.select("#"+t).node().getContext("2d");this[t]=i,this[t+"Context"]=e,this[t+"DOM"]=s[s.length-1]}_clipLayer(t){t.rect(this.clipX,this.clipY,this.clipWidth-this.clipX,this.clipHeight-this.clipY),t.clip()}setSseq(t,i=!1){this.sseq&&(this.sseq._registerUpdateListener(void 0),this.supermarginLayerDOM.onclick=void 0,this.supermarginLayerDOM.oncontextmenu=void 0,Mousetrap.reset()),this.sseq=t,this.sseq.initial_page_idx?this.page_idx=this.sseq.initial_page_idx:this.page_idx=this.sseq.min_page_idx,this.page_idx>=this.sseq.page_list.length&&(console.log(`Warning: min_page_idx ${this.sseq.min_page_idx} greater than page list length ${this.sseq.page_list.length}. Using 0 for min_page_idx instead.`),this.page_idx=0,this.min_page_idx=0),this.setPage(),i&&(this._initializeScale(),this._initializeCanvas());for(let t of["onclick","oncontextmenu"])this.sseq.eventHandlers[t]&&(this.supermarginLayerDOM[t]=(i=>{i.mouseover_class=this.mouseover_class,this.sseq.eventHandlers[t].call(this.sseq,i)}));Mousetrap.bind("left",this.previousPage),Mousetrap.bind("right",this.nextPage),Mousetrap.bind("x",()=>{this.mouseover_class&&console.log(this.mouseover_class)}),this.supermarginLayerDOM.oncontextmenu=(t=>{t.mouseover_class=this.mouseover_class,this.sseq.eventHandlers.oncontextmenu.call(this.sseq,t)});for(let t of Object.getOwnPropertyNames(this.sseq.eventHandlers))Mousetrap.bind(t,i=>{i.mouseover_class=this.mouseover_class,this.sseq.eventHandlers[t].call(this.sseq,i)});this._addClasses(),this.sseq._registerUpdateListener(this.updateBatch.bind(this))}_initializeScale(){this.old_scales_maxed=!1,this.domainOffset=.5,this.xScaleInit.domain([this.sseq.initialxRange[0]-this.domainOffset,this.sseq.initialxRange[1]+this.domainOffset]),this.yScaleInit.domain([this.sseq.initialyRange[0]-this.domainOffset,this.sseq.initialyRange[1]+this.domainOffset])}nextPage(){this.page_idx<this.sseq.page_list.length-1&&(this.setPage(this.page_idx+1),this.update())}previousPage(){this.page_idx>this.sseq.min_page_idx&&(this.setPage(this.page_idx-1),this.update(),this.stage.getPointerPosition()&&this.stage.getIntersection(this.stage.getPointerPosition())&&this._handleMouseover(this.stage.getIntersection(this.stage.getPointerPosition())))}setPage(t){void 0!==t&&(this.page_idx=t),this.pageRange=this.sseq.page_list[this.page_idx],Array.isArray(this.pageRange)?this.page=this.pageRange[0]:this.page=this.pageRange,this.page_idx,this.sseq.page_list.length,this.sseq.pageChangeHandler&&this.sseq.pageChangeHandler(this.page)}updateBatch(){this.update(!0)}update(t=!1){this._updateScale(),this._updateGridAndTickStep(),this._updateSseq();let i=()=>{this._drawGrid(),this._drawTicks(),this._drawSseq()};t?requestAnimationFrame(i):i(),d3.event&&this.stage._setPointerPosition(d3.event.sourceEvent),void 0!==this.stage.getPointerPosition()&&null!==this.stage.getIntersection(this.stage.getPointerPosition())||this._handleMouseout()}_updateScale(){let t=this.zoomDomElement;this.transform=d3.zoomTransform(t.node()),this.scale=this.transform.k;let i,s,e=this.scale,a=this.sseq;if(i=this.transform.rescaleX(this.xScaleInit),s=this.transform.rescaleY(this.yScaleInit),a.fixY&&(s=this.yScaleInit),this.zoom.on("zoom",null),!this.old_scales_maxed){if(a.xRange){let s=e>1?10*e:10,h=s;i(a.xRange[0])>this.leftMargin+s?this.zoom.translateBy(t,(this.leftMargin+s-i(a.xRange[0])-.1)/e,0):i(a.xRange[1])<this.width-h&&this.zoom.translateBy(t,(this.width-h-i(a.xRange[1])+.1)/e,0)}if(!a.fixY&&a.yRange){let i=e>1?10*e:10,h=i;s(a.yRange[0])<this.clipHeight-i?this.zoom.translateBy(t,0,(this.clipHeight-i-s(a.yRange[0])-.1)/e):s(a.yRange[1])>h&&this.zoom.translateBy(t,0,(h-s(a.yRange[1])+.1)/e)}}this.transform=d3.zoomTransform(t.node()),i=this.transform.rescaleX(this.xScaleInit),a.fixY||(s=this.transform.rescaleY(this.yScaleInit));let h=Math.ceil(i.invert(this.leftMargin)),o=Math.floor(i.invert(this.width)),n=Math.ceil(s.invert(this.height-this.bottomMargin)),l=Math.floor(s.invert(0)),r=!1,d=!1;a.xRange&&o-h>a.xRange[1]-a.xRange[0]&&(r=!0,i.domain([a.xRange[0]-this.domainOffset,a.xRange[1]+this.domainOffset])),a.yRange&&l-n>a.yRange[1]-a.yRange[0]&&(d=!0,s.domain([a.yRange[0]-this.domainOffset,a.yRange[1]+this.domainOffset])),r&&d?this.old_scales_maxed?this.zoom.transform(t,this.zoom_max_transform):(this.old_scales_maxed=!0,this.zoom_max_transform=this.transform):this.old_scales_maxed?this.old_scales_maxed=!1:this.pre_zoom_max_transform=this.transform,this.zoom.on("zoom",this.updateBatch),this.transform=d3.zoomTransform(t.node()),this.scale=this.transform.k,this.xmin=Math.ceil(i.invert(this.leftMargin)),this.xmax=Math.floor(i.invert(this.width)),this.ymin=Math.ceil(s.invert(this.height-this.bottomMargin)),this.ymax=Math.floor(s.invert(0)),this.xScale=i,this.yScale=s}_updateGridAndTickStep(){this.xZoom=Math.log(this.scale)/Math.log(this.TICK_STEP_LOG_BASE),this.yZoom=this.xZoom,this.xTicks=this.xScale.ticks(15),this.yTicks=this.yScale.ticks(),this.xTickStep=Math.ceil(this.xTicks[1]-this.xTicks[0]),this.yTickStep=Math.ceil(this.yTicks[1]-this.yTicks[0]),this.xGridStep=0===Math.floor(this.xTickStep/5)?1:Math.floor(this.xTickStep/5),this.yGridStep=0===Math.floor(this.yTickStep/5)?1:Math.floor(this.yTickStep/5),this.sseq.squareAspectRatio&&(this.xGridStep=this.yGridStep)}_drawGrid(){let t=this.gridLayerContext;t.clearRect(0,0,this.width,this.height),t.beginPath();for(let i=Math.floor(this.xmin/this.xGridStep)*this.xGridStep;i<=this.xmax;i+=this.xGridStep)t.moveTo(this.xScale(i),0),t.lineTo(this.xScale(i),this.clipHeight);this.gridLayerContext.lineWidth=this.gridStrokeWidth,t.stroke(),t.beginPath();for(let i=Math.floor(this.ymin/this.yGridStep)*this.yGridStep;i<=this.ymax;i+=this.yGridStep)t.moveTo(this.leftMargin,this.yScale(i)),t.lineTo(this.width-this.rightMargin,this.yScale(i));this.gridLayerContext.lineWidth=this.gridStrokeWidth,t.stroke()}_drawTicks(){let t=this.marginLayerContext;t.clearRect(0,0,this.width,this.height),t.textAlign="center";for(let i=Math.floor(this.xTicks[0]);i<=this.xTicks[this.xTicks.length-1];i+=this.xTickStep)t.fillText(i,this.xScale(i),this.clipHeight+20);t.textAlign="right";for(let i=Math.floor(this.yTicks[0]);i<=this.yTicks[this.yTicks.length-1];i+=this.yTickStep)t.fillText(i,this.leftMargin-10,this.yScale(i))}_updateSseq(){this.sseq._calculateDrawnElements(this.pageRange,this.xmin,this.xmax,this.ymin,this.ymax),this._updateClasses()}_updateClasses(){let t,i=this.classLayerContext;i.clearRect(0,0,this.width,this.height),i.save(),t=this.scale<.5?.5:this.scale>2?2:this.scale,this.classLayer.removeChildren();for(let i of this.sseq._getClassesToDisplay()){if(!i)continue;let s=i.canvas_shape;if(!s)continue;let e=["x","y"].filter(t=>isNaN(i[t]));e.length>0&&(console.log(`Invalid ${e.join(" and ")} coodinate${2===e.length?"s":""} for class:`),console.log(i)),s.setPosition({x:this.xScale(i.x+this.sseq._getXOffset(i)),y:this.yScale(i.y+this.sseq._getYOffset(i))});let a=this.sseq.getClassNode(i,this.page);void 0===a&&(console.log("Error: node for class is undefined. Using default node."),console.log(i),a=this.sseq.default_node),s.setNode(a),s.size(s.size()*t*this.sseq.class_scale),this.classLayer.add(s)}}_drawSseq(){this._drawClasses(),this._drawEdges(),this.sseq.on_draw&&this.sseq.on_draw(this)}_drawClasses(){this.classLayer.draw()}_drawEdges(){let t=this.edgeLayerContext;t.clearRect(0,0,this.width,this.height);let i=this.sseq._getEdgesToDisplay();for(let s=0;s<i.length;s++){let e=i[s];if(!e||e.invalid||!e.visible)continue;let a=e.source.canvas_shape,h=e.target.canvas_shape;if(!a||!h)continue;(!e.sourceOffset||0===e.sourceOffset.x&&0===e.sourceOffset.y)&&(e.sourceOffset={x:0,y:0},e.targetOffset={x:0,y:0}),t.save(),t.strokeStyle=e.color,e.lineWidth&&(t.lineWidth=e.lineWidth),e.opacity&&(t.opacity=e.opacity),e.dash&&t.setLineDash(e.dash);let o=a.x()+e.sourceOffset.x,n=a.y()+e.sourceOffset.y,l=h.x()+e.targetOffset.x,r=h.y()+e.targetOffset.y;if(t.beginPath(),e.bend){let i=Math.sqrt((l-o)*(l-o)+(r-n)*(r-n)),s=.4;e.looseness&&(s=e.looseness);let a=Math.atan((r-n)/(l-o)),h=-e.bend*Math.PI/180,d=o+Math.cos(a+h)*s*i,g=n+Math.sin(a+h)*s*i,c=l-Math.cos(a-h)*s*i,p=r-Math.sin(a-h)*s*i;t.moveTo(o,n),t.bezierCurveTo(d,g,c,p,l,r)}else t.moveTo(o,n),t.lineTo(l,r);t.stroke(),t.restore()}}_getPositionColorKey(t,i){return"#"+Konva.Util._rgbToHex(...this.hitCtx.getImageData(t,i,1,1).data)}_findBoundaryTowards(t,i,s){const e=t.colorKey;let a=t.x(),h=t.y(),o=i-a,n=s-h,l=Math.sqrt(o*o+n*n);if(0===l)return{x:a,y:h};for(o=o/l*8,n=n/l*8,l=8;l>.5;)l/=2,o/=2,n/=2,this._getPositionColorKey(a+o,h+n)===e&&(a+=o,h+=n);return{x:a,y:h}}_addClasses(){this.classLayer.removeChildren();for(let t of this.sseq.classes){if(!t)continue;if(!Number.isInteger(t.x)||!Number.isInteger(t.y)){console.log("Class has invalid coordinates:\n"),console.log(t);continue}t.canvas_shape=new Konva.Shape,t.canvas_shape.sseq_class=t,t.canvas_shape.on("mouseover",t=>this._handleMouseover(t.currentTarget));let i=this;t.canvas_shape.on("mouseout",function(){i._handleMouseout(this)}),this.classLayer.add(t.canvas_shape)}}_setUpEdge(t){let i=t.source.canvas_shape,s=t.target.canvas_shape;i.show(),i.draw(),s.show(),s.draw();let e=this._findBoundaryTowards(i,s.x(),s.y()),a=this._findBoundaryTowards(s,i.x(),i.y());t.sourceOffset={x:e.x-i.x(),y:e.y-i.y()},t.targetOffset={x:a.x-i.x(),y:a.y-i.y()}}_handleMouseover(t){this.mouseover_class=t.sseq_class,console.log(this.mouseover_class);let i=t.sseq_class,s=this.sseq.getClassTooltip(i,this.page).replace(/\n/g,"\n<hr>\n");if(i.tooltip_html){this.tooltip_div_dummy.html(i.tooltip_html),this._setupTooltipDiv(t);let s=this.sseq.getClassTooltip(i,this.page).replace(/\n/g,"\n<hr>\n");this.tooltip_div_dummy.html(i.tooltip),MathJax.Hub.Queue(["Typeset",MathJax.Hub,"tooltip_div_dummy"]),MathJax.Hub.Queue(()=>this.copyTooltipHTMLFromDummyTooltip(t,s))}else MathJax&&MathJax.Hub?(this.tooltip_div_dummy.html(s),MathJax.Hub.Queue(["Typeset",MathJax.Hub,"tooltip_div_dummy"]),MathJax.Hub.Queue(()=>this._setupTooltipDiv(t,s))):(this.tooltip_div_dummy.html(s),this._setupTooltipDiv(this));this.sseq.onmouseoverClass&&this.sseq.onmouseoverClass(i),i.onmouseover&&i.onmouseover()}_setupTooltipDiv(t){let i=this.tooltip_div.node().getBoundingClientRect(),s=(i.width,i.height);this.copyTooltipHTMLFromDummyTooltip(t),this.tooltip_div.html(this.tooltip_div_dummy.html()),this.tooltip_div.style("left",t.x()+25+"px").style("top",t.y()-s+"px").style("right",null).style("bottom",null);let e=this.tooltip_div.node().getBoundingClientRect();e.right>this.width&&this.tooltip_div.style("left",null).style("right",this.width-t.x()+10+"px"),e.top<0&&this.tooltip_div.style("top",t.y()+10+"px"),this.tooltip_div.transition().duration(200).style("opacity",.9)}copyTooltipHTMLFromDummyTooltip(t){this.tooltip_div_dummy.html().includes("\\(")||(t.sseq_class.tooltip_html=this.tooltip_div_dummy.html())}_handleMouseout(){this.mouseover_class=null,this.tooltip_div.transition().duration(500).style("opacity",0)}}exports.Display=Display;

},{"d3":51,"konva":6,"mousetrap":52}],18:[function(require,module,exports){
window.infinity=1e4,window.mod=function(e,i){return(e%i+i)%i},window.Util=require("./Util.js"),window.Shapes=require("./Shape.js"),window.Display=require("./display.js").Display;let Sseqjs=require("./Sseq.js");window.Sseq=Sseqjs.Sseq,window.DisplaySseq=Sseqjs.DisplaySseq,window.SseqClass=Sseqjs.SseqClass,window.Node=Sseqjs.Node,window.Edge=Sseqjs.Edge,window.Differential=Sseqjs.Differential,window.Structline=Sseqjs.Structline,window.Extension=Sseqjs.Extension,window.Flatted=require("flatted/cjs"),window.tools=require("./ass_tools.js"),window.d3=require("d3"),window.range=Sseqjs.range,window.monomialString=Sseqjs.monomialString,window.StringifyingMap=Sseqjs.StringifyingMap,window.product=Sseqjs.product,window.vectorSum=Sseqjs.vectorSum,window.vectorScale=Sseqjs.vectorScale,window.vectorLinearCombination=Sseqjs.vectorLinearCombination;

},{"./Shape.js":11,"./Sseq.js":12,"./Util.js":15,"./ass_tools.js":16,"./display.js":17,"d3":51,"flatted/cjs":5}],19:[function(require,module,exports){
"use strict";let StringifyingMap=require("./StringifyingMap.js");function range(t,e,s=1){return 1===arguments.length&&(t=1,e=arguments[0],s=1),Array(Math.ceil((e-t+s)/s)).fill(t).map((t,e)=>t+e*s)}function product(){return Array.prototype.slice.call(arguments).reduce(function(t,e){const s=[];return t.forEach(function(t){e.forEach(function(e){s.push(t.concat(e))})}),s},[[]])}function convert_exponent_map_to_vector(t,e){return t.map(t=>e.hasOwnProperty(t)?e[t]:0)}function monomialString(t,e,s=""){let i=[];i[0]=s,Array.isArray(e)||(e=convert_exponent_map_to_vector(t,e));for(let s=0;s<t.length;s++){let r=e[s];i[s+1]=0===r?"":1===r?t[s]:`${t[s]}^{${r}}`}let r=i.filter(t=>""!==t).join(" ");return""===r&&(r="1"),r}function vectorSum(t){let e=[];for(let s=0;s<t.length;s++){let t=0;for(let e of arguments)t+=e[s];e.push(t)}return e}function vectorScale(t,e){return e.map(e=>t*e)}function vectorLinearCombination(t,e){let s=[];for(let i=0;i<t.length;i++)s.push(vectorScale(e[i],t[i]));return vectorSum(...s)}exports.StringifyingMap=StringifyingMap,exports.range=range,exports.product=product,exports.monomialString=monomialString,exports.vectorSum=vectorSum,exports.vectorScale=vectorScale,exports.vectorLinearCombination=vectorLinearCombination;class monomial_ring{constructor(t,e,s,i){this._var_degree_dict=s,this._var_list=t,this._var_name_list=e,this._var_degree_list=this._var_list.map(t=>this._var_degree_dict[t]),this._module_generators_dict=i}_exponent_map_to_vector(t){return convert_exponent_map_to_vector(this._var_list,t)}getElement(t,e=""){let s;if(Array.isArray(t))s=t;else if("string"==typeof t){let e=new Object;e[t]=1,s=convert_exponent_map_to_vector(this._var_name_list,e)}else{let e=Object.keys(t);for(let t of e)if(!this._var_degree_dict.hasOwnProperty(t))throw new Error(`Invalid variable ${t}`);s=convert_exponent_map_to_vector(this._var_name_list,t)}return this.getElementFromVector(s,e)}getElementFromVector(t,e=""){if(""!==e&&!this._module_generators_dict.hasOwnProperty(e))throw new Error(`Invalid module generator ${e}`);if(t.length!=this._var_name_list.length)throw new Error(`Exponent vector ${t} should have length ${this._var_name_list.length}, has length ${t.length}`);return new monomial_element(this,t,e)}}class monomial_element{constructor(t,e,s=""){this._ring=t,this.exponent_vector=e,this._module_generator=s;for(let t=0;t<e.length;t++)this[t]=e[t]}_initializeDegree(){let t=0,e=0;""!==this._module_generator&&(t+=this._ring._module_generators_dict[this._module_generator][0],e+=this._ring._module_generators_dict[this._module_generator][1]);for(let s=0;s<this.exponent_vector.length;s++)t+=this._ring._var_degree_list[s][0]*this.exponent_vector[s],e+=this._ring._var_degree_list[s][1]*this.exponent_vector[s];this._degree=[t,e]}getName(){return this._name||(this._name=monomialString(this._ring._var_name_list,this.exponent_vector,this._module_generator)),this._name}getDegree(){return this._degree||this._initializeDegree(),this._degree}multiply(t){if(this._ring!==t._ring)throw new Error("Cannot multiply elements from different rings.");if(""!==this._module_generator&&""!==t._module_generator)throw new Error("Cannot multiply two module elements, only a module element by a ring element.");let e=this._module_generator||t._module_generator,s=vectorSum(this.exponent_vector,t.exponent_vector);return new monomial_element(this._ring,s,e)}getStringifyingMapKey(){return this._module_generator+this.exponent_vector.toString()}toString(){return this.getName()}}class monomial_basis{constructor(t,e,s,i){this.sseq=t,this._tuples_to_classes=new StringifyingMap,this._strings_to_classes=new Map,this._tuples_to_strings=new StringifyingMap,this._strings_to_tuples=new Map,this.length=0,this.var_degree_dict=e,this.var_spec_list=s,this.module_generators_dict=i,this.module_generators=Object.keys(i);let r=[],n=[],o=[],_=[];for(let t=0;t<s.length;t++){let i=s[t],l=i[0];monomial_basis._validateVarSpec(i,e,t),r.push(l),n.push(e[l][0]),o.push(e[l][1]),_.push(range(...i.slice(1)))}this._stem_list=n,this._filtration_list=o,this._range_list=_,this._ring=new monomial_ring(r,r,e,i);let l=product(this.module_generators,..._);for(let e=0;e<l.length;e++){let s=l[e],i=s.shift(),r=this._ring.getElementFromVector(s,i),n=r.getDegree(),o=n[0],_=n[1],a=r.getName();t.xRange&&t.xRange&&(o<t.xRange[0]-10||o>t.xRange[1]+10)||(t.yRange&&t.max_differential_length&&(_>t.yRange[1]+t.max_differential_length||_<t.yRange[0])||this._add_class(r,t.addClass(o,_).setName(a)))}}_add_class(t,e){this.length++;t.exponent_vector;let s=t.getName();this._tuples_to_classes.set(t,e),this._strings_to_classes.set(s,e),this._tuples_to_strings.set(t,s),this._strings_to_tuples.set(s,t)}_ensure_vect(t){if(!Array.isArray(t))if("string"==typeof t){if(!this._strings_to_classes.has(t))throw new Error("Invalid variable name");t=this._strings_to_tuples.get(t)}else t=this._ring._exponent_map_to_vector(t);return t}addStructline(t,e){t=this._ring.getElement(t);for(let s of this){let i=s[1],r=this.get(s[0].multiply(t));if(void 0!==r){let t=this.sseq.addStructline(i,r);e&&e(t)}}return this}addDifferential(t,e,s,i){e=this._ring.getElement(e);for(let r of this){let n=r[0],o=r[1],_=this.get(r[0].multiply(e));if(s(n))if(_){let e=this.sseq.addDifferential(o,_,t);void 0!==i&&i(e,n)}else o.getPage()>t&&o.setPage(t)}return this}has(t){return!!this._strings_to_classes.has(t)||(t=this._ensure_vect(t),this._tuples_to_classes.has(t))}get(t,e){if(this._strings_to_classes.has(t))return this._strings_to_classes.get(t);if(this._tuples_to_classes.has(t))return this._tuples_to_classes.get(t);try{if(t=this._ring.getElement(t),this._tuples_to_classes.has(t))return this._tuples_to_classes.get(t)}catch(t){}return e}static _validateVarSpec(t,e,s){let i="Invalid variable specification '"+t+"' at position "+s+".";if(!Array.isArray(t))throw i+" Variable specification must be a list.";if(t.length<2||t.length>4)throw i+" Variable specification should be of length at least 2 and at most 4.";if("string"!=typeof t[0])throw i+" First entry of variable specification should be a string, the name of a variable.";if(!e.hasOwnProperty(t[0]))throw i+" Variable '"+t[0]+"' does not have an entry in the degree dictionary";for(let e=1;e<t.length;e++)if(!Number.isInteger(t[e]))throw i+" Expecting an integer in position '"+e+"'."}}monomial_basis.prototype[Symbol.iterator]=function*(){for(let t of this._tuples_to_classes)yield t},exports.monomial_basis=monomial_basis;class slice_basis{constructor(t,e,s,i){this.sseq=t,this._tuples_to_slices=new StringifyingMap,this.length=0,this.var_degree_dict=e,this.var_spec_list=s;let r=[],n=[],o=[],_=[];for(let t=0;t<s.length;t++){let i=s[t],l=i[0];monomial_basis._validateVarSpec(i,e,t),r.push(l),e[l].name?n.push(e[l].name):n.push(l),o.push(e[l].degree),_.push(range(...i.slice(1)))}this._stem_list=o,this._range_list=_;let l=Object.assign({},...Object.keys(e).map(t=>({[t]:[e[t],0]})));this._ring=new monomial_ring(r,n,l);for(let t of product(..._)){let e=this._ring.getElementFromVector(t);e.getDegree()[0],e.getName();this._add_slice(e,i)}}_add_slice(t,e){this.length++;t.exponent_vector,t.getName();this._tuples_to_slices.set(t,e(this.sseq,t))}addStructline(t,e,s){t=this._ring.getElement(t);for(let i of this){let r=i[1],n=this.get(i[0].multiply(t));if(void 0!==n)for(let t of Object.keys(r))if(n.hasOwnProperty(t+e)){let i=this.sseq.addStructline(r.get(t),n.get(t+e));s&&s(i)}}return this}addDifferential(t,e,s,i){let r=this._ring.getElement(e);for(let e of this){let n=e[0],o=e[1],_=this.get(n.multiply(r));for(let e of o){let r=e[0];if(s(n,r,o.get(r).y)){let e=o.get(r);if(_&&_.has(r-1)){let s=this.sseq.addDifferential(e,_.get(r-1),t);void 0!==i&&i(s,n)}else!_&&e.getPage()>t&&e.setPage(t)}}}return this}addDifferentialLeibniz(t,e,s,i,r,n,o){e=this._ensure_vect(e),i=this._ensure_vect(i);for(let _ of product(...n.map(t=>range(...t)))){let n=vectorLinearCombination(r,_),l=n.pop()+s,a=vectorSum(e,n);if(!this.has(a)||!this.get(a).has(l))continue;let h=this.get(a).get(l),g=vectorSum(i,n);if(this.has(g)&&this.get(g).has(l-1)){let e=this.get(g).get(l-1),s=this.sseq.addDifferential(h,e,t);void 0!==o&&o(s)}else!this.has(g)&&h.getPage()>t&&h.setPage(t)}}has(t){return t=this._ensure_vect(t),this._tuples_to_slices.has(t)}get(t,e){if(this._tuples_to_slices.has(t))return this._tuples_to_slices.get(t);try{if(t=this._ring.getElement(t),this._tuples_to_slices.has(t))return this._tuples_to_slices.get(t)}catch(t){}return e}}slice_basis.prototype[Symbol.iterator]=function*(){for(let t of this._tuples_to_slices)yield t},slice_basis.prototype._ensure_vect=monomial_basis.prototype._ensure_vect,exports.slice_basis=slice_basis;

},{"./StringifyingMap.js":14}],20:[function(require,module,exports){
!function(n,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r(n.d3=n.d3||{})}(this,function(n){"use strict";var r=function(n,r){return n<r?-1:n>r?1:n>=r?0:NaN},t=function(n){var t;return 1===n.length&&(t=n,n=function(n,e){return r(t(n),e)}),{left:function(r,t,e,o){for(null==e&&(e=0),null==o&&(o=r.length);e<o;){var u=e+o>>>1;n(r[u],t)<0?e=u+1:o=u}return e},right:function(r,t,e,o){for(null==e&&(e=0),null==o&&(o=r.length);e<o;){var u=e+o>>>1;n(r[u],t)>0?o=u:e=u+1}return e}}};var e=t(r),o=e.right,u=e.left;function f(n,r){return[n,r]}var l=function(n){return null===n?NaN:+n},i=function(n,r){var t,e,o=n.length,u=0,f=-1,i=0,a=0;if(null==r)for(;++f<o;)isNaN(t=l(n[f]))||(a+=(e=t-i)*(t-(i+=e/++u)));else for(;++f<o;)isNaN(t=l(r(n[f],f,n)))||(a+=(e=t-i)*(t-(i+=e/++u)));if(u>1)return a/(u-1)},a=function(n,r){var t=i(n,r);return t?Math.sqrt(t):t},h=function(n,r){var t,e,o,u=n.length,f=-1;if(null==r){for(;++f<u;)if(null!=(t=n[f])&&t>=t)for(e=o=t;++f<u;)null!=(t=n[f])&&(e>t&&(e=t),o<t&&(o=t))}else for(;++f<u;)if(null!=(t=r(n[f],f,n))&&t>=t)for(e=o=t;++f<u;)null!=(t=r(n[f],f,n))&&(e>t&&(e=t),o<t&&(o=t));return[e,o]},c=Array.prototype,s=c.slice,g=c.map,v=function(n){return function(){return n}},M=function(n){return n},p=function(n,r,t){n=+n,r=+r,t=(o=arguments.length)<2?(r=n,n=0,1):o<3?1:+t;for(var e=-1,o=0|Math.max(0,Math.ceil((r-n)/t)),u=new Array(o);++e<o;)u[e]=n+e*t;return u},d=Math.sqrt(50),y=Math.sqrt(10),N=Math.sqrt(2);function m(n,r,t){var e=(r-n)/Math.max(0,t),o=Math.floor(Math.log(e)/Math.LN10),u=e/Math.pow(10,o);return o>=0?(u>=d?10:u>=y?5:u>=N?2:1)*Math.pow(10,o):-Math.pow(10,-o)/(u>=d?10:u>=y?5:u>=N?2:1)}function w(n,r,t){var e=Math.abs(r-n)/Math.max(0,t),o=Math.pow(10,Math.floor(Math.log(e)/Math.LN10)),u=e/o;return u>=d?o*=10:u>=y?o*=5:u>=N&&(o*=2),r<n?-o:o}var A=function(n){return Math.ceil(Math.log(n.length)/Math.LN2)+1},x=function(n,r,t){if(null==t&&(t=l),e=n.length){if((r=+r)<=0||e<2)return+t(n[0],0,n);if(r>=1)return+t(n[e-1],e-1,n);var e,o=(e-1)*r,u=Math.floor(o),f=+t(n[u],u,n);return f+(+t(n[u+1],u+1,n)-f)*(o-u)}},b=function(n,r){var t,e,o=n.length,u=-1;if(null==r){for(;++u<o;)if(null!=(t=n[u])&&t>=t)for(e=t;++u<o;)null!=(t=n[u])&&e>t&&(e=t)}else for(;++u<o;)if(null!=(t=r(n[u],u,n))&&t>=t)for(e=t;++u<o;)null!=(t=r(n[u],u,n))&&e>t&&(e=t);return e},q=function(n){if(!(o=n.length))return[];for(var r=-1,t=b(n,L),e=new Array(t);++r<t;)for(var o,u=-1,f=e[r]=new Array(o);++u<o;)f[u]=n[u][r];return e};function L(n){return n.length}n.bisect=o,n.bisectRight=o,n.bisectLeft=u,n.ascending=r,n.bisector=t,n.cross=function(n,r,t){var e,o,u,l,i=n.length,a=r.length,h=new Array(i*a);for(null==t&&(t=f),e=u=0;e<i;++e)for(l=n[e],o=0;o<a;++o,++u)h[u]=t(l,r[o]);return h},n.descending=function(n,r){return r<n?-1:r>n?1:r>=n?0:NaN},n.deviation=a,n.extent=h,n.histogram=function(){var n=M,r=h,t=A;function e(e){var u,f,l=e.length,i=new Array(l);for(u=0;u<l;++u)i[u]=n(e[u],u,e);var a=r(i),h=a[0],c=a[1],s=t(i,h,c);Array.isArray(s)||(s=w(h,c,s),s=p(Math.ceil(h/s)*s,Math.floor(c/s)*s,s));for(var g=s.length;s[0]<=h;)s.shift(),--g;for(;s[g-1]>c;)s.pop(),--g;var v,M=new Array(g+1);for(u=0;u<=g;++u)(v=M[u]=[]).x0=u>0?s[u-1]:h,v.x1=u<g?s[u]:c;for(u=0;u<l;++u)h<=(f=i[u])&&f<=c&&M[o(s,f,0,g)].push(e[u]);return M}return e.value=function(r){return arguments.length?(n="function"==typeof r?r:v(r),e):n},e.domain=function(n){return arguments.length?(r="function"==typeof n?n:v([n[0],n[1]]),e):r},e.thresholds=function(n){return arguments.length?(t="function"==typeof n?n:Array.isArray(n)?v(s.call(n)):v(n),e):t},e},n.thresholdFreedmanDiaconis=function(n,t,e){return n=g.call(n,l).sort(r),Math.ceil((e-t)/(2*(x(n,.75)-x(n,.25))*Math.pow(n.length,-1/3)))},n.thresholdScott=function(n,r,t){return Math.ceil((t-r)/(3.5*a(n)*Math.pow(n.length,-1/3)))},n.thresholdSturges=A,n.max=function(n,r){var t,e,o=n.length,u=-1;if(null==r){for(;++u<o;)if(null!=(t=n[u])&&t>=t)for(e=t;++u<o;)null!=(t=n[u])&&t>e&&(e=t)}else for(;++u<o;)if(null!=(t=r(n[u],u,n))&&t>=t)for(e=t;++u<o;)null!=(t=r(n[u],u,n))&&t>e&&(e=t);return e},n.mean=function(n,r){var t,e=n.length,o=e,u=-1,f=0;if(null==r)for(;++u<e;)isNaN(t=l(n[u]))?--o:f+=t;else for(;++u<e;)isNaN(t=l(r(n[u],u,n)))?--o:f+=t;if(o)return f/o},n.median=function(n,t){var e,o=n.length,u=-1,f=[];if(null==t)for(;++u<o;)isNaN(e=l(n[u]))||f.push(e);else for(;++u<o;)isNaN(e=l(t(n[u],u,n)))||f.push(e);return x(f.sort(r),.5)},n.merge=function(n){for(var r,t,e,o=n.length,u=-1,f=0;++u<o;)f+=n[u].length;for(t=new Array(f);--o>=0;)for(r=(e=n[o]).length;--r>=0;)t[--f]=e[r];return t},n.min=b,n.pairs=function(n,r){null==r&&(r=f);for(var t=0,e=n.length-1,o=n[0],u=new Array(e<0?0:e);t<e;)u[t]=r(o,o=n[++t]);return u},n.permute=function(n,r){for(var t=r.length,e=new Array(t);t--;)e[t]=n[r[t]];return e},n.quantile=x,n.range=p,n.scan=function(n,t){if(e=n.length){var e,o,u=0,f=0,l=n[f];for(null==t&&(t=r);++u<e;)(t(o=n[u],l)<0||0!==t(l,l))&&(l=o,f=u);return 0===t(l,l)?f:void 0}},n.shuffle=function(n,r,t){for(var e,o,u=(null==t?n.length:t)-(r=null==r?0:+r);u;)o=Math.random()*u--|0,e=n[u+r],n[u+r]=n[o+r],n[o+r]=e;return n},n.sum=function(n,r){var t,e=n.length,o=-1,u=0;if(null==r)for(;++o<e;)(t=+n[o])&&(u+=t);else for(;++o<e;)(t=+r(n[o],o,n))&&(u+=t);return u},n.ticks=function(n,r,t){var e,o,u,f,l=-1;if(t=+t,(n=+n)==(r=+r)&&t>0)return[n];if((e=r<n)&&(o=n,n=r,r=o),0===(f=m(n,r,t))||!isFinite(f))return[];if(f>0)for(n=Math.ceil(n/f),r=Math.floor(r/f),u=new Array(o=Math.ceil(r-n+1));++l<o;)u[l]=(n+l)*f;else for(n=Math.floor(n*f),r=Math.ceil(r*f),u=new Array(o=Math.ceil(n-r+1));++l<o;)u[l]=(n-l)/f;return e&&u.reverse(),u},n.tickIncrement=m,n.tickStep=w,n.transpose=q,n.variance=i,n.zip=function(){return q(arguments)},Object.defineProperty(n,"__esModule",{value:!0})});

},{}],21:[function(require,module,exports){
!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n(t.d3=t.d3||{})}(this,function(t){"use strict";var n=Array.prototype.slice,e=function(t){return t},r=1,i=2,a=3,o=4,u=1e-6;function c(t){return"translate("+(t+.5)+",0)"}function l(t){return"translate(0,"+(t+.5)+")"}function s(){return!this.__axis}function f(t,f){var d=[],m=null,p=null,h=6,g=6,x=3,k=t===r||t===o?-1:1,y=t===o||t===i?"x":"y",_=t===r||t===a?c:l;function v(n){var c=null==m?f.ticks?f.ticks.apply(f,d):f.domain():m,l=null==p?f.tickFormat?f.tickFormat.apply(f,d):e:p,v=Math.max(h,0)+x,M=f.range(),b=+M[0]+.5,A=+M[M.length-1]+.5,F=(f.bandwidth?function(t){var n=Math.max(0,t.bandwidth()-1)/2;return t.round()&&(n=Math.round(n)),function(e){return+t(e)+n}}:function(t){return function(n){return+t(n)}})(f.copy()),z=n.selection?n.selection():n,V=z.selectAll(".domain").data([null]),H=z.selectAll(".tick").data(c,f).order(),S=H.exit(),j=H.enter().append("g").attr("class","tick"),w=H.select("line"),O=H.select("text");V=V.merge(V.enter().insert("path",".tick").attr("class","domain").attr("stroke","#000")),H=H.merge(j),w=w.merge(j.append("line").attr("stroke","#000").attr(y+"2",k*h)),O=O.merge(j.append("text").attr("fill","#000").attr(y,k*v).attr("dy",t===r?"0em":t===a?"0.71em":"0.32em")),n!==z&&(V=V.transition(n),H=H.transition(n),w=w.transition(n),O=O.transition(n),S=S.transition(n).attr("opacity",u).attr("transform",function(t){return isFinite(t=F(t))?_(t):this.getAttribute("transform")}),j.attr("opacity",u).attr("transform",function(t){var n=this.parentNode.__axis;return _(n&&isFinite(n=n(t))?n:F(t))})),S.remove(),V.attr("d",t===o||t==i?"M"+k*g+","+b+"H0.5V"+A+"H"+k*g:"M"+b+","+k*g+"V0.5H"+A+"V"+k*g),H.attr("opacity",1).attr("transform",function(t){return _(F(t))}),w.attr(y+"2",k*h),O.attr(y,k*v).text(l),z.filter(s).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",t===i?"start":t===o?"end":"middle"),z.each(function(){this.__axis=F})}return v.scale=function(t){return arguments.length?(f=t,v):f},v.ticks=function(){return d=n.call(arguments),v},v.tickArguments=function(t){return arguments.length?(d=null==t?[]:n.call(t),v):d.slice()},v.tickValues=function(t){return arguments.length?(m=null==t?null:n.call(t),v):m&&m.slice()},v.tickFormat=function(t){return arguments.length?(p=t,v):p},v.tickSize=function(t){return arguments.length?(h=g=+t,v):h},v.tickSizeInner=function(t){return arguments.length?(h=+t,v):h},v.tickSizeOuter=function(t){return arguments.length?(g=+t,v):g},v.tickPadding=function(t){return arguments.length?(x=+t,v):x},v}t.axisTop=function(t){return f(r,t)},t.axisRight=function(t){return f(i,t)},t.axisBottom=function(t){return f(a,t)},t.axisLeft=function(t){return f(o,t)},Object.defineProperty(t,"__esModule",{value:!0})});

},{}],22:[function(require,module,exports){
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("d3-dispatch"),require("d3-drag"),require("d3-interpolate"),require("d3-selection"),require("d3-transition")):"function"==typeof define&&define.amd?define(["exports","d3-dispatch","d3-drag","d3-interpolate","d3-selection","d3-transition"],e):e(t.d3=t.d3||{},t.d3,t.d3,t.d3,t.d3,t.d3)}(this,function(t,e,n,r,s,i){"use strict";var a=function(t){return function(){return t}},u=function(t,e,n){this.target=t,this.type=e,this.selection=n};function o(){s.event.stopImmediatePropagation()}var l=function(){s.event.preventDefault(),s.event.stopImmediatePropagation()},c={name:"drag"},h={name:"space"},f={name:"handle"},p={name:"center"},d={name:"x",handles:["e","w"].map(_),input:function(t,e){return t&&[[t[0],e[0][1]],[t[1],e[1][1]]]},output:function(t){return t&&[t[0][0],t[1][0]]}},v={name:"y",handles:["n","s"].map(_),input:function(t,e){return t&&[[e[0][0],t[0]],[e[1][0],t[1]]]},output:function(t){return t&&[t[0][1],t[1][1]]}},m={name:"xy",handles:["n","e","s","w","nw","ne","se","sw"].map(_),input:function(t){return t},output:function(t){return t}},y={overlay:"crosshair",selection:"move",n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},b={e:"w",w:"e",nw:"ne",ne:"nw",se:"sw",sw:"se"},w={n:"s",s:"n",nw:"sw",ne:"se",se:"ne",sw:"nw"},g={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},x={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1};function _(t){return{type:t}}function M(){return!s.event.button}function k(){var t=this.ownerSVGElement||this;return[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]}function z(t){for(;!t.__brush;)if(!(t=t.parentNode))return;return t.__brush}function A(t){return t[0][0]===t[1][0]||t[0][1]===t[1][1]}function q(t){var m,q=k,E=M,K=e.dispatch(S,"start","brush","end"),P=6;function S(e){var n=e.property("__brush",D).selectAll(".overlay").data([_("overlay")]);n.enter().append("rect").attr("class","overlay").attr("pointer-events","all").attr("cursor",y.overlay).merge(n).each(function(){var t=z(this).extent;s.select(this).attr("x",t[0][0]).attr("y",t[0][1]).attr("width",t[1][0]-t[0][0]).attr("height",t[1][1]-t[0][1])}),e.selectAll(".selection").data([_("selection")]).enter().append("rect").attr("class","selection").attr("cursor",y.selection).attr("fill","#777").attr("fill-opacity",.3).attr("stroke","#fff").attr("shape-rendering","crispEdges");var r=e.selectAll(".handle").data(t.handles,function(t){return t.type});r.exit().remove(),r.enter().append("rect").attr("class",function(t){return"handle handle--"+t.type}).attr("cursor",function(t){return y[t.type]}),e.each(T).attr("fill","none").attr("pointer-events","all").style("-webkit-tap-highlight-color","rgba(0,0,0,0)").on("mousedown.brush touchstart.brush",C)}function T(){var t=s.select(this),e=z(this).selection;e?(t.selectAll(".selection").style("display",null).attr("x",e[0][0]).attr("y",e[0][1]).attr("width",e[1][0]-e[0][0]).attr("height",e[1][1]-e[0][1]),t.selectAll(".handle").style("display",null).attr("x",function(t){return"e"===t.type[t.type.length-1]?e[1][0]-P/2:e[0][0]-P/2}).attr("y",function(t){return"s"===t.type[0]?e[1][1]-P/2:e[0][1]-P/2}).attr("width",function(t){return"n"===t.type||"s"===t.type?e[1][0]-e[0][0]+P:P}).attr("height",function(t){return"e"===t.type||"w"===t.type?e[1][1]-e[0][1]+P:P})):t.selectAll(".selection,.handle").style("display","none").attr("x",null).attr("y",null).attr("width",null).attr("height",null)}function V(t,e){return t.__brush.emitter||new j(t,e)}function j(t,e){this.that=t,this.args=e,this.state=t.__brush,this.active=0}function C(){if(s.event.touches){if(s.event.changedTouches.length<s.event.touches.length)return l()}else if(m)return;if(E.apply(this,arguments)){var e,r,a,u,_,M,k,q,K,P,S,j,C,D=this,I=s.event.target.__data__.type,G="selection"===(s.event.metaKey?I="overlay":I)?c:s.event.altKey?p:f,N=t===v?null:g[I],O=t===d?null:x[I],X=z(D),Y=X.extent,B=X.selection,F=Y[0][0],H=Y[0][1],J=Y[1][0],L=Y[1][1],Q=N&&O&&s.event.shiftKey,R=s.mouse(D),U=R,W=V(D,arguments).beforestart();"overlay"===I?X.selection=B=[[e=t===v?F:R[0],a=t===d?H:R[1]],[_=t===v?J:e,k=t===d?L:a]]:(e=B[0][0],a=B[0][1],_=B[1][0],k=B[1][1]),r=e,u=a,M=_,q=k;var Z=s.select(D).attr("pointer-events","none"),$=Z.selectAll(".overlay").attr("cursor",y[I]);if(s.event.touches)Z.on("touchmove.brush",et,!0).on("touchend.brush touchcancel.brush",rt,!0);else{var tt=s.select(s.event.view).on("keydown.brush",function(){switch(s.event.keyCode){case 16:Q=N&&O;break;case 18:G===f&&(N&&(_=M-K*N,e=r+K*N),O&&(k=q-P*O,a=u+P*O),G=p,nt());break;case 32:G!==f&&G!==p||(N<0?_=M-K:N>0&&(e=r-K),O<0?k=q-P:O>0&&(a=u-P),G=h,$.attr("cursor",y.selection),nt());break;default:return}l()},!0).on("keyup.brush",function(){switch(s.event.keyCode){case 16:Q&&(j=C=Q=!1,nt());break;case 18:G===p&&(N<0?_=M:N>0&&(e=r),O<0?k=q:O>0&&(a=u),G=f,nt());break;case 32:G===h&&(s.event.altKey?(N&&(_=M-K*N,e=r+K*N),O&&(k=q-P*O,a=u+P*O),G=p):(N<0?_=M:N>0&&(e=r),O<0?k=q:O>0&&(a=u),G=f),$.attr("cursor",y[I]),nt());break;default:return}l()},!0).on("mousemove.brush",et,!0).on("mouseup.brush",rt,!0);n.dragDisable(s.event.view)}o(),i.interrupt(D),T.call(D),W.start()}function et(){var t=s.mouse(D);!Q||j||C||(Math.abs(t[0]-U[0])>Math.abs(t[1]-U[1])?C=!0:j=!0),U=t,S=!0,l(),nt()}function nt(){var t;switch(K=U[0]-R[0],P=U[1]-R[1],G){case h:case c:N&&(K=Math.max(F-e,Math.min(J-_,K)),r=e+K,M=_+K),O&&(P=Math.max(H-a,Math.min(L-k,P)),u=a+P,q=k+P);break;case f:N<0?(K=Math.max(F-e,Math.min(J-e,K)),r=e+K,M=_):N>0&&(K=Math.max(F-_,Math.min(J-_,K)),r=e,M=_+K),O<0?(P=Math.max(H-a,Math.min(L-a,P)),u=a+P,q=k):O>0&&(P=Math.max(H-k,Math.min(L-k,P)),u=a,q=k+P);break;case p:N&&(r=Math.max(F,Math.min(J,e-K*N)),M=Math.max(F,Math.min(J,_+K*N))),O&&(u=Math.max(H,Math.min(L,a-P*O)),q=Math.max(H,Math.min(L,k+P*O)))}M<r&&(N*=-1,t=e,e=_,_=t,t=r,r=M,M=t,I in b&&$.attr("cursor",y[I=b[I]])),q<u&&(O*=-1,t=a,a=k,k=t,t=u,u=q,q=t,I in w&&$.attr("cursor",y[I=w[I]])),X.selection&&(B=X.selection),j&&(r=B[0][0],M=B[1][0]),C&&(u=B[0][1],q=B[1][1]),B[0][0]===r&&B[0][1]===u&&B[1][0]===M&&B[1][1]===q||(X.selection=[[r,u],[M,q]],T.call(D),W.brush())}function rt(){if(o(),s.event.touches){if(s.event.touches.length)return;m&&clearTimeout(m),m=setTimeout(function(){m=null},500),Z.on("touchmove.brush touchend.brush touchcancel.brush",null)}else n.dragEnable(s.event.view,S),tt.on("keydown.brush keyup.brush mousemove.brush mouseup.brush",null);Z.attr("pointer-events","all"),$.attr("cursor",y.overlay),X.selection&&(B=X.selection),A(B)&&(X.selection=null,T.call(D)),W.end()}}function D(){var e=this.__brush||{selection:null};return e.extent=q.apply(this,arguments),e.dim=t,e}return S.move=function(e,n){e.selection?e.on("start.brush",function(){V(this,arguments).beforestart().start()}).on("interrupt.brush end.brush",function(){V(this,arguments).end()}).tween("brush",function(){var e=this,s=e.__brush,i=V(e,arguments),a=s.selection,u=t.input("function"==typeof n?n.apply(this,arguments):n,s.extent),o=r.interpolate(a,u);function l(t){s.selection=1===t&&A(u)?null:o(t),T.call(e),i.brush()}return a&&u?l:l(1)}):e.each(function(){var e=arguments,r=this.__brush,s=t.input("function"==typeof n?n.apply(this,e):n,r.extent),a=V(this,e).beforestart();i.interrupt(this),r.selection=null==s||A(s)?null:s,T.call(this),a.start().brush().end()})},j.prototype={beforestart:function(){return 1==++this.active&&(this.state.emitter=this,this.starting=!0),this},start:function(){return this.starting&&(this.starting=!1,this.emit("start")),this},brush:function(){return this.emit("brush"),this},end:function(){return 0==--this.active&&(delete this.state.emitter,this.emit("end")),this},emit:function(e){s.customEvent(new u(S,e,t.output(this.state.selection)),K.apply,K,[e,this.that,this.args])}},S.extent=function(t){return arguments.length?(q="function"==typeof t?t:a([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),S):q},S.filter=function(t){return arguments.length?(E="function"==typeof t?t:a(!!t),S):E},S.handleSize=function(t){return arguments.length?(P=+t,S):P},S.on=function(){var t=K.on.apply(K,arguments);return t===K?S:t},S}t.brush=function(){return q(m)},t.brushX=function(){return q(d)},t.brushY=function(){return q(v)},t.brushSelection=function(t){var e=t.__brush;return e?e.dim.output(e.selection):null},Object.defineProperty(t,"__esModule",{value:!0})});

},{"d3-dispatch":27,"d3-drag":28,"d3-interpolate":36,"d3-selection":43,"d3-transition":48}],23:[function(require,module,exports){
!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("d3-array"),require("d3-path")):"function"==typeof define&&define.amd?define(["exports","d3-array","d3-path"],t):t(n.d3=n.d3||{},n.d3,n.d3)}(this,function(n,t,r){"use strict";var e=Math.cos,u=Math.sin,o=Math.PI,a=o/2,l=2*o,i=Math.max;var c=Array.prototype.slice,f=function(n){return function(){return n}};function s(n){return n.source}function p(n){return n.target}function h(n){return n.radius}function d(n){return n.startAngle}function g(n){return n.endAngle}n.chord=function(){var n=0,r=null,e=null,u=null;function o(o){var a,c,f,s,p,h,d=o.length,g=[],v=t.range(d),y=[],A=[],x=A.groups=new Array(d),b=new Array(d*d);for(a=0,p=-1;++p<d;){for(c=0,h=-1;++h<d;)c+=o[p][h];g.push(c),y.push(t.range(d)),a+=c}for(r&&v.sort(function(n,t){return r(g[n],g[t])}),e&&y.forEach(function(n,t){n.sort(function(n,r){return e(o[t][n],o[t][r])})}),s=(a=i(0,l-n*d)/a)?n:l/d,c=0,p=-1;++p<d;){for(f=c,h=-1;++h<d;){var M=v[p],m=y[M][h],q=o[M][m],_=c,C=c+=q*a;b[m*d+M]={index:M,subindex:m,startAngle:_,endAngle:C,value:q}}x[M]={index:M,startAngle:f,endAngle:c,value:g[M]},c+=s}for(p=-1;++p<d;)for(h=p-1;++h<d;){var P=b[h*d+p],T=b[p*d+h];(P.value||T.value)&&A.push(P.value<T.value?{source:T,target:P}:{source:P,target:T})}return u?A.sort(u):A}return o.padAngle=function(t){return arguments.length?(n=i(0,t),o):n},o.sortGroups=function(n){return arguments.length?(r=n,o):r},o.sortSubgroups=function(n){return arguments.length?(e=n,o):e},o.sortChords=function(n){return arguments.length?(null==n?u=null:(t=n,u=function(n,r){return t(n.source.value+n.target.value,r.source.value+r.target.value)})._=n,o):u&&u._;var t},o},n.ribbon=function(){var n=s,t=p,o=h,l=d,i=g,v=null;function y(){var f,s=c.call(arguments),p=n.apply(this,s),h=t.apply(this,s),d=+o.apply(this,(s[0]=p,s)),g=l.apply(this,s)-a,y=i.apply(this,s)-a,A=d*e(g),x=d*u(g),b=+o.apply(this,(s[0]=h,s)),M=l.apply(this,s)-a,m=i.apply(this,s)-a;if(v||(v=f=r.path()),v.moveTo(A,x),v.arc(0,0,d,g,y),g===M&&y===m||(v.quadraticCurveTo(0,0,b*e(M),b*u(M)),v.arc(0,0,b,M,m)),v.quadraticCurveTo(0,0,A,x),v.closePath(),f)return v=null,f+""||null}return y.radius=function(n){return arguments.length?(o="function"==typeof n?n:f(+n),y):o},y.startAngle=function(n){return arguments.length?(l="function"==typeof n?n:f(+n),y):l},y.endAngle=function(n){return arguments.length?(i="function"==typeof n?n:f(+n),y):i},y.source=function(t){return arguments.length?(n=t,y):n},y.target=function(n){return arguments.length?(t=n,y):t},y.context=function(n){return arguments.length?(v=null==n?null:n,y):v},y},Object.defineProperty(n,"__esModule",{value:!0})});

},{"d3-array":20,"d3-path":37}],24:[function(require,module,exports){
!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(n.d3=n.d3||{})}(this,function(n){"use strict";function t(){}function e(n,e){var r=new t;if(n instanceof t)n.each(function(n,t){r.set(t,n)});else if(Array.isArray(n)){var i,u=-1,o=n.length;if(null==e)for(;++u<o;)r.set(u,n[u]);else for(;++u<o;)r.set(e(i=n[u],u,n),i)}else if(n)for(var s in n)r.set(s,n[s]);return r}t.prototype=e.prototype={constructor:t,has:function(n){return"$"+n in this},get:function(n){return this["$"+n]},set:function(n,t){return this["$"+n]=t,this},remove:function(n){var t="$"+n;return t in this&&delete this[t]},clear:function(){for(var n in this)"$"===n[0]&&delete this[n]},keys:function(){var n=[];for(var t in this)"$"===t[0]&&n.push(t.slice(1));return n},values:function(){var n=[];for(var t in this)"$"===t[0]&&n.push(this[t]);return n},entries:function(){var n=[];for(var t in this)"$"===t[0]&&n.push({key:t.slice(1),value:this[t]});return n},size:function(){var n=0;for(var t in this)"$"===t[0]&&++n;return n},empty:function(){for(var n in this)if("$"===n[0])return!1;return!0},each:function(n){for(var t in this)"$"===t[0]&&n(this[t],t.slice(1),this)}};function r(){return{}}function i(n,t,e){n[t]=e}function u(){return e()}function o(n,t,e){n.set(t,e)}function s(){}var f=e.prototype;function c(n,t){var e=new s;if(n instanceof s)n.each(function(n){e.add(n)});else if(n){var r=-1,i=n.length;if(null==t)for(;++r<i;)e.add(n[r]);else for(;++r<i;)e.add(t(n[r],r,n))}return e}s.prototype=c.prototype={constructor:s,has:f.has,add:function(n){return this["$"+(n+="")]=n,this},remove:f.remove,clear:f.clear,values:f.keys,size:f.size,empty:f.empty,each:f.each};n.nest=function(){var n,t,s,f=[],c=[];function a(r,i,u,o){if(i>=f.length)return null!=n&&r.sort(n),null!=t?t(r):r;for(var s,c,h,l=-1,v=r.length,p=f[i++],y=e(),d=u();++l<v;)(h=y.get(s=p(c=r[l])+""))?h.push(c):y.set(s,[c]);return y.each(function(n,t){o(d,t,a(n,i,u,o))}),d}return s={object:function(n){return a(n,0,r,i)},map:function(n){return a(n,0,u,o)},entries:function(n){return function n(e,r){if(++r>f.length)return e;var i,u=c[r-1];return null!=t&&r>=f.length?i=e.entries():(i=[],e.each(function(t,e){i.push({key:e,values:n(t,r)})})),null!=u?i.sort(function(n,t){return u(n.key,t.key)}):i}(a(n,0,u,o),0)},key:function(n){return f.push(n),s},sortKeys:function(n){return c[f.length-1]=n,s},sortValues:function(t){return n=t,s},rollup:function(n){return t=n,s}}},n.set=c,n.map=e,n.keys=function(n){var t=[];for(var e in n)t.push(e);return t},n.values=function(n){var t=[];for(var e in n)t.push(n[e]);return t},n.entries=function(n){var t=[];for(var e in n)t.push({key:e,value:n[e]});return t},Object.defineProperty(n,"__esModule",{value:!0})});

},{}],25:[function(require,module,exports){
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(t.d3=t.d3||{})}(this,function(t){"use strict";var e=function(t,e,n){t.prototype=e.prototype=n,n.constructor=t};function n(t,e){var n=Object.create(t.prototype);for(var i in e)n[i]=e[i];return n}function i(){}var r="\\s*([+-]?\\d+)\\s*",a="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",h="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",s=/^#([0-9a-f]{3})$/,o=/^#([0-9a-f]{6})$/,l=new RegExp("^rgb\\("+[r,r,r]+"\\)$"),u=new RegExp("^rgb\\("+[h,h,h]+"\\)$"),c=new RegExp("^rgba\\("+[r,r,r,a]+"\\)$"),g=new RegExp("^rgba\\("+[h,h,h,a]+"\\)$"),d=new RegExp("^hsl\\("+[a,h,h]+"\\)$"),p=new RegExp("^hsla\\("+[a,h,h,a]+"\\)$"),f={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function b(t){var e;return t=(t+"").trim().toLowerCase(),(e=s.exec(t))?new N((e=parseInt(e[1],16))>>8&15|e>>4&240,e>>4&15|240&e,(15&e)<<4|15&e,1):(e=o.exec(t))?y(parseInt(e[1],16)):(e=l.exec(t))?new N(e[1],e[2],e[3],1):(e=u.exec(t))?new N(255*e[1]/100,255*e[2]/100,255*e[3]/100,1):(e=c.exec(t))?w(e[1],e[2],e[3],e[4]):(e=g.exec(t))?w(255*e[1]/100,255*e[2]/100,255*e[3]/100,e[4]):(e=d.exec(t))?v(e[1],e[2]/100,e[3]/100,1):(e=p.exec(t))?v(e[1],e[2]/100,e[3]/100,e[4]):f.hasOwnProperty(t)?y(f[t]):"transparent"===t?new N(NaN,NaN,NaN,0):null}function y(t){return new N(t>>16&255,t>>8&255,255&t,1)}function w(t,e,n,i){return i<=0&&(t=e=n=NaN),new N(t,e,n,i)}function m(t){return t instanceof i||(t=b(t)),t?new N((t=t.rgb()).r,t.g,t.b,t.opacity):new N}function k(t,e,n,i){return 1===arguments.length?m(t):new N(t,e,n,null==i?1:i)}function N(t,e,n,i){this.r=+t,this.g=+e,this.b=+n,this.opacity=+i}function M(t){return((t=Math.max(0,Math.min(255,Math.round(t)||0)))<16?"0":"")+t.toString(16)}function v(t,e,n,i){return i<=0?t=e=n=NaN:n<=0||n>=1?t=e=NaN:e<=0&&(t=NaN),new q(t,e,n,i)}function x(t,e,n,r){return 1===arguments.length?function(t){if(t instanceof q)return new q(t.h,t.s,t.l,t.opacity);if(t instanceof i||(t=b(t)),!t)return new q;if(t instanceof q)return t;var e=(t=t.rgb()).r/255,n=t.g/255,r=t.b/255,a=Math.min(e,n,r),h=Math.max(e,n,r),s=NaN,o=h-a,l=(h+a)/2;return o?(s=e===h?(n-r)/o+6*(n<r):n===h?(r-e)/o+2:(e-n)/o+4,o/=l<.5?h+a:2-h-a,s*=60):o=l>0&&l<1?0:s,new q(s,o,l,t.opacity)}(t):new q(t,e,n,null==r?1:r)}function q(t,e,n,i){this.h=+t,this.s=+e,this.l=+n,this.opacity=+i}function E(t,e,n){return 255*(t<60?e+(n-e)*t/60:t<180?n:t<240?e+(n-e)*(240-t)/60:e)}e(i,b,{displayable:function(){return this.rgb().displayable()},hex:function(){return this.rgb().hex()},toString:function(){return this.rgb()+""}}),e(N,k,n(i,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new N(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new N(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},hex:function(){return"#"+M(this.r)+M(this.g)+M(this.b)},toString:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}})),e(q,x,n(i,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new q(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new q(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),e=isNaN(t)||isNaN(this.s)?0:this.s,n=this.l,i=n+(n<.5?n:1-n)*e,r=2*n-i;return new N(E(t>=240?t-240:t+120,r,i),E(t,r,i),E(t<120?t+240:t-120,r,i),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var $=Math.PI/180,R=180/Math.PI,j=.96422,I=1,P=.82521,O=4/29,S=6/29,_=3*S*S,z=S*S*S;function C(t){if(t instanceof A)return new A(t.l,t.a,t.b,t.opacity);if(t instanceof K){if(isNaN(t.h))return new A(t.l,0,0,t.opacity);var e=t.h*$;return new A(t.l,Math.cos(e)*t.c,Math.sin(e)*t.c,t.opacity)}t instanceof N||(t=m(t));var n,i,r=G(t.r),a=G(t.g),h=G(t.b),s=B((.2225045*r+.7168786*a+.0606169*h)/I);return r===a&&a===h?n=i=s:(n=B((.4360747*r+.3850649*a+.1430804*h)/j),i=B((.0139322*r+.0971045*a+.7141733*h)/P)),new A(116*s-16,500*(n-s),200*(s-i),t.opacity)}function L(t,e,n,i){return 1===arguments.length?C(t):new A(t,e,n,null==i?1:i)}function A(t,e,n,i){this.l=+t,this.a=+e,this.b=+n,this.opacity=+i}function B(t){return t>z?Math.pow(t,1/3):t/_+O}function D(t){return t>S?t*t*t:_*(t-O)}function F(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function G(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function H(t){if(t instanceof K)return new K(t.h,t.c,t.l,t.opacity);if(t instanceof A||(t=C(t)),0===t.a&&0===t.b)return new K(NaN,0,t.l,t.opacity);var e=Math.atan2(t.b,t.a)*R;return new K(e<0?e+360:e,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}function J(t,e,n,i){return 1===arguments.length?H(t):new K(t,e,n,null==i?1:i)}function K(t,e,n,i){this.h=+t,this.c=+e,this.l=+n,this.opacity=+i}e(A,L,n(i,{brighter:function(t){return new A(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new A(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,e=isNaN(this.a)?t:t+this.a/500,n=isNaN(this.b)?t:t-this.b/200;return new N(F(3.1338561*(e=j*D(e))-1.6168667*(t=I*D(t))-.4906146*(n=P*D(n))),F(-.9787684*e+1.9161415*t+.033454*n),F(.0719453*e-.2289914*t+1.4052427*n),this.opacity)}})),e(K,J,n(i,{brighter:function(t){return new K(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker:function(t){return new K(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb:function(){return C(this).rgb()}}));var Q=-.14861,T=1.78277,U=-.29227,V=-.90649,W=1.97294,X=W*V,Y=W*T,Z=T*U-V*Q;function tt(t,e,n,i){return 1===arguments.length?function(t){if(t instanceof et)return new et(t.h,t.s,t.l,t.opacity);t instanceof N||(t=m(t));var e=t.r/255,n=t.g/255,i=t.b/255,r=(Z*i+X*e-Y*n)/(Z+X-Y),a=i-r,h=(W*(n-r)-U*a)/V,s=Math.sqrt(h*h+a*a)/(W*r*(1-r)),o=s?Math.atan2(h,a)*R-120:NaN;return new et(o<0?o+360:o,s,r,t.opacity)}(t):new et(t,e,n,null==i?1:i)}function et(t,e,n,i){this.h=+t,this.s=+e,this.l=+n,this.opacity=+i}e(et,tt,n(i,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new et(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new et(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*$,e=+this.l,n=isNaN(this.s)?0:this.s*e*(1-e),i=Math.cos(t),r=Math.sin(t);return new N(255*(e+n*(Q*i+T*r)),255*(e+n*(U*i+V*r)),255*(e+n*(W*i)),this.opacity)}})),t.color=b,t.rgb=k,t.hsl=x,t.lab=L,t.hcl=J,t.lch=function(t,e,n,i){return 1===arguments.length?H(t):new K(n,e,t,null==i?1:i)},t.gray=function(t,e){return new A(t,0,0,null==e?1:e)},t.cubehelix=tt,Object.defineProperty(t,"__esModule",{value:!0})});

},{}],26:[function(require,module,exports){
!function(t,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("d3-array")):"function"==typeof define&&define.amd?define(["exports","d3-array"],r):r(t.d3=t.d3||{},t.d3)}(this,function(t,r){"use strict";var n=Array.prototype.slice,e=function(t,r){return t-r},i=function(t){for(var r=0,n=t.length,e=t[n-1][1]*t[0][0]-t[n-1][0]*t[0][1];++r<n;)e+=t[r-1][1]*t[r][0]-t[r-1][0]*t[r][1];return e},a=function(t){return function(){return t}},o=function(t,r){for(var n,e=-1,i=r.length;++e<i;)if(n=h(t,r[e]))return n;return 0};function h(t,r){for(var n=r[0],e=r[1],i=-1,a=0,o=t.length,h=o-1;a<o;h=a++){var u=t[a],c=u[0],d=u[1],l=t[h],s=l[0],g=l[1];if(f(u,l,r))return 0;d>e!=g>e&&n<(s-c)*(e-d)/(g-d)+c&&(i=-i)}return i}function f(t,r,n){var e,i,a,o;return function(t,r,n){return(r[0]-t[0])*(n[1]-t[1])==(n[0]-t[0])*(r[1]-t[1])}(t,r,n)&&(i=t[e=+(t[0]===r[0])],a=n[e],o=r[e],i<=a&&a<=o||o<=a&&a<=i)}var u=function(){},c=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]],d=function(){var t=1,h=1,f=r.thresholdSturges,d=v;function l(t){var n=f(t);if(Array.isArray(n))n=n.slice().sort(e);else{var i=r.extent(t),a=i[0],o=i[1];n=r.tickStep(a,o,n),n=r.range(Math.floor(a/n)*n,Math.floor(o/n)*n,n)}return n.map(function(r){return s(t,r)})}function s(r,n){var e=[],a=[];return function(r,n,e){var i,a,o,f,u,d,l=new Array,s=new Array;i=a=-1,f=r[0]>=n,c[f<<1].forEach(v);for(;++i<t-1;)o=f,f=r[i+1]>=n,c[o|f<<1].forEach(v);c[f<<0].forEach(v);for(;++a<h-1;){for(i=-1,f=r[a*t+t]>=n,u=r[a*t]>=n,c[f<<1|u<<2].forEach(v);++i<t-1;)o=f,f=r[a*t+t+i+1]>=n,d=u,u=r[a*t+i+1]>=n,c[o|f<<1|u<<2|d<<3].forEach(v);c[f|u<<3].forEach(v)}i=-1,u=r[a*t]>=n,c[u<<2].forEach(v);for(;++i<t-1;)d=u,u=r[a*t+i+1]>=n,c[u<<2|d<<3].forEach(v);function v(t){var r,n,o=[t[0][0]+i,t[0][1]+a],h=[t[1][0]+i,t[1][1]+a],f=g(o),u=g(h);(r=s[f])?(n=l[u])?(delete s[r.end],delete l[n.start],r===n?(r.ring.push(h),e(r.ring)):l[r.start]=s[n.end]={start:r.start,end:n.end,ring:r.ring.concat(n.ring)}):(delete s[r.end],r.ring.push(h),s[r.end=u]=r):(r=l[u])?(n=s[f])?(delete l[r.start],delete s[n.end],r===n?(r.ring.push(h),e(r.ring)):l[n.start]=s[r.end]={start:n.start,end:r.end,ring:n.ring.concat(r.ring)}):(delete l[r.start],r.ring.unshift(o),l[r.start=f]=r):l[f]=s[u]={start:f,end:u,ring:[o,h]}}c[u<<3].forEach(v)}(r,n,function(t){d(t,r,n),i(t)>0?e.push([t]):a.push(t)}),a.forEach(function(t){for(var r,n=0,i=e.length;n<i;++n)if(-1!==o((r=e[n])[0],t))return void r.push(t)}),{type:"MultiPolygon",value:n,coordinates:e}}function g(r){return 2*r[0]+r[1]*(t+1)*4}function v(r,n,e){r.forEach(function(r){var i,a=r[0],o=r[1],f=0|a,u=0|o,c=n[u*t+f];a>0&&a<t&&f===a&&(i=n[u*t+f-1],r[0]=a+(e-i)/(c-i)-.5),o>0&&o<h&&u===o&&(i=n[(u-1)*t+f],r[1]=o+(e-i)/(c-i)-.5)})}return l.contour=s,l.size=function(r){if(!arguments.length)return[t,h];var n=Math.ceil(r[0]),e=Math.ceil(r[1]);if(!(n>0&&e>0))throw new Error("invalid size");return t=n,h=e,l},l.thresholds=function(t){return arguments.length?(f="function"==typeof t?t:Array.isArray(t)?a(n.call(t)):a(t),l):f},l.smooth=function(t){return arguments.length?(d=t?v:u,l):d===v},l};function l(t,r,n){for(var e=t.width,i=t.height,a=1+(n<<1),o=0;o<i;++o)for(var h=0,f=0;h<e+n;++h)h<e&&(f+=t.data[h+o*e]),h>=n&&(h>=a&&(f-=t.data[h-a+o*e]),r.data[h-n+o*e]=f/Math.min(h+1,e-1+a-h,a))}function s(t,r,n){for(var e=t.width,i=t.height,a=1+(n<<1),o=0;o<e;++o)for(var h=0,f=0;h<i+n;++h)h<i&&(f+=t.data[o+h*e]),h>=n&&(h>=a&&(f-=t.data[o+(h-a)*e]),r.data[o+(h-n)*e]=f/Math.min(h+1,i-1+a-h,a))}function g(t){return t[0]}function v(t){return t[1]}t.contours=d,t.contourDensity=function(){var t=g,e=v,i=960,o=500,h=20,f=2,u=3*h,c=i+2*u>>f,w=o+2*u>>f,y=a(20);function p(n){var i=new Float32Array(c*w),a=new Float32Array(c*w);n.forEach(function(r,n,a){var o=t(r,n,a)+u>>f,h=e(r,n,a)+u>>f;o>=0&&o<c&&h>=0&&h<w&&++i[o+h*c]}),l({width:c,height:w,data:i},{width:c,height:w,data:a},h>>f),s({width:c,height:w,data:a},{width:c,height:w,data:i},h>>f),l({width:c,height:w,data:i},{width:c,height:w,data:a},h>>f),s({width:c,height:w,data:a},{width:c,height:w,data:i},h>>f),l({width:c,height:w,data:i},{width:c,height:w,data:a},h>>f),s({width:c,height:w,data:a},{width:c,height:w,data:i},h>>f);var o=y(i);if(!Array.isArray(o)){var g=r.max(i);o=r.tickStep(0,g,o),(o=r.range(0,Math.floor(g/o)*o,o)).shift()}return d().thresholds(o).size([c,w])(i).map(M)}function M(t){return t.value*=Math.pow(2,-2*f),t.coordinates.forEach(E),t}function E(t){t.forEach(A)}function A(t){t.forEach(m)}function m(t){t[0]=t[0]*Math.pow(2,f)-u,t[1]=t[1]*Math.pow(2,f)-u}function z(){return c=i+2*(u=3*h)>>f,w=o+2*u>>f,p}return p.x=function(r){return arguments.length?(t="function"==typeof r?r:a(+r),p):t},p.y=function(t){return arguments.length?(e="function"==typeof t?t:a(+t),p):e},p.size=function(t){if(!arguments.length)return[i,o];var r=Math.ceil(t[0]),n=Math.ceil(t[1]);if(!(r>=0||r>=0))throw new Error("invalid size");return i=r,o=n,z()},p.cellSize=function(t){if(!arguments.length)return 1<<f;if(!((t=+t)>=1))throw new Error("invalid cell size");return f=Math.floor(Math.log(t)/Math.LN2),z()},p.thresholds=function(t){return arguments.length?(y="function"==typeof t?t:Array.isArray(t)?a(n.call(t)):a(t),p):y},p.bandwidth=function(t){if(!arguments.length)return Math.sqrt(h*(h+1));if(!((t=+t)>=0))throw new Error("invalid bandwidth");return h=Math.round((Math.sqrt(4*t*t+1)-1)/2),z()},p},Object.defineProperty(t,"__esModule",{value:!0})});

},{"d3-array":20}],27:[function(require,module,exports){
!function(n,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(n.d3=n.d3||{})}(this,function(n){"use strict";var e={value:function(){}};function t(){for(var n,e=0,t=arguments.length,o={};e<t;++e){if(!(n=arguments[e]+"")||n in o)throw new Error("illegal type: "+n);o[n]=[]}return new r(o)}function r(n){this._=n}function o(n,e){for(var t,r=0,o=n.length;r<o;++r)if((t=n[r]).name===e)return t.value}function i(n,t,r){for(var o=0,i=n.length;o<i;++o)if(n[o].name===t){n[o]=e,n=n.slice(0,o).concat(n.slice(o+1));break}return null!=r&&n.push({name:t,value:r}),n}r.prototype=t.prototype={constructor:r,on:function(n,e){var t,r,f=this._,l=(r=f,(n+"").trim().split(/^|\s+/).map(function(n){var e="",t=n.indexOf(".");if(t>=0&&(e=n.slice(t+1),n=n.slice(0,t)),n&&!r.hasOwnProperty(n))throw new Error("unknown type: "+n);return{type:n,name:e}})),a=-1,u=l.length;if(!(arguments.length<2)){if(null!=e&&"function"!=typeof e)throw new Error("invalid callback: "+e);for(;++a<u;)if(t=(n=l[a]).type)f[t]=i(f[t],n.name,e);else if(null==e)for(t in f)f[t]=i(f[t],n.name,null);return this}for(;++a<u;)if((t=(n=l[a]).type)&&(t=o(f[t],n.name)))return t},copy:function(){var n={},e=this._;for(var t in e)n[t]=e[t].slice();return new r(n)},call:function(n,e){if((t=arguments.length-2)>0)for(var t,r,o=new Array(t),i=0;i<t;++i)o[i]=arguments[i+2];if(!this._.hasOwnProperty(n))throw new Error("unknown type: "+n);for(i=0,t=(r=this._[n]).length;i<t;++i)r[i].value.apply(e,o)},apply:function(n,e,t){if(!this._.hasOwnProperty(n))throw new Error("unknown type: "+n);for(var r=this._[n],o=0,i=r.length;o<i;++o)r[o].value.apply(e,t)}},n.dispatch=t,Object.defineProperty(n,"__esModule",{value:!0})});

},{}],28:[function(require,module,exports){
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("d3-dispatch"),require("d3-selection")):"function"==typeof define&&define.amd?define(["exports","d3-dispatch","d3-selection"],e):e(t.d3=t.d3||{},t.d3,t.d3)}(this,function(t,e,n){"use strict";function o(){n.event.stopImmediatePropagation()}var i=function(){n.event.preventDefault(),n.event.stopImmediatePropagation()},r=function(t){var e=t.document.documentElement,o=n.select(t).on("dragstart.drag",i,!0);"onselectstart"in e?o.on("selectstart.drag",i,!0):(e.__noselect=e.style.MozUserSelect,e.style.MozUserSelect="none")};function c(t,e){var o=t.document.documentElement,r=n.select(t).on("dragstart.drag",null);e&&(r.on("click.drag",i,!0),setTimeout(function(){r.on("click.drag",null)},0)),"onselectstart"in o?r.on("selectstart.drag",null):(o.style.MozUserSelect=o.__noselect,delete o.__noselect)}var u=function(t){return function(){return t}};function s(t,e,n,o,i,r,c,u,s,a){this.target=t,this.type=e,this.subject=n,this.identifier=o,this.active=i,this.x=r,this.y=c,this.dx=u,this.dy=s,this._=a}function a(){return!n.event.button}function l(){return this.parentNode}function d(t){return null==t?{x:n.event.x,y:n.event.y}:t}function f(){return"ontouchstart"in this}s.prototype.on=function(){var t=this._.on.apply(this._,arguments);return t===this._?this:t};t.drag=function(){var t,h,v,p,g=a,m=l,y=d,b=f,_={},w=e.dispatch("start","drag","end"),x=0,T=0;function j(t){t.on("mousedown.drag",k).filter(b).on("touchstart.drag",q).on("touchmove.drag",z).on("touchend.drag touchcancel.drag",D).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function k(){if(!p&&g.apply(this,arguments)){var e=P("mouse",m.apply(this,arguments),n.mouse,this,arguments);e&&(n.select(n.event.view).on("mousemove.drag",E,!0).on("mouseup.drag",M,!0),r(n.event.view),o(),v=!1,t=n.event.clientX,h=n.event.clientY,e("start"))}}function E(){if(i(),!v){var e=n.event.clientX-t,o=n.event.clientY-h;v=e*e+o*o>T}_.mouse("drag")}function M(){n.select(n.event.view).on("mousemove.drag mouseup.drag",null),c(n.event.view,v),i(),_.mouse("end")}function q(){if(g.apply(this,arguments)){var t,e,i=n.event.changedTouches,r=m.apply(this,arguments),c=i.length;for(t=0;t<c;++t)(e=P(i[t].identifier,r,n.touch,this,arguments))&&(o(),e("start"))}}function z(){var t,e,o=n.event.changedTouches,r=o.length;for(t=0;t<r;++t)(e=_[o[t].identifier])&&(i(),e("drag"))}function D(){var t,e,i=n.event.changedTouches,r=i.length;for(p&&clearTimeout(p),p=setTimeout(function(){p=null},500),t=0;t<r;++t)(e=_[i[t].identifier])&&(o(),e("end"))}function P(t,e,o,i,r){var c,u,a,l=o(e,t),d=w.copy();if(n.customEvent(new s(j,"beforestart",c,t,x,l[0],l[1],0,0,d),function(){return null!=(n.event.subject=c=y.apply(i,r))&&(u=c.x-l[0]||0,a=c.y-l[1]||0,!0)}))return function f(h){var v,p=l;switch(h){case"start":_[t]=f,v=x++;break;case"end":delete _[t],--x;case"drag":l=o(e,t),v=x}n.customEvent(new s(j,h,c,t,v,l[0]+u,l[1]+a,l[0]-p[0],l[1]-p[1],d),d.apply,d,[h,i,r])}}return j.filter=function(t){return arguments.length?(g="function"==typeof t?t:u(!!t),j):g},j.container=function(t){return arguments.length?(m="function"==typeof t?t:u(t),j):m},j.subject=function(t){return arguments.length?(y="function"==typeof t?t:u(t),j):y},j.touchable=function(t){return arguments.length?(b="function"==typeof t?t:u(!!t),j):b},j.on=function(){var t=w.on.apply(w,arguments);return t===w?j:t},j.clickDistance=function(t){return arguments.length?(T=(t=+t)*t,j):Math.sqrt(T)},j},t.dragDisable=r,t.dragEnable=c,Object.defineProperty(t,"__esModule",{value:!0})});

},{"d3-dispatch":27,"d3-selection":43}],29:[function(require,module,exports){
!function(r,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n(r.d3=r.d3||{})}(this,function(r){"use strict";var n={},t={},e=34,o=10,u=13;function a(r){return new Function("d","return {"+r.map(function(r,n){return JSON.stringify(r)+": d["+n+"]"}).join(",")+"}")}var c=function(r){var c=new RegExp('["'+r+"\n\r]"),i=r.charCodeAt(0);function f(r,a){var c,f=[],s=r.length,p=0,d=0,l=s<=0,m=!1;function v(){if(l)return t;if(m)return m=!1,n;var a,c,f=p;if(r.charCodeAt(f)===e){for(;p++<s&&r.charCodeAt(p)!==e||r.charCodeAt(++p)===e;);return(a=p)>=s?l=!0:(c=r.charCodeAt(p++))===o?m=!0:c===u&&(m=!0,r.charCodeAt(p)===o&&++p),r.slice(f+1,a-1).replace(/""/g,'"')}for(;p<s;){if((c=r.charCodeAt(a=p++))===o)m=!0;else if(c===u)m=!0,r.charCodeAt(p)===o&&++p;else if(c!==i)continue;return r.slice(f,a)}return l=!0,r.slice(f,s)}for(r.charCodeAt(s-1)===o&&--s,r.charCodeAt(s-1)===u&&--s;(c=v())!==t;){for(var h=[];c!==n&&c!==t;)h.push(c),c=v();a&&null==(h=a(h,d++))||f.push(h)}return f}function s(n){return n.map(p).join(r)}function p(r){return null==r?"":c.test(r+="")?'"'+r.replace(/"/g,'""')+'"':r}return{parse:function(r,n){var t,e,o=f(r,function(r,o){if(t)return t(r,o-1);e=r,t=n?function(r,n){var t=a(r);return function(e,o){return n(t(e),o,r)}}(r,n):a(r)});return o.columns=e||[],o},parseRows:f,format:function(n,t){return null==t&&(t=function(r){var n=Object.create(null),t=[];return r.forEach(function(r){for(var e in r)e in n||t.push(n[e]=e)}),t}(n)),[t.map(p).join(r)].concat(n.map(function(n){return t.map(function(r){return p(n[r])}).join(r)})).join("\n")},formatRows:function(r){return r.map(s).join("\n")}}},i=c(","),f=i.parse,s=i.parseRows,p=i.format,d=i.formatRows,l=c("\t"),m=l.parse,v=l.parseRows,h=l.format,w=l.formatRows;r.dsvFormat=c,r.csvParse=f,r.csvParseRows=s,r.csvFormat=p,r.csvFormatRows=d,r.tsvParse=m,r.tsvParseRows=v,r.tsvFormat=h,r.tsvFormatRows=w,Object.defineProperty(r,"__esModule",{value:!0})});

},{}],30:[function(require,module,exports){
!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(n.d3=n.d3||{})}(this,function(n){"use strict";function t(n){return((n*=2)<=1?n*n:--n*(2-n)+1)/2}function e(n){return((n*=2)<=1?n*n*n:(n-=2)*n*n+2)/2}var u=function n(t){function e(n){return Math.pow(n,t)}return t=+t,e.exponent=n,e}(3),r=function n(t){function e(n){return 1-Math.pow(1-n,t)}return t=+t,e.exponent=n,e}(3),a=function n(t){function e(n){return((n*=2)<=1?Math.pow(n,t):2-Math.pow(2-n,t))/2}return t=+t,e.exponent=n,e}(3),o=Math.PI,i=o/2;function c(n){return(1-Math.cos(o*n))/2}function s(n){return((n*=2)<=1?Math.pow(2,10*n-10):2-Math.pow(2,10-10*n))/2}function f(n){return((n*=2)<=1?1-Math.sqrt(1-n*n):Math.sqrt(1-(n-=2)*n)+1)/2}var h=4/11,p=6/11,M=8/11,d=.75,I=9/11,O=10/11,l=.9375,x=21/22,w=63/64,v=1/h/h;function m(n){return(n=+n)<h?v*n*n:n<M?v*(n-=p)*n+d:n<O?v*(n-=I)*n+l:v*(n-=x)*n+w}var y=function n(t){function e(n){return n*n*((t+1)*n-t)}return t=+t,e.overshoot=n,e}(1.70158),B=function n(t){function e(n){return--n*n*((t+1)*n+t)+1}return t=+t,e.overshoot=n,e}(1.70158),C=function n(t){function e(n){return((n*=2)<1?n*n*((t+1)*n-t):(n-=2)*n*((t+1)*n+t)+2)/2}return t=+t,e.overshoot=n,e}(1.70158),E=2*Math.PI,P=function n(t,e){var u=Math.asin(1/(t=Math.max(1,t)))*(e/=E);function r(n){return t*Math.pow(2,10*--n)*Math.sin((u-n)/e)}return r.amplitude=function(t){return n(t,e*E)},r.period=function(e){return n(t,e)},r}(1,.3),b=function n(t,e){var u=Math.asin(1/(t=Math.max(1,t)))*(e/=E);function r(n){return 1-t*Math.pow(2,-10*(n=+n))*Math.sin((n+u)/e)}return r.amplitude=function(t){return n(t,e*E)},r.period=function(e){return n(t,e)},r}(1,.3),k=function n(t,e){var u=Math.asin(1/(t=Math.max(1,t)))*(e/=E);function r(n){return((n=2*n-1)<0?t*Math.pow(2,10*n)*Math.sin((u-n)/e):2-t*Math.pow(2,-10*n)*Math.sin((u+n)/e))/2}return r.amplitude=function(t){return n(t,e*E)},r.period=function(e){return n(t,e)},r}(1,.3);n.easeLinear=function(n){return+n},n.easeQuad=t,n.easeQuadIn=function(n){return n*n},n.easeQuadOut=function(n){return n*(2-n)},n.easeQuadInOut=t,n.easeCubic=e,n.easeCubicIn=function(n){return n*n*n},n.easeCubicOut=function(n){return--n*n*n+1},n.easeCubicInOut=e,n.easePoly=a,n.easePolyIn=u,n.easePolyOut=r,n.easePolyInOut=a,n.easeSin=c,n.easeSinIn=function(n){return 1-Math.cos(n*i)},n.easeSinOut=function(n){return Math.sin(n*i)},n.easeSinInOut=c,n.easeExp=s,n.easeExpIn=function(n){return Math.pow(2,10*n-10)},n.easeExpOut=function(n){return 1-Math.pow(2,-10*n)},n.easeExpInOut=s,n.easeCircle=f,n.easeCircleIn=function(n){return 1-Math.sqrt(1-n*n)},n.easeCircleOut=function(n){return Math.sqrt(1- --n*n)},n.easeCircleInOut=f,n.easeBounce=m,n.easeBounceIn=function(n){return 1-m(1-n)},n.easeBounceOut=m,n.easeBounceInOut=function(n){return((n*=2)<=1?1-m(1-n):m(n-1)+1)/2},n.easeBack=C,n.easeBackIn=y,n.easeBackOut=B,n.easeBackInOut=C,n.easeElastic=b,n.easeElasticIn=P,n.easeElasticOut=b,n.easeElasticInOut=k,Object.defineProperty(n,"__esModule",{value:!0})});

},{}],31:[function(require,module,exports){
!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("d3-dsv")):"function"==typeof define&&define.amd?define(["exports","d3-dsv"],n):n(t.d3=t.d3||{},t.d3)}(this,function(t,n){"use strict";function e(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.blob()}function r(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.arrayBuffer()}function o(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.text()}function u(t,n){return fetch(t,n).then(o)}function f(t){return function(n,e,r){return 2===arguments.length&&"function"==typeof e&&(r=e,e=void 0),u(n,e).then(function(n){return t(n,r)})}}var i=f(n.csvParse),s=f(n.tsvParse);function c(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.json()}function a(t){return function(n,e){return u(n,e).then(function(n){return(new DOMParser).parseFromString(n,t)})}}var d=a("application/xml"),h=a("text/html"),v=a("image/svg+xml");t.blob=function(t,n){return fetch(t,n).then(e)},t.buffer=function(t,n){return fetch(t,n).then(r)},t.dsv=function(t,e,r,o){3===arguments.length&&"function"==typeof r&&(o=r,r=void 0);var f=n.dsvFormat(t);return u(e,r).then(function(t){return f.parse(t,o)})},t.csv=i,t.tsv=s,t.image=function(t,n){return new Promise(function(e,r){var o=new Image;for(var u in n)o[u]=n[u];o.onerror=r,o.onload=function(){e(o)},o.src=t})},t.json=function(t,n){return fetch(t,n).then(c)},t.text=u,t.xml=d,t.html=h,t.svg=v,Object.defineProperty(t,"__esModule",{value:!0})});

},{"d3-dsv":29}],32:[function(require,module,exports){
!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("d3-quadtree"),require("d3-collection"),require("d3-dispatch"),require("d3-timer")):"function"==typeof define&&define.amd?define(["exports","d3-quadtree","d3-collection","d3-dispatch","d3-timer"],t):t(n.d3=n.d3||{},n.d3,n.d3,n.d3,n.d3)}(this,function(n,t,e,r,i){"use strict";var u=function(n){return function(){return n}},o=function(){return 1e-6*(Math.random()-.5)};function f(n){return n.x+n.vx}function a(n){return n.y+n.vy}function c(n){return n.index}function l(n,t){var e=n.get(t);if(!e)throw new Error("missing: "+t);return e}function h(n){return n.x}function v(n){return n.y}var y=10,d=Math.PI*(3-Math.sqrt(5));n.forceCenter=function(n,t){var e;function r(){var r,i,u=e.length,o=0,f=0;for(r=0;r<u;++r)o+=(i=e[r]).x,f+=i.y;for(o=o/u-n,f=f/u-t,r=0;r<u;++r)(i=e[r]).x-=o,i.y-=f}return null==n&&(n=0),null==t&&(t=0),r.initialize=function(n){e=n},r.x=function(t){return arguments.length?(n=+t,r):n},r.y=function(n){return arguments.length?(t=+n,r):t},r},n.forceCollide=function(n){var e,r,i=1,c=1;function l(){for(var n,u,l,v,y,d,x,g=e.length,s=0;s<c;++s)for(u=t.quadtree(e,f,a).visitAfter(h),n=0;n<g;++n)l=e[n],d=r[l.index],x=d*d,v=l.x+l.vx,y=l.y+l.vy,u.visit(p);function p(n,t,e,r,u){var f=n.data,a=n.r,c=d+a;if(!f)return t>v+c||r<v-c||e>y+c||u<y-c;if(f.index>l.index){var h=v-f.x-f.vx,g=y-f.y-f.vy,s=h*h+g*g;s<c*c&&(0===h&&(s+=(h=o())*h),0===g&&(s+=(g=o())*g),s=(c-(s=Math.sqrt(s)))/s*i,l.vx+=(h*=s)*(c=(a*=a)/(x+a)),l.vy+=(g*=s)*c,f.vx-=h*(c=1-c),f.vy-=g*c)}}}function h(n){if(n.data)return n.r=r[n.data.index];for(var t=n.r=0;t<4;++t)n[t]&&n[t].r>n.r&&(n.r=n[t].r)}function v(){if(e){var t,i,u=e.length;for(r=new Array(u),t=0;t<u;++t)i=e[t],r[i.index]=+n(i,t,e)}}return"function"!=typeof n&&(n=u(null==n?1:+n)),l.initialize=function(n){e=n,v()},l.iterations=function(n){return arguments.length?(c=+n,l):c},l.strength=function(n){return arguments.length?(i=+n,l):i},l.radius=function(t){return arguments.length?(n="function"==typeof t?t:u(+t),v(),l):n},l},n.forceLink=function(n){var t,r,i,f,a,h=c,v=function(n){return 1/Math.min(f[n.source.index],f[n.target.index])},y=u(30),d=1;function x(e){for(var i=0,u=n.length;i<d;++i)for(var f,c,l,h,v,y,x,g=0;g<u;++g)c=(f=n[g]).source,h=(l=f.target).x+l.vx-c.x-c.vx||o(),v=l.y+l.vy-c.y-c.vy||o(),h*=y=((y=Math.sqrt(h*h+v*v))-r[g])/y*e*t[g],v*=y,l.vx-=h*(x=a[g]),l.vy-=v*x,c.vx+=h*(x=1-x),c.vy+=v*x}function g(){if(i){var u,o,c=i.length,v=n.length,y=e.map(i,h);for(u=0,f=new Array(c);u<v;++u)(o=n[u]).index=u,"object"!=typeof o.source&&(o.source=l(y,o.source)),"object"!=typeof o.target&&(o.target=l(y,o.target)),f[o.source.index]=(f[o.source.index]||0)+1,f[o.target.index]=(f[o.target.index]||0)+1;for(u=0,a=new Array(v);u<v;++u)o=n[u],a[u]=f[o.source.index]/(f[o.source.index]+f[o.target.index]);t=new Array(v),s(),r=new Array(v),p()}}function s(){if(i)for(var e=0,r=n.length;e<r;++e)t[e]=+v(n[e],e,n)}function p(){if(i)for(var t=0,e=n.length;t<e;++t)r[t]=+y(n[t],t,n)}return null==n&&(n=[]),x.initialize=function(n){i=n,g()},x.links=function(t){return arguments.length?(n=t,g(),x):n},x.id=function(n){return arguments.length?(h=n,x):h},x.iterations=function(n){return arguments.length?(d=+n,x):d},x.strength=function(n){return arguments.length?(v="function"==typeof n?n:u(+n),s(),x):v},x.distance=function(n){return arguments.length?(y="function"==typeof n?n:u(+n),p(),x):y},x},n.forceManyBody=function(){var n,e,r,i,f=u(-30),a=1,c=1/0,l=.81;function y(i){var u,o=n.length,f=t.quadtree(n,h,v).visitAfter(x);for(r=i,u=0;u<o;++u)e=n[u],f.visit(g)}function d(){if(n){var t,e,r=n.length;for(i=new Array(r),t=0;t<r;++t)e=n[t],i[e.index]=+f(e,t,n)}}function x(n){var t,e,r,u,o,f=0,a=0;if(n.length){for(r=u=o=0;o<4;++o)(t=n[o])&&(e=Math.abs(t.value))&&(f+=t.value,a+=e,r+=e*t.x,u+=e*t.y);n.x=r/a,n.y=u/a}else{(t=n).x=t.data.x,t.y=t.data.y;do{f+=i[t.data.index]}while(t=t.next)}n.value=f}function g(n,t,u,f){if(!n.value)return!0;var h=n.x-e.x,v=n.y-e.y,y=f-t,d=h*h+v*v;if(y*y/l<d)return d<c&&(0===h&&(d+=(h=o())*h),0===v&&(d+=(v=o())*v),d<a&&(d=Math.sqrt(a*d)),e.vx+=h*n.value*r/d,e.vy+=v*n.value*r/d),!0;if(!(n.length||d>=c)){(n.data!==e||n.next)&&(0===h&&(d+=(h=o())*h),0===v&&(d+=(v=o())*v),d<a&&(d=Math.sqrt(a*d)));do{n.data!==e&&(y=i[n.data.index]*r/d,e.vx+=h*y,e.vy+=v*y)}while(n=n.next)}}return y.initialize=function(t){n=t,d()},y.strength=function(n){return arguments.length?(f="function"==typeof n?n:u(+n),d(),y):f},y.distanceMin=function(n){return arguments.length?(a=n*n,y):Math.sqrt(a)},y.distanceMax=function(n){return arguments.length?(c=n*n,y):Math.sqrt(c)},y.theta=function(n){return arguments.length?(l=n*n,y):Math.sqrt(l)},y},n.forceRadial=function(n,t,e){var r,i,o,f=u(.1);function a(n){for(var u=0,f=r.length;u<f;++u){var a=r[u],c=a.x-t||1e-6,l=a.y-e||1e-6,h=Math.sqrt(c*c+l*l),v=(o[u]-h)*i[u]*n/h;a.vx+=c*v,a.vy+=l*v}}function c(){if(r){var t,e=r.length;for(i=new Array(e),o=new Array(e),t=0;t<e;++t)o[t]=+n(r[t],t,r),i[t]=isNaN(o[t])?0:+f(r[t],t,r)}}return"function"!=typeof n&&(n=u(+n)),null==t&&(t=0),null==e&&(e=0),a.initialize=function(n){r=n,c()},a.strength=function(n){return arguments.length?(f="function"==typeof n?n:u(+n),c(),a):f},a.radius=function(t){return arguments.length?(n="function"==typeof t?t:u(+t),c(),a):n},a.x=function(n){return arguments.length?(t=+n,a):t},a.y=function(n){return arguments.length?(e=+n,a):e},a},n.forceSimulation=function(n){var t,u=1,o=.001,f=1-Math.pow(o,1/300),a=0,c=.6,l=e.map(),h=i.timer(x),v=r.dispatch("tick","end");function x(){g(),v.call("tick",t),u<o&&(h.stop(),v.call("end",t))}function g(){var t,e,r=n.length;for(u+=(a-u)*f,l.each(function(n){n(u)}),t=0;t<r;++t)null==(e=n[t]).fx?e.x+=e.vx*=c:(e.x=e.fx,e.vx=0),null==e.fy?e.y+=e.vy*=c:(e.y=e.fy,e.vy=0)}function s(){for(var t,e=0,r=n.length;e<r;++e){if((t=n[e]).index=e,isNaN(t.x)||isNaN(t.y)){var i=y*Math.sqrt(e),u=e*d;t.x=i*Math.cos(u),t.y=i*Math.sin(u)}(isNaN(t.vx)||isNaN(t.vy))&&(t.vx=t.vy=0)}}function p(t){return t.initialize&&t.initialize(n),t}return null==n&&(n=[]),s(),t={tick:g,restart:function(){return h.restart(x),t},stop:function(){return h.stop(),t},nodes:function(e){return arguments.length?(n=e,s(),l.each(p),t):n},alpha:function(n){return arguments.length?(u=+n,t):u},alphaMin:function(n){return arguments.length?(o=+n,t):o},alphaDecay:function(n){return arguments.length?(f=+n,t):+f},alphaTarget:function(n){return arguments.length?(a=+n,t):a},velocityDecay:function(n){return arguments.length?(c=1-n,t):1-c},force:function(n,e){return arguments.length>1?(null==e?l.remove(n):l.set(n,p(e)),t):l.get(n)},find:function(t,e,r){var i,u,o,f,a,c=0,l=n.length;for(null==r?r=1/0:r*=r,c=0;c<l;++c)(o=(i=t-(f=n[c]).x)*i+(u=e-f.y)*u)<r&&(a=f,r=o);return a},on:function(n,e){return arguments.length>1?(v.on(n,e),t):v.on(n)}}},n.forceX=function(n){var t,e,r,i=u(.1);function o(n){for(var i,u=0,o=t.length;u<o;++u)(i=t[u]).vx+=(r[u]-i.x)*e[u]*n}function f(){if(t){var u,o=t.length;for(e=new Array(o),r=new Array(o),u=0;u<o;++u)e[u]=isNaN(r[u]=+n(t[u],u,t))?0:+i(t[u],u,t)}}return"function"!=typeof n&&(n=u(null==n?0:+n)),o.initialize=function(n){t=n,f()},o.strength=function(n){return arguments.length?(i="function"==typeof n?n:u(+n),f(),o):i},o.x=function(t){return arguments.length?(n="function"==typeof t?t:u(+t),f(),o):n},o},n.forceY=function(n){var t,e,r,i=u(.1);function o(n){for(var i,u=0,o=t.length;u<o;++u)(i=t[u]).vy+=(r[u]-i.y)*e[u]*n}function f(){if(t){var u,o=t.length;for(e=new Array(o),r=new Array(o),u=0;u<o;++u)e[u]=isNaN(r[u]=+n(t[u],u,t))?0:+i(t[u],u,t)}}return"function"!=typeof n&&(n=u(null==n?0:+n)),o.initialize=function(n){t=n,f()},o.strength=function(n){return arguments.length?(i="function"==typeof n?n:u(+n),f(),o):i},o.y=function(t){return arguments.length?(n="function"==typeof t?t:u(+t),f(),o):n},o},Object.defineProperty(n,"__esModule",{value:!0})});

},{"d3-collection":24,"d3-dispatch":27,"d3-quadtree":39,"d3-timer":47}],33:[function(require,module,exports){
!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n(t.d3=t.d3||{})}(this,function(t){"use strict";var n=function(t,n){if((r=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var r,e=t.slice(0,r);return[e.length>1?e[0]+e.slice(2):e,+t.slice(r+1)]},r=function(t){return(t=n(Math.abs(t)))?t[1]:NaN},e=/^(?:(.)?([<>=^]))?([+\-\( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function i(t){return new o(t)}function o(t){if(!(n=e.exec(t)))throw new Error("invalid format: "+t);var n;this.fill=n[1]||" ",this.align=n[2]||">",this.sign=n[3]||"-",this.symbol=n[4]||"",this.zero=!!n[5],this.width=n[6]&&+n[6],this.comma=!!n[7],this.precision=n[8]&&+n[8].slice(1),this.trim=!!n[9],this.type=n[10]||""}i.prototype=o.prototype,o.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var a,u,s=function(t){t:for(var n,r=t.length,e=1,i=-1;e<r;++e)switch(t[e]){case".":i=n=e;break;case"0":0===i&&(i=e),n=e;break;default:if(i>0){if(!+t[e])break t;i=0}}return i>0?t.slice(0,i)+t.slice(n+1):t},c=function(t,r){var e=n(t,r);if(!e)return t+"";var i=e[0],o=e[1];return o<0?"0."+new Array(-o).join("0")+i:i.length>o+1?i.slice(0,o+1)+"."+i.slice(o+1):i+new Array(o-i.length+2).join("0")},f={"%":function(t,n){return(100*t).toFixed(n)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:function(t){return Math.round(t).toString(10)},e:function(t,n){return t.toExponential(n)},f:function(t,n){return t.toFixed(n)},g:function(t,n){return t.toPrecision(n)},o:function(t){return Math.round(t).toString(8)},p:function(t,n){return c(100*t,n)},r:c,s:function(t,r){var e=n(t,r);if(!e)return t+"";var i=e[0],o=e[1],u=o-(a=3*Math.max(-8,Math.min(8,Math.floor(o/3))))+1,s=i.length;return u===s?i:u>s?i+new Array(u-s+1).join("0"):u>0?i.slice(0,u)+"."+i.slice(u):"0."+new Array(1-u).join("0")+n(t,Math.max(0,r+u-1))[0]},X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}},h=function(t){return t},l=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"],m=function(t){var n,e,o=t.grouping&&t.thousands?(n=t.grouping,e=t.thousands,function(t,r){for(var i=t.length,o=[],a=0,u=n[0],s=0;i>0&&u>0&&(s+u+1>r&&(u=Math.max(1,r-s)),o.push(t.substring(i-=u,i+u)),!((s+=u+1)>r));)u=n[a=(a+1)%n.length];return o.reverse().join(e)}):h,u=t.currency,c=t.decimal,m=t.numerals?function(t){return function(n){return n.replace(/[0-9]/g,function(n){return t[+n]})}}(t.numerals):h,p=t.percent||"%";function g(t){var n=(t=i(t)).fill,r=t.align,e=t.sign,h=t.symbol,g=t.zero,d=t.width,M=t.comma,x=t.precision,y=t.trim,b=t.type;"n"===b?(M=!0,b="g"):f[b]||(null==x&&(x=12),y=!0,b="g"),(g||"0"===n&&"="===r)&&(g=!0,n="0",r="=");var v="$"===h?u[0]:"#"===h&&/[boxX]/.test(b)?"0"+b.toLowerCase():"",w="$"===h?u[1]:/[%p]/.test(b)?p:"",j=f[b],k=/[defgprs%]/.test(b);function S(t){var i,u,f,h=v,p=w;if("c"===b)p=j(t)+p,t="";else{var S=(t=+t)<0;if(t=j(Math.abs(t),x),y&&(t=s(t)),S&&0==+t&&(S=!1),h=(S?"("===e?e:"-":"-"===e||"("===e?"":e)+h,p=("s"===b?l[8+a/3]:"")+p+(S&&"("===e?")":""),k)for(i=-1,u=t.length;++i<u;)if(48>(f=t.charCodeAt(i))||f>57){p=(46===f?c+t.slice(i+1):t.slice(i))+p,t=t.slice(0,i);break}}M&&!g&&(t=o(t,1/0));var P=h.length+t.length+p.length,A=P<d?new Array(d-P+1).join(n):"";switch(M&&g&&(t=o(A+t,A.length?d-p.length:1/0),A=""),r){case"<":t=h+t+p+A;break;case"=":t=h+A+t+p;break;case"^":t=A.slice(0,P=A.length>>1)+h+t+p+A.slice(P);break;default:t=A+h+t+p}return m(t)}return x=null==x?6:/[gprs]/.test(b)?Math.max(1,Math.min(21,x)):Math.max(0,Math.min(20,x)),S.toString=function(){return t+""},S}return{format:g,formatPrefix:function(t,n){var e=g(((t=i(t)).type="f",t)),o=3*Math.max(-8,Math.min(8,Math.floor(r(n)/3))),a=Math.pow(10,-o),u=l[8+o/3];return function(t){return e(a*t)+u}}}};function p(n){return u=m(n),t.format=u.format,t.formatPrefix=u.formatPrefix,u}p({decimal:".",thousands:",",grouping:[3],currency:["$",""]});t.formatDefaultLocale=p,t.formatLocale=m,t.formatSpecifier=i,t.precisionFixed=function(t){return Math.max(0,-r(Math.abs(t)))},t.precisionPrefix=function(t,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(r(n)/3)))-r(Math.abs(t)))},t.precisionRound=function(t,n){return t=Math.abs(t),n=Math.abs(n)-t,Math.max(0,r(n)-r(t))+1},Object.defineProperty(t,"__esModule",{value:!0})});

},{}],34:[function(require,module,exports){
!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("d3-array")):"function"==typeof define&&define.amd?define(["exports","d3-array"],t):t(n.d3=n.d3||{},n.d3)}(this,function(n,t){"use strict";function r(){return new i}function i(){this.reset()}i.prototype={constructor:i,reset:function(){this.s=this.t=0},add:function(n){o(e,n,this.t),o(this,e.s,this.s),this.s?this.t+=e.t:this.s=e.t},valueOf:function(){return this.s}};var e=new i;function o(n,t,r){var i=n.s=t+r,e=i-t,o=i-e;n.t=t-o+(r-e)}var u=1e-6,c=1e-12,a=Math.PI,l=a/2,f=a/4,s=2*a,p=180/a,h=a/180,g=Math.abs,v=Math.atan,d=Math.atan2,E=Math.cos,y=Math.ceil,S=Math.exp,m=Math.log,M=Math.pow,x=Math.sin,_=Math.sign||function(n){return n>0?1:n<0?-1:0},N=Math.sqrt,w=Math.tan;function C(n){return n>1?0:n<-1?a:Math.acos(n)}function P(n){return n>1?l:n<-1?-l:Math.asin(n)}function R(n){return(n=x(n/2))*n}function A(){}function j(n,t){n&&z.hasOwnProperty(n.type)&&z[n.type](n,t)}var q={Feature:function(n,t){j(n.geometry,t)},FeatureCollection:function(n,t){for(var r=n.features,i=-1,e=r.length;++i<e;)j(r[i].geometry,t)}},z={Sphere:function(n,t){t.sphere()},Point:function(n,t){n=n.coordinates,t.point(n[0],n[1],n[2])},MultiPoint:function(n,t){for(var r=n.coordinates,i=-1,e=r.length;++i<e;)n=r[i],t.point(n[0],n[1],n[2])},LineString:function(n,t){b(n.coordinates,t,0)},MultiLineString:function(n,t){for(var r=n.coordinates,i=-1,e=r.length;++i<e;)b(r[i],t,0)},Polygon:function(n,t){L(n.coordinates,t)},MultiPolygon:function(n,t){for(var r=n.coordinates,i=-1,e=r.length;++i<e;)L(r[i],t)},GeometryCollection:function(n,t){for(var r=n.geometries,i=-1,e=r.length;++i<e;)j(r[i],t)}};function b(n,t,r){var i,e=-1,o=n.length-r;for(t.lineStart();++e<o;)i=n[e],t.point(i[0],i[1],i[2]);t.lineEnd()}function L(n,t){var r=-1,i=n.length;for(t.polygonStart();++r<i;)b(n[r],t,1);t.polygonEnd()}function O(n,t){n&&q.hasOwnProperty(n.type)?q[n.type](n,t):j(n,t)}var G,T,k,F,H,I,W,B,D,U,X,Y,Z,J=r(),K=r(),Q={point:A,lineStart:A,lineEnd:A,polygonStart:function(){J.reset(),Q.lineStart=V,Q.lineEnd=$},polygonEnd:function(){var n=+J;K.add(n<0?s+n:n),this.lineStart=this.lineEnd=this.point=A},sphere:function(){K.add(s)}};function V(){Q.point=nn}function $(){tn(G,T)}function nn(n,t){Q.point=tn,G=n,T=t,k=n*=h,F=E(t=(t*=h)/2+f),H=x(t)}function tn(n,t){t=(t*=h)/2+f;var r=(n*=h)-k,i=r>=0?1:-1,e=i*r,o=E(t),u=x(t),c=H*u,a=F*o+c*E(e),l=c*i*x(e);J.add(d(l,a)),k=n,F=o,H=u}function rn(n){return[d(n[1],n[0]),P(n[2])]}function en(n){var t=n[0],r=n[1],i=E(r);return[i*E(t),i*x(t),x(r)]}function on(n,t){return n[0]*t[0]+n[1]*t[1]+n[2]*t[2]}function un(n,t){return[n[1]*t[2]-n[2]*t[1],n[2]*t[0]-n[0]*t[2],n[0]*t[1]-n[1]*t[0]]}function cn(n,t){n[0]+=t[0],n[1]+=t[1],n[2]+=t[2]}function an(n,t){return[n[0]*t,n[1]*t,n[2]*t]}function ln(n){var t=N(n[0]*n[0]+n[1]*n[1]+n[2]*n[2]);n[0]/=t,n[1]/=t,n[2]/=t}var fn,sn,pn,hn,gn,vn,dn,En,yn,Sn,mn,Mn,xn,_n,Nn,wn,Cn,Pn,Rn=r(),An={point:jn,lineStart:zn,lineEnd:bn,polygonStart:function(){An.point=Ln,An.lineStart=On,An.lineEnd=Gn,Rn.reset(),Q.polygonStart()},polygonEnd:function(){Q.polygonEnd(),An.point=jn,An.lineStart=zn,An.lineEnd=bn,J<0?(I=-(B=180),W=-(D=90)):Rn>u?D=90:Rn<-u&&(W=-90),sn[0]=I,sn[1]=B}};function jn(n,t){fn.push(sn=[I=n,B=n]),t<W&&(W=t),t>D&&(D=t)}function qn(n,t){var r=en([n*h,t*h]);if(Z){var i=un(Z,r),e=un([i[1],-i[0],0],i);ln(e),e=rn(e);var o,u=n-U,c=u>0?1:-1,a=e[0]*p*c,l=g(u)>180;l^(c*U<a&&a<c*n)?(o=e[1]*p)>D&&(D=o):l^(c*U<(a=(a+360)%360-180)&&a<c*n)?(o=-e[1]*p)<W&&(W=o):(t<W&&(W=t),t>D&&(D=t)),l?n<U?Tn(I,n)>Tn(I,B)&&(B=n):Tn(n,B)>Tn(I,B)&&(I=n):B>=I?(n<I&&(I=n),n>B&&(B=n)):n>U?Tn(I,n)>Tn(I,B)&&(B=n):Tn(n,B)>Tn(I,B)&&(I=n)}else fn.push(sn=[I=n,B=n]);t<W&&(W=t),t>D&&(D=t),Z=r,U=n}function zn(){An.point=qn}function bn(){sn[0]=I,sn[1]=B,An.point=jn,Z=null}function Ln(n,t){if(Z){var r=n-U;Rn.add(g(r)>180?r+(r>0?360:-360):r)}else X=n,Y=t;Q.point(n,t),qn(n,t)}function On(){Q.lineStart()}function Gn(){Ln(X,Y),Q.lineEnd(),g(Rn)>u&&(I=-(B=180)),sn[0]=I,sn[1]=B,Z=null}function Tn(n,t){return(t-=n)<0?t+360:t}function kn(n,t){return n[0]-t[0]}function Fn(n,t){return n[0]<=n[1]?n[0]<=t&&t<=n[1]:t<n[0]||n[1]<t}var Hn={sphere:A,point:In,lineStart:Bn,lineEnd:Xn,polygonStart:function(){Hn.lineStart=Yn,Hn.lineEnd=Zn},polygonEnd:function(){Hn.lineStart=Bn,Hn.lineEnd=Xn}};function In(n,t){n*=h;var r=E(t*=h);Wn(r*E(n),r*x(n),x(t))}function Wn(n,t,r){gn+=(n-gn)/++pn,vn+=(t-vn)/pn,dn+=(r-dn)/pn}function Bn(){Hn.point=Dn}function Dn(n,t){n*=h;var r=E(t*=h);wn=r*E(n),Cn=r*x(n),Pn=x(t),Hn.point=Un,Wn(wn,Cn,Pn)}function Un(n,t){n*=h;var r=E(t*=h),i=r*E(n),e=r*x(n),o=x(t),u=d(N((u=Cn*o-Pn*e)*u+(u=Pn*i-wn*o)*u+(u=wn*e-Cn*i)*u),wn*i+Cn*e+Pn*o);hn+=u,En+=u*(wn+(wn=i)),yn+=u*(Cn+(Cn=e)),Sn+=u*(Pn+(Pn=o)),Wn(wn,Cn,Pn)}function Xn(){Hn.point=In}function Yn(){Hn.point=Jn}function Zn(){Kn(_n,Nn),Hn.point=In}function Jn(n,t){_n=n,Nn=t,n*=h,t*=h,Hn.point=Kn;var r=E(t);wn=r*E(n),Cn=r*x(n),Pn=x(t),Wn(wn,Cn,Pn)}function Kn(n,t){n*=h;var r=E(t*=h),i=r*E(n),e=r*x(n),o=x(t),u=Cn*o-Pn*e,c=Pn*i-wn*o,a=wn*e-Cn*i,l=N(u*u+c*c+a*a),f=P(l),s=l&&-f/l;mn+=s*u,Mn+=s*c,xn+=s*a,hn+=f,En+=f*(wn+(wn=i)),yn+=f*(Cn+(Cn=e)),Sn+=f*(Pn+(Pn=o)),Wn(wn,Cn,Pn)}function Qn(n){return function(){return n}}function Vn(n,t){function r(r,i){return r=n(r,i),t(r[0],r[1])}return n.invert&&t.invert&&(r.invert=function(r,i){return(r=t.invert(r,i))&&n.invert(r[0],r[1])}),r}function $n(n,t){return[n>a?n-s:n<-a?n+s:n,t]}function nt(n,t,r){return(n%=s)?t||r?Vn(rt(n),it(t,r)):rt(n):t||r?it(t,r):$n}function tt(n){return function(t,r){return[(t+=n)>a?t-s:t<-a?t+s:t,r]}}function rt(n){var t=tt(n);return t.invert=tt(-n),t}function it(n,t){var r=E(n),i=x(n),e=E(t),o=x(t);function u(n,t){var u=E(t),c=E(n)*u,a=x(n)*u,l=x(t),f=l*r+c*i;return[d(a*e-f*o,c*r-l*i),P(f*e+a*o)]}return u.invert=function(n,t){var u=E(t),c=E(n)*u,a=x(n)*u,l=x(t),f=l*e-a*o;return[d(a*e+l*o,c*r+f*i),P(f*r-c*i)]},u}function et(n){function t(t){return(t=n(t[0]*h,t[1]*h))[0]*=p,t[1]*=p,t}return n=nt(n[0]*h,n[1]*h,n.length>2?n[2]*h:0),t.invert=function(t){return(t=n.invert(t[0]*h,t[1]*h))[0]*=p,t[1]*=p,t},t}function ot(n,t,r,i,e,o){if(r){var u=E(t),c=x(t),a=i*r;null==e?(e=t+i*s,o=t-a/2):(e=ut(u,e),o=ut(u,o),(i>0?e<o:e>o)&&(e+=i*s));for(var l,f=e;i>0?f>o:f<o;f-=a)l=rn([u,-c*E(f),-c*x(f)]),n.point(l[0],l[1])}}function ut(n,t){(t=en(t))[0]-=n,ln(t);var r=C(-t[1]);return((-t[2]<0?-r:r)+s-u)%s}function ct(){var n,t=[];return{point:function(t,r){n.push([t,r])},lineStart:function(){t.push(n=[])},lineEnd:A,rejoin:function(){t.length>1&&t.push(t.pop().concat(t.shift()))},result:function(){var r=t;return t=[],n=null,r}}}function at(n,t){return g(n[0]-t[0])<u&&g(n[1]-t[1])<u}function lt(n,t,r,i){this.x=n,this.z=t,this.o=r,this.e=i,this.v=!1,this.n=this.p=null}function ft(n,t,r,i,e){var o,u,c=[],a=[];if(n.forEach(function(n){if(!((t=n.length-1)<=0)){var t,r,i=n[0],u=n[t];if(at(i,u)){for(e.lineStart(),o=0;o<t;++o)e.point((i=n[o])[0],i[1]);e.lineEnd()}else c.push(r=new lt(i,n,null,!0)),a.push(r.o=new lt(i,null,r,!1)),c.push(r=new lt(u,n,null,!1)),a.push(r.o=new lt(u,null,r,!0))}}),c.length){for(a.sort(t),st(c),st(a),o=0,u=a.length;o<u;++o)a[o].e=r=!r;for(var l,f,s=c[0];;){for(var p=s,h=!0;p.v;)if((p=p.n)===s)return;l=p.z,e.lineStart();do{if(p.v=p.o.v=!0,p.e){if(h)for(o=0,u=l.length;o<u;++o)e.point((f=l[o])[0],f[1]);else i(p.x,p.n.x,1,e);p=p.n}else{if(h)for(l=p.p.z,o=l.length-1;o>=0;--o)e.point((f=l[o])[0],f[1]);else i(p.x,p.p.x,-1,e);p=p.p}l=(p=p.o).z,h=!h}while(!p.v);e.lineEnd()}}}function st(n){if(t=n.length){for(var t,r,i=0,e=n[0];++i<t;)e.n=r=n[i],r.p=e,e=r;e.n=r=n[0],r.p=e}}$n.invert=$n;var pt=r();function ht(n,t){var r=t[0],i=t[1],e=x(i),o=[x(r),-E(r),0],c=0,p=0;pt.reset(),1===e?i=l+u:-1===e&&(i=-l-u);for(var h=0,g=n.length;h<g;++h)if(y=(v=n[h]).length)for(var v,y,S=v[y-1],m=S[0],M=S[1]/2+f,_=x(M),N=E(M),w=0;w<y;++w,m=R,_=j,N=q,S=C){var C=v[w],R=C[0],A=C[1]/2+f,j=x(A),q=E(A),z=R-m,b=z>=0?1:-1,L=b*z,O=L>a,G=_*j;if(pt.add(d(G*b*x(L),N*q+G*E(L))),c+=O?z+b*s:z,O^m>=r^R>=r){var T=un(en(S),en(C));ln(T);var k=un(o,T);ln(k);var F=(O^z>=0?-1:1)*P(k[2]);(i>F||i===F&&(T[0]||T[1]))&&(p+=O^z>=0?1:-1)}}return(c<-u||c<u&&pt<-u)^1&p}function gt(n,r,i,e){return function(o){var u,c,a,l=r(o),f=ct(),s=r(f),p=!1,h={point:g,lineStart:d,lineEnd:E,polygonStart:function(){h.point=y,h.lineStart=S,h.lineEnd=m,c=[],u=[]},polygonEnd:function(){h.point=g,h.lineStart=d,h.lineEnd=E,c=t.merge(c);var n=ht(u,e);c.length?(p||(o.polygonStart(),p=!0),ft(c,dt,n,i,o)):n&&(p||(o.polygonStart(),p=!0),o.lineStart(),i(null,null,1,o),o.lineEnd()),p&&(o.polygonEnd(),p=!1),c=u=null},sphere:function(){o.polygonStart(),o.lineStart(),i(null,null,1,o),o.lineEnd(),o.polygonEnd()}};function g(t,r){n(t,r)&&o.point(t,r)}function v(n,t){l.point(n,t)}function d(){h.point=v,l.lineStart()}function E(){h.point=g,l.lineEnd()}function y(n,t){a.push([n,t]),s.point(n,t)}function S(){s.lineStart(),a=[]}function m(){y(a[0][0],a[0][1]),s.lineEnd();var n,t,r,i,e=s.clean(),l=f.result(),h=l.length;if(a.pop(),u.push(a),a=null,h)if(1&e){if((t=(r=l[0]).length-1)>0){for(p||(o.polygonStart(),p=!0),o.lineStart(),n=0;n<t;++n)o.point((i=r[n])[0],i[1]);o.lineEnd()}}else h>1&&2&e&&l.push(l.pop().concat(l.shift())),c.push(l.filter(vt))}return h}}function vt(n){return n.length>1}function dt(n,t){return((n=n.x)[0]<0?n[1]-l-u:l-n[1])-((t=t.x)[0]<0?t[1]-l-u:l-t[1])}var Et=gt(function(){return!0},function(n){var t,r=NaN,i=NaN,e=NaN;return{lineStart:function(){n.lineStart(),t=1},point:function(o,c){var f=o>0?a:-a,s=g(o-r);g(s-a)<u?(n.point(r,i=(i+c)/2>0?l:-l),n.point(e,i),n.lineEnd(),n.lineStart(),n.point(f,i),n.point(o,i),t=0):e!==f&&s>=a&&(g(r-e)<u&&(r-=e*u),g(o-f)<u&&(o-=f*u),i=function(n,t,r,i){var e,o,c=x(n-r);return g(c)>u?v((x(t)*(o=E(i))*x(r)-x(i)*(e=E(t))*x(n))/(e*o*c)):(t+i)/2}(r,i,o,c),n.point(e,i),n.lineEnd(),n.lineStart(),n.point(f,i),t=0),n.point(r=o,i=c),e=f},lineEnd:function(){n.lineEnd(),r=i=NaN},clean:function(){return 2-t}}},function(n,t,r,i){var e;if(null==n)e=r*l,i.point(-a,e),i.point(0,e),i.point(a,e),i.point(a,0),i.point(a,-e),i.point(0,-e),i.point(-a,-e),i.point(-a,0),i.point(-a,e);else if(g(n[0]-t[0])>u){var o=n[0]<t[0]?a:-a;e=r*o/2,i.point(-o,e),i.point(0,e),i.point(o,e)}else i.point(t[0],t[1])},[-a,-l]);function yt(n){var t=E(n),r=6*h,i=t>0,e=g(t)>u;function o(n,r){return E(n)*E(r)>t}function c(n,r,i){var e=[1,0,0],o=un(en(n),en(r)),c=on(o,o),l=o[0],f=c-l*l;if(!f)return!i&&n;var s=t*c/f,p=-t*l/f,h=un(e,o),v=an(e,s);cn(v,an(o,p));var d=h,E=on(v,d),y=on(d,d),S=E*E-y*(on(v,v)-1);if(!(S<0)){var m=N(S),M=an(d,(-E-m)/y);if(cn(M,v),M=rn(M),!i)return M;var x,_=n[0],w=r[0],C=n[1],P=r[1];w<_&&(x=_,_=w,w=x);var R=w-_,A=g(R-a)<u;if(!A&&P<C&&(x=C,C=P,P=x),A||R<u?A?C+P>0^M[1]<(g(M[0]-_)<u?C:P):C<=M[1]&&M[1]<=P:R>a^(_<=M[0]&&M[0]<=w)){var j=an(d,(-E+m)/y);return cn(j,v),[M,rn(j)]}}}function l(t,r){var e=i?n:a-n,o=0;return t<-e?o|=1:t>e&&(o|=2),r<-e?o|=4:r>e&&(o|=8),o}return gt(o,function(n){var t,r,f,s,p;return{lineStart:function(){s=f=!1,p=1},point:function(h,g){var v,d=[h,g],E=o(h,g),y=i?E?0:l(h,g):E?l(h+(h<0?a:-a),g):0;if(!t&&(s=f=E)&&n.lineStart(),E!==f&&(!(v=c(t,d))||at(t,v)||at(d,v))&&(d[0]+=u,d[1]+=u,E=o(d[0],d[1])),E!==f)p=0,E?(n.lineStart(),v=c(d,t),n.point(v[0],v[1])):(v=c(t,d),n.point(v[0],v[1]),n.lineEnd()),t=v;else if(e&&t&&i^E){var S;y&r||!(S=c(d,t,!0))||(p=0,i?(n.lineStart(),n.point(S[0][0],S[0][1]),n.point(S[1][0],S[1][1]),n.lineEnd()):(n.point(S[1][0],S[1][1]),n.lineEnd(),n.lineStart(),n.point(S[0][0],S[0][1])))}!E||t&&at(t,d)||n.point(d[0],d[1]),t=d,f=E,r=y},lineEnd:function(){f&&n.lineEnd(),t=null},clean:function(){return p|(s&&f)<<1}}},function(t,i,e,o){ot(o,n,r,e,t,i)},i?[0,-n]:[-a,n-a])}var St=1e9,mt=-St;function Mt(n,r,i,e){function o(t,o){return n<=t&&t<=i&&r<=o&&o<=e}function c(t,o,u,c){var l=0,s=0;if(null==t||(l=a(t,u))!==(s=a(o,u))||f(t,o)<0^u>0)do{c.point(0===l||3===l?n:i,l>1?e:r)}while((l=(l+u+4)%4)!==s);else c.point(o[0],o[1])}function a(t,e){return g(t[0]-n)<u?e>0?0:3:g(t[0]-i)<u?e>0?2:1:g(t[1]-r)<u?e>0?1:0:e>0?3:2}function l(n,t){return f(n.x,t.x)}function f(n,t){var r=a(n,1),i=a(t,1);return r!==i?r-i:0===r?t[1]-n[1]:1===r?n[0]-t[0]:2===r?n[1]-t[1]:t[0]-n[0]}return function(u){var a,f,s,p,h,g,v,d,E,y,S,m=u,M=ct(),x={point:_,lineStart:function(){x.point=N,f&&f.push(s=[]);y=!0,E=!1,v=d=NaN},lineEnd:function(){a&&(N(p,h),g&&E&&M.rejoin(),a.push(M.result()));x.point=_,E&&m.lineEnd()},polygonStart:function(){m=M,a=[],f=[],S=!0},polygonEnd:function(){var r=function(){for(var t=0,r=0,i=f.length;r<i;++r)for(var o,u,c=f[r],a=1,l=c.length,s=c[0],p=s[0],h=s[1];a<l;++a)o=p,u=h,s=c[a],p=s[0],h=s[1],u<=e?h>e&&(p-o)*(e-u)>(h-u)*(n-o)&&++t:h<=e&&(p-o)*(e-u)<(h-u)*(n-o)&&--t;return t}(),i=S&&r,o=(a=t.merge(a)).length;(i||o)&&(u.polygonStart(),i&&(u.lineStart(),c(null,null,1,u),u.lineEnd()),o&&ft(a,l,r,c,u),u.polygonEnd());m=u,a=f=s=null}};function _(n,t){o(n,t)&&m.point(n,t)}function N(t,u){var c=o(t,u);if(f&&s.push([t,u]),y)p=t,h=u,g=c,y=!1,c&&(m.lineStart(),m.point(t,u));else if(c&&E)m.point(t,u);else{var a=[v=Math.max(mt,Math.min(St,v)),d=Math.max(mt,Math.min(St,d))],l=[t=Math.max(mt,Math.min(St,t)),u=Math.max(mt,Math.min(St,u))];!function(n,t,r,i,e,o){var u,c=n[0],a=n[1],l=0,f=1,s=t[0]-c,p=t[1]-a;if(u=r-c,s||!(u>0)){if(u/=s,s<0){if(u<l)return;u<f&&(f=u)}else if(s>0){if(u>f)return;u>l&&(l=u)}if(u=e-c,s||!(u<0)){if(u/=s,s<0){if(u>f)return;u>l&&(l=u)}else if(s>0){if(u<l)return;u<f&&(f=u)}if(u=i-a,p||!(u>0)){if(u/=p,p<0){if(u<l)return;u<f&&(f=u)}else if(p>0){if(u>f)return;u>l&&(l=u)}if(u=o-a,p||!(u<0)){if(u/=p,p<0){if(u>f)return;u>l&&(l=u)}else if(p>0){if(u<l)return;u<f&&(f=u)}return l>0&&(n[0]=c+l*s,n[1]=a+l*p),f<1&&(t[0]=c+f*s,t[1]=a+f*p),!0}}}}}(a,l,n,r,i,e)?c&&(m.lineStart(),m.point(t,u),S=!1):(E||(m.lineStart(),m.point(a[0],a[1])),m.point(l[0],l[1]),c||m.lineEnd(),S=!1)}v=t,d=u,E=c}return x}}var xt,_t,Nt,wt=r(),Ct={sphere:A,point:A,lineStart:function(){Ct.point=Rt,Ct.lineEnd=Pt},lineEnd:A,polygonStart:A,polygonEnd:A};function Pt(){Ct.point=Ct.lineEnd=A}function Rt(n,t){xt=n*=h,_t=x(t*=h),Nt=E(t),Ct.point=At}function At(n,t){n*=h;var r=x(t*=h),i=E(t),e=g(n-xt),o=E(e),u=i*x(e),c=Nt*r-_t*i*o,a=_t*r+Nt*i*o;wt.add(d(N(u*u+c*c),a)),xt=n,_t=r,Nt=i}function jt(n){return wt.reset(),O(n,Ct),+wt}var qt=[null,null],zt={type:"LineString",coordinates:qt};function bt(n,t){return qt[0]=n,qt[1]=t,jt(zt)}var Lt={Feature:function(n,t){return Gt(n.geometry,t)},FeatureCollection:function(n,t){for(var r=n.features,i=-1,e=r.length;++i<e;)if(Gt(r[i].geometry,t))return!0;return!1}},Ot={Sphere:function(){return!0},Point:function(n,t){return Tt(n.coordinates,t)},MultiPoint:function(n,t){for(var r=n.coordinates,i=-1,e=r.length;++i<e;)if(Tt(r[i],t))return!0;return!1},LineString:function(n,t){return kt(n.coordinates,t)},MultiLineString:function(n,t){for(var r=n.coordinates,i=-1,e=r.length;++i<e;)if(kt(r[i],t))return!0;return!1},Polygon:function(n,t){return Ft(n.coordinates,t)},MultiPolygon:function(n,t){for(var r=n.coordinates,i=-1,e=r.length;++i<e;)if(Ft(r[i],t))return!0;return!1},GeometryCollection:function(n,t){for(var r=n.geometries,i=-1,e=r.length;++i<e;)if(Gt(r[i],t))return!0;return!1}};function Gt(n,t){return!(!n||!Ot.hasOwnProperty(n.type))&&Ot[n.type](n,t)}function Tt(n,t){return 0===bt(n,t)}function kt(n,t){var r=bt(n[0],n[1]);return bt(n[0],t)+bt(t,n[1])<=r+u}function Ft(n,t){return!!ht(n.map(Ht),It(t))}function Ht(n){return(n=n.map(It)).pop(),n}function It(n){return[n[0]*h,n[1]*h]}function Wt(n,r,i){var e=t.range(n,r-u,i).concat(r);return function(n){return e.map(function(t){return[n,t]})}}function Bt(n,r,i){var e=t.range(n,r-u,i).concat(r);return function(n){return e.map(function(t){return[t,n]})}}function Dt(){var n,r,i,e,o,c,a,l,f,s,p,h,v=10,d=v,E=90,S=360,m=2.5;function M(){return{type:"MultiLineString",coordinates:x()}}function x(){return t.range(y(e/E)*E,i,E).map(p).concat(t.range(y(l/S)*S,a,S).map(h)).concat(t.range(y(r/v)*v,n,v).filter(function(n){return g(n%E)>u}).map(f)).concat(t.range(y(c/d)*d,o,d).filter(function(n){return g(n%S)>u}).map(s))}return M.lines=function(){return x().map(function(n){return{type:"LineString",coordinates:n}})},M.outline=function(){return{type:"Polygon",coordinates:[p(e).concat(h(a).slice(1),p(i).reverse().slice(1),h(l).reverse().slice(1))]}},M.extent=function(n){return arguments.length?M.extentMajor(n).extentMinor(n):M.extentMinor()},M.extentMajor=function(n){return arguments.length?(e=+n[0][0],i=+n[1][0],l=+n[0][1],a=+n[1][1],e>i&&(n=e,e=i,i=n),l>a&&(n=l,l=a,a=n),M.precision(m)):[[e,l],[i,a]]},M.extentMinor=function(t){return arguments.length?(r=+t[0][0],n=+t[1][0],c=+t[0][1],o=+t[1][1],r>n&&(t=r,r=n,n=t),c>o&&(t=c,c=o,o=t),M.precision(m)):[[r,c],[n,o]]},M.step=function(n){return arguments.length?M.stepMajor(n).stepMinor(n):M.stepMinor()},M.stepMajor=function(n){return arguments.length?(E=+n[0],S=+n[1],M):[E,S]},M.stepMinor=function(n){return arguments.length?(v=+n[0],d=+n[1],M):[v,d]},M.precision=function(t){return arguments.length?(m=+t,f=Wt(c,o,90),s=Bt(r,n,m),p=Wt(l,a,90),h=Bt(e,i,m),M):m},M.extentMajor([[-180,-90+u],[180,90-u]]).extentMinor([[-180,-80-u],[180,80+u]])}function Ut(n){return n}var Xt,Yt,Zt,Jt,Kt=r(),Qt=r(),Vt={point:A,lineStart:A,lineEnd:A,polygonStart:function(){Vt.lineStart=$t,Vt.lineEnd=rr},polygonEnd:function(){Vt.lineStart=Vt.lineEnd=Vt.point=A,Kt.add(g(Qt)),Qt.reset()},result:function(){var n=Kt/2;return Kt.reset(),n}};function $t(){Vt.point=nr}function nr(n,t){Vt.point=tr,Xt=Zt=n,Yt=Jt=t}function tr(n,t){Qt.add(Jt*n-Zt*t),Zt=n,Jt=t}function rr(){tr(Xt,Yt)}var ir=1/0,er=ir,or=-ir,ur=or,cr={point:function(n,t){n<ir&&(ir=n);n>or&&(or=n);t<er&&(er=t);t>ur&&(ur=t)},lineStart:A,lineEnd:A,polygonStart:A,polygonEnd:A,result:function(){var n=[[ir,er],[or,ur]];return or=ur=-(er=ir=1/0),n}};var ar,lr,fr,sr,pr=0,hr=0,gr=0,vr=0,dr=0,Er=0,yr=0,Sr=0,mr=0,Mr={point:xr,lineStart:_r,lineEnd:Cr,polygonStart:function(){Mr.lineStart=Pr,Mr.lineEnd=Rr},polygonEnd:function(){Mr.point=xr,Mr.lineStart=_r,Mr.lineEnd=Cr},result:function(){var n=mr?[yr/mr,Sr/mr]:Er?[vr/Er,dr/Er]:gr?[pr/gr,hr/gr]:[NaN,NaN];return pr=hr=gr=vr=dr=Er=yr=Sr=mr=0,n}};function xr(n,t){pr+=n,hr+=t,++gr}function _r(){Mr.point=Nr}function Nr(n,t){Mr.point=wr,xr(fr=n,sr=t)}function wr(n,t){var r=n-fr,i=t-sr,e=N(r*r+i*i);vr+=e*(fr+n)/2,dr+=e*(sr+t)/2,Er+=e,xr(fr=n,sr=t)}function Cr(){Mr.point=xr}function Pr(){Mr.point=Ar}function Rr(){jr(ar,lr)}function Ar(n,t){Mr.point=jr,xr(ar=fr=n,lr=sr=t)}function jr(n,t){var r=n-fr,i=t-sr,e=N(r*r+i*i);vr+=e*(fr+n)/2,dr+=e*(sr+t)/2,Er+=e,yr+=(e=sr*n-fr*t)*(fr+n),Sr+=e*(sr+t),mr+=3*e,xr(fr=n,sr=t)}function qr(n){this._context=n}qr.prototype={_radius:4.5,pointRadius:function(n){return this._radius=n,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(n,t){switch(this._point){case 0:this._context.moveTo(n,t),this._point=1;break;case 1:this._context.lineTo(n,t);break;default:this._context.moveTo(n+this._radius,t),this._context.arc(n,t,this._radius,0,s)}},result:A};var zr,br,Lr,Or,Gr,Tr=r(),kr={point:A,lineStart:function(){kr.point=Fr},lineEnd:function(){zr&&Hr(br,Lr),kr.point=A},polygonStart:function(){zr=!0},polygonEnd:function(){zr=null},result:function(){var n=+Tr;return Tr.reset(),n}};function Fr(n,t){kr.point=Hr,br=Or=n,Lr=Gr=t}function Hr(n,t){Or-=n,Gr-=t,Tr.add(N(Or*Or+Gr*Gr)),Or=n,Gr=t}function Ir(){this._string=[]}function Wr(n){return"m0,"+n+"a"+n+","+n+" 0 1,1 0,"+-2*n+"a"+n+","+n+" 0 1,1 0,"+2*n+"z"}function Br(n){return function(t){var r=new Dr;for(var i in n)r[i]=n[i];return r.stream=t,r}}function Dr(){}function Ur(n,t,r){var i=n.clipExtent&&n.clipExtent();return n.scale(150).translate([0,0]),null!=i&&n.clipExtent(null),O(r,n.stream(cr)),t(cr.result()),null!=i&&n.clipExtent(i),n}function Xr(n,t,r){return Ur(n,function(r){var i=t[1][0]-t[0][0],e=t[1][1]-t[0][1],o=Math.min(i/(r[1][0]-r[0][0]),e/(r[1][1]-r[0][1])),u=+t[0][0]+(i-o*(r[1][0]+r[0][0]))/2,c=+t[0][1]+(e-o*(r[1][1]+r[0][1]))/2;n.scale(150*o).translate([u,c])},r)}function Yr(n,t,r){return Xr(n,[[0,0],t],r)}function Zr(n,t,r){return Ur(n,function(r){var i=+t,e=i/(r[1][0]-r[0][0]),o=(i-e*(r[1][0]+r[0][0]))/2,u=-e*r[0][1];n.scale(150*e).translate([o,u])},r)}function Jr(n,t,r){return Ur(n,function(r){var i=+t,e=i/(r[1][1]-r[0][1]),o=-e*r[0][0],u=(i-e*(r[1][1]+r[0][1]))/2;n.scale(150*e).translate([o,u])},r)}Ir.prototype={_radius:4.5,_circle:Wr(4.5),pointRadius:function(n){return(n=+n)!==this._radius&&(this._radius=n,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push("Z"),this._point=NaN},point:function(n,t){switch(this._point){case 0:this._string.push("M",n,",",t),this._point=1;break;case 1:this._string.push("L",n,",",t);break;default:null==this._circle&&(this._circle=Wr(this._radius)),this._string.push("M",n,",",t,this._circle)}},result:function(){if(this._string.length){var n=this._string.join("");return this._string=[],n}return null}},Dr.prototype={constructor:Dr,point:function(n,t){this.stream.point(n,t)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var Kr=16,Qr=E(30*h);function Vr(n,t){return+t?function(n,t){function r(i,e,o,c,a,l,f,s,p,h,v,E,y,S){var m=f-i,M=s-e,x=m*m+M*M;if(x>4*t&&y--){var _=c+h,w=a+v,C=l+E,R=N(_*_+w*w+C*C),A=P(C/=R),j=g(g(C)-1)<u||g(o-p)<u?(o+p)/2:d(w,_),q=n(j,A),z=q[0],b=q[1],L=z-i,O=b-e,G=M*L-m*O;(G*G/x>t||g((m*L+M*O)/x-.5)>.3||c*h+a*v+l*E<Qr)&&(r(i,e,o,c,a,l,z,b,j,_/=R,w/=R,C,y,S),S.point(z,b),r(z,b,j,_,w,C,f,s,p,h,v,E,y,S))}}return function(t){var i,e,o,u,c,a,l,f,s,p,h,g,v={point:d,lineStart:E,lineEnd:S,polygonStart:function(){t.polygonStart(),v.lineStart=m},polygonEnd:function(){t.polygonEnd(),v.lineStart=E}};function d(r,i){r=n(r,i),t.point(r[0],r[1])}function E(){f=NaN,v.point=y,t.lineStart()}function y(i,e){var o=en([i,e]),u=n(i,e);r(f,s,l,p,h,g,f=u[0],s=u[1],l=i,p=o[0],h=o[1],g=o[2],Kr,t),t.point(f,s)}function S(){v.point=d,t.lineEnd()}function m(){E(),v.point=M,v.lineEnd=x}function M(n,t){y(i=n,t),e=f,o=s,u=p,c=h,a=g,v.point=y}function x(){r(f,s,l,p,h,g,e,o,i,u,c,a,Kr,t),v.lineEnd=S,S()}return v}}(n,t):function(n){return Br({point:function(t,r){t=n(t,r),this.stream.point(t[0],t[1])}})}(n)}var $r=Br({point:function(n,t){this.stream.point(n*h,t*h)}});function ni(n,t,r,i){var e=E(i),o=x(i),u=e*n,c=o*n,a=e/n,l=o/n,f=(o*r-e*t)/n,s=(o*t+e*r)/n;function p(n,i){return[u*n-c*i+t,r-c*n-u*i]}return p.invert=function(n,t){return[a*n-l*t+f,s-l*n-a*t]},p}function ti(n){return ri(function(){return n})()}function ri(n){var t,r,i,e,o,u,c,a,l,f,s=150,g=480,v=250,d=0,E=0,y=0,S=0,m=0,M=0,x=null,_=Et,w=null,C=Ut,P=.5;function R(n){return a(n[0]*h,n[1]*h)}function A(n){return(n=a.invert(n[0],n[1]))&&[n[0]*p,n[1]*p]}function j(){var n=ni(s,0,0,M).apply(null,t(d,E)),i=(M?ni:function(n,t,r){function i(i,e){return[t+n*i,r-n*e]}return i.invert=function(i,e){return[(i-t)/n,(r-e)/n]},i})(s,g-n[0],v-n[1],M);return r=nt(y,S,m),c=Vn(t,i),a=Vn(r,c),u=Vr(c,P),q()}function q(){return l=f=null,R}return R.stream=function(n){return l&&f===n?l:l=$r(function(n){return Br({point:function(t,r){var i=n(t,r);return this.stream.point(i[0],i[1])}})}(r)(_(u(C(f=n)))))},R.preclip=function(n){return arguments.length?(_=n,x=void 0,q()):_},R.postclip=function(n){return arguments.length?(C=n,w=i=e=o=null,q()):C},R.clipAngle=function(n){return arguments.length?(_=+n?yt(x=n*h):(x=null,Et),q()):x*p},R.clipExtent=function(n){return arguments.length?(C=null==n?(w=i=e=o=null,Ut):Mt(w=+n[0][0],i=+n[0][1],e=+n[1][0],o=+n[1][1]),q()):null==w?null:[[w,i],[e,o]]},R.scale=function(n){return arguments.length?(s=+n,j()):s},R.translate=function(n){return arguments.length?(g=+n[0],v=+n[1],j()):[g,v]},R.center=function(n){return arguments.length?(d=n[0]%360*h,E=n[1]%360*h,j()):[d*p,E*p]},R.rotate=function(n){return arguments.length?(y=n[0]%360*h,S=n[1]%360*h,m=n.length>2?n[2]%360*h:0,j()):[y*p,S*p,m*p]},R.angle=function(n){return arguments.length?(M=n%360*h,j()):M*p},R.precision=function(n){return arguments.length?(u=Vr(c,P=n*n),q()):N(P)},R.fitExtent=function(n,t){return Xr(R,n,t)},R.fitSize=function(n,t){return Yr(R,n,t)},R.fitWidth=function(n,t){return Zr(R,n,t)},R.fitHeight=function(n,t){return Jr(R,n,t)},function(){return t=n.apply(this,arguments),R.invert=t.invert&&A,j()}}function ii(n){var t=0,r=a/3,i=ri(n),e=i(t,r);return e.parallels=function(n){return arguments.length?i(t=n[0]*h,r=n[1]*h):[t*p,r*p]},e}function ei(n,t){var r=x(n),i=(r+x(t))/2;if(g(i)<u)return function(n){var t=E(n);function r(n,r){return[n*t,x(r)/t]}return r.invert=function(n,r){return[n/t,P(r*t)]},r}(n);var e=1+r*(2*i-r),o=N(e)/i;function c(n,t){var r=N(e-2*i*x(t))/i;return[r*x(n*=i),o-r*E(n)]}return c.invert=function(n,t){var r=o-t;return[d(n,g(r))/i*_(r),P((e-(n*n+r*r)*i*i)/(2*i))]},c}function oi(){return ii(ei).scale(155.424).center([0,33.6442])}function ui(){return oi().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])}function ci(n){return function(t,r){var i=E(t),e=E(r),o=n(i*e);return[o*e*x(t),o*x(r)]}}function ai(n){return function(t,r){var i=N(t*t+r*r),e=n(i),o=x(e),u=E(e);return[d(t*o,i*u),P(i&&r*o/i)]}}var li=ci(function(n){return N(2/(1+n))});li.invert=ai(function(n){return 2*P(n/2)});var fi=ci(function(n){return(n=C(n))&&n/x(n)});function si(n,t){return[n,m(w((l+t)/2))]}function pi(n){var t,r,i,e=ti(n),o=e.center,u=e.scale,c=e.translate,l=e.clipExtent,f=null;function s(){var o=a*u(),c=e(et(e.rotate()).invert([0,0]));return l(null==f?[[c[0]-o,c[1]-o],[c[0]+o,c[1]+o]]:n===si?[[Math.max(c[0]-o,f),t],[Math.min(c[0]+o,r),i]]:[[f,Math.max(c[1]-o,t)],[r,Math.min(c[1]+o,i)]])}return e.scale=function(n){return arguments.length?(u(n),s()):u()},e.translate=function(n){return arguments.length?(c(n),s()):c()},e.center=function(n){return arguments.length?(o(n),s()):o()},e.clipExtent=function(n){return arguments.length?(null==n?f=t=r=i=null:(f=+n[0][0],t=+n[0][1],r=+n[1][0],i=+n[1][1]),s()):null==f?null:[[f,t],[r,i]]},s()}function hi(n){return w((l+n)/2)}function gi(n,t){var r=E(n),i=n===t?x(n):m(r/E(t))/m(hi(t)/hi(n)),e=r*M(hi(n),i)/i;if(!i)return si;function o(n,t){e>0?t<-l+u&&(t=-l+u):t>l-u&&(t=l-u);var r=e/M(hi(t),i);return[r*x(i*n),e-r*E(i*n)]}return o.invert=function(n,t){var r=e-t,o=_(i)*N(n*n+r*r);return[d(n,g(r))/i*_(r),2*v(M(e/o,1/i))-l]},o}function vi(n,t){return[n,t]}function di(n,t){var r=E(n),i=n===t?x(n):(r-E(t))/(t-n),e=r/i+n;if(g(i)<u)return vi;function o(n,t){var r=e-t,o=i*n;return[r*x(o),e-r*E(o)]}return o.invert=function(n,t){var r=e-t;return[d(n,g(r))/i*_(r),e-_(i)*N(n*n+r*r)]},o}function Ei(n,t){var r=E(t),i=E(n)*r;return[r*x(n)/i,x(t)/i]}function yi(n,t,r,i){return 1===n&&1===t&&0===r&&0===i?Ut:Br({point:function(e,o){this.stream.point(e*n+r,o*t+i)}})}function Si(n,t){var r=t*t,i=r*r;return[n*(.8707-.131979*r+i*(i*(.003971*r-.001529*i)-.013791)),t*(1.007226+r*(.015085+i*(.028874*r-.044475-.005916*i)))]}function mi(n,t){return[E(t)*x(n),x(t)]}function Mi(n,t){var r=E(t),i=1+E(n)*r;return[r*x(n)/i,x(t)/i]}function xi(n,t){return[m(w((l+t)/2)),-n]}fi.invert=ai(function(n){return n}),si.invert=function(n,t){return[n,2*v(S(t))-l]},vi.invert=vi,Ei.invert=ai(v),Si.invert=function(n,t){var r,i=t,e=25;do{var o=i*i,c=o*o;i-=r=(i*(1.007226+o*(.015085+c*(.028874*o-.044475-.005916*c)))-t)/(1.007226+o*(.045255+c*(.259866*o-.311325-.005916*11*c)))}while(g(r)>u&&--e>0);return[n/(.8707+(o=i*i)*(o*(o*o*o*(.003971-.001529*o)-.013791)-.131979)),i]},mi.invert=ai(P),Mi.invert=ai(function(n){return 2*v(n)}),xi.invert=function(n,t){return[-t,2*v(S(n))-l]},n.geoArea=function(n){return K.reset(),O(n,Q),2*K},n.geoBounds=function(n){var t,r,i,e,o,u,c;if(D=B=-(I=W=1/0),fn=[],O(n,An),r=fn.length){for(fn.sort(kn),t=1,o=[i=fn[0]];t<r;++t)Fn(i,(e=fn[t])[0])||Fn(i,e[1])?(Tn(i[0],e[1])>Tn(i[0],i[1])&&(i[1]=e[1]),Tn(e[0],i[1])>Tn(i[0],i[1])&&(i[0]=e[0])):o.push(i=e);for(u=-1/0,t=0,i=o[r=o.length-1];t<=r;i=e,++t)e=o[t],(c=Tn(i[1],e[0]))>u&&(u=c,I=e[0],B=i[1])}return fn=sn=null,I===1/0||W===1/0?[[NaN,NaN],[NaN,NaN]]:[[I,W],[B,D]]},n.geoCentroid=function(n){pn=hn=gn=vn=dn=En=yn=Sn=mn=Mn=xn=0,O(n,Hn);var t=mn,r=Mn,i=xn,e=t*t+r*r+i*i;return e<c&&(t=En,r=yn,i=Sn,hn<u&&(t=gn,r=vn,i=dn),(e=t*t+r*r+i*i)<c)?[NaN,NaN]:[d(r,t)*p,P(i/N(e))*p]},n.geoCircle=function(){var n,t,r=Qn([0,0]),i=Qn(90),e=Qn(6),o={point:function(r,i){n.push(r=t(r,i)),r[0]*=p,r[1]*=p}};function u(){var u=r.apply(this,arguments),c=i.apply(this,arguments)*h,a=e.apply(this,arguments)*h;return n=[],t=nt(-u[0]*h,-u[1]*h,0).invert,ot(o,c,a,1),u={type:"Polygon",coordinates:[n]},n=t=null,u}return u.center=function(n){return arguments.length?(r="function"==typeof n?n:Qn([+n[0],+n[1]]),u):r},u.radius=function(n){return arguments.length?(i="function"==typeof n?n:Qn(+n),u):i},u.precision=function(n){return arguments.length?(e="function"==typeof n?n:Qn(+n),u):e},u},n.geoClipAntimeridian=Et,n.geoClipCircle=yt,n.geoClipExtent=function(){var n,t,r,i=0,e=0,o=960,u=500;return r={stream:function(r){return n&&t===r?n:n=Mt(i,e,o,u)(t=r)},extent:function(c){return arguments.length?(i=+c[0][0],e=+c[0][1],o=+c[1][0],u=+c[1][1],n=t=null,r):[[i,e],[o,u]]}}},n.geoClipRectangle=Mt,n.geoContains=function(n,t){return(n&&Lt.hasOwnProperty(n.type)?Lt[n.type]:Gt)(n,t)},n.geoDistance=bt,n.geoGraticule=Dt,n.geoGraticule10=function(){return Dt()()},n.geoInterpolate=function(n,t){var r=n[0]*h,i=n[1]*h,e=t[0]*h,o=t[1]*h,u=E(i),c=x(i),a=E(o),l=x(o),f=u*E(r),s=u*x(r),g=a*E(e),v=a*x(e),y=2*P(N(R(o-i)+u*a*R(e-r))),S=x(y),m=y?function(n){var t=x(n*=y)/S,r=x(y-n)/S,i=r*f+t*g,e=r*s+t*v,o=r*c+t*l;return[d(e,i)*p,d(o,N(i*i+e*e))*p]}:function(){return[r*p,i*p]};return m.distance=y,m},n.geoLength=jt,n.geoPath=function(n,t){var r,i,e=4.5;function o(n){return n&&("function"==typeof e&&i.pointRadius(+e.apply(this,arguments)),O(n,r(i))),i.result()}return o.area=function(n){return O(n,r(Vt)),Vt.result()},o.measure=function(n){return O(n,r(kr)),kr.result()},o.bounds=function(n){return O(n,r(cr)),cr.result()},o.centroid=function(n){return O(n,r(Mr)),Mr.result()},o.projection=function(t){return arguments.length?(r=null==t?(n=null,Ut):(n=t).stream,o):n},o.context=function(n){return arguments.length?(i=null==n?(t=null,new Ir):new qr(t=n),"function"!=typeof e&&i.pointRadius(e),o):t},o.pointRadius=function(n){return arguments.length?(e="function"==typeof n?n:(i.pointRadius(+n),+n),o):e},o.projection(n).context(t)},n.geoAlbers=ui,n.geoAlbersUsa=function(){var n,t,r,i,e,o,c=ui(),a=oi().rotate([154,0]).center([-2,58.5]).parallels([55,65]),l=oi().rotate([157,0]).center([-3,19.9]).parallels([8,18]),f={point:function(n,t){o=[n,t]}};function s(n){var t=n[0],u=n[1];return o=null,r.point(t,u),o||(i.point(t,u),o)||(e.point(t,u),o)}function p(){return n=t=null,s}return s.invert=function(n){var t=c.scale(),r=c.translate(),i=(n[0]-r[0])/t,e=(n[1]-r[1])/t;return(e>=.12&&e<.234&&i>=-.425&&i<-.214?a:e>=.166&&e<.234&&i>=-.214&&i<-.115?l:c).invert(n)},s.stream=function(r){return n&&t===r?n:(i=[c.stream(t=r),a.stream(r),l.stream(r)],e=i.length,n={point:function(n,t){for(var r=-1;++r<e;)i[r].point(n,t)},sphere:function(){for(var n=-1;++n<e;)i[n].sphere()},lineStart:function(){for(var n=-1;++n<e;)i[n].lineStart()},lineEnd:function(){for(var n=-1;++n<e;)i[n].lineEnd()},polygonStart:function(){for(var n=-1;++n<e;)i[n].polygonStart()},polygonEnd:function(){for(var n=-1;++n<e;)i[n].polygonEnd()}});var i,e},s.precision=function(n){return arguments.length?(c.precision(n),a.precision(n),l.precision(n),p()):c.precision()},s.scale=function(n){return arguments.length?(c.scale(n),a.scale(.35*n),l.scale(n),s.translate(c.translate())):c.scale()},s.translate=function(n){if(!arguments.length)return c.translate();var t=c.scale(),o=+n[0],s=+n[1];return r=c.translate(n).clipExtent([[o-.455*t,s-.238*t],[o+.455*t,s+.238*t]]).stream(f),i=a.translate([o-.307*t,s+.201*t]).clipExtent([[o-.425*t+u,s+.12*t+u],[o-.214*t-u,s+.234*t-u]]).stream(f),e=l.translate([o-.205*t,s+.212*t]).clipExtent([[o-.214*t+u,s+.166*t+u],[o-.115*t-u,s+.234*t-u]]).stream(f),p()},s.fitExtent=function(n,t){return Xr(s,n,t)},s.fitSize=function(n,t){return Yr(s,n,t)},s.fitWidth=function(n,t){return Zr(s,n,t)},s.fitHeight=function(n,t){return Jr(s,n,t)},s.scale(1070)},n.geoAzimuthalEqualArea=function(){return ti(li).scale(124.75).clipAngle(179.999)},n.geoAzimuthalEqualAreaRaw=li,n.geoAzimuthalEquidistant=function(){return ti(fi).scale(79.4188).clipAngle(179.999)},n.geoAzimuthalEquidistantRaw=fi,n.geoConicConformal=function(){return ii(gi).scale(109.5).parallels([30,30])},n.geoConicConformalRaw=gi,n.geoConicEqualArea=oi,n.geoConicEqualAreaRaw=ei,n.geoConicEquidistant=function(){return ii(di).scale(131.154).center([0,13.9389])},n.geoConicEquidistantRaw=di,n.geoEquirectangular=function(){return ti(vi).scale(152.63)},n.geoEquirectangularRaw=vi,n.geoGnomonic=function(){return ti(Ei).scale(144.049).clipAngle(60)},n.geoGnomonicRaw=Ei,n.geoIdentity=function(){var n,t,r,i,e,o,u=1,c=0,a=0,l=1,f=1,s=Ut,p=null,h=Ut;function g(){return i=e=null,o}return o={stream:function(n){return i&&e===n?i:i=s(h(e=n))},postclip:function(i){return arguments.length?(h=i,p=n=t=r=null,g()):h},clipExtent:function(i){return arguments.length?(h=null==i?(p=n=t=r=null,Ut):Mt(p=+i[0][0],n=+i[0][1],t=+i[1][0],r=+i[1][1]),g()):null==p?null:[[p,n],[t,r]]},scale:function(n){return arguments.length?(s=yi((u=+n)*l,u*f,c,a),g()):u},translate:function(n){return arguments.length?(s=yi(u*l,u*f,c=+n[0],a=+n[1]),g()):[c,a]},reflectX:function(n){return arguments.length?(s=yi(u*(l=n?-1:1),u*f,c,a),g()):l<0},reflectY:function(n){return arguments.length?(s=yi(u*l,u*(f=n?-1:1),c,a),g()):f<0},fitExtent:function(n,t){return Xr(o,n,t)},fitSize:function(n,t){return Yr(o,n,t)},fitWidth:function(n,t){return Zr(o,n,t)},fitHeight:function(n,t){return Jr(o,n,t)}}},n.geoProjection=ti,n.geoProjectionMutator=ri,n.geoMercator=function(){return pi(si).scale(961/s)},n.geoMercatorRaw=si,n.geoNaturalEarth1=function(){return ti(Si).scale(175.295)},n.geoNaturalEarth1Raw=Si,n.geoOrthographic=function(){return ti(mi).scale(249.5).clipAngle(90+u)},n.geoOrthographicRaw=mi,n.geoStereographic=function(){return ti(Mi).scale(250).clipAngle(142)},n.geoStereographicRaw=Mi,n.geoTransverseMercator=function(){var n=pi(xi),t=n.center,r=n.rotate;return n.center=function(n){return arguments.length?t([-n[1],n[0]]):[(n=t())[1],-n[0]]},n.rotate=function(n){return arguments.length?r([n[0],n[1],n.length>2?n[2]+90:90]):[(n=r())[0],n[1],n[2]-90]},r([0,0,90]).scale(159.155)},n.geoTransverseMercatorRaw=xi,n.geoRotation=et,n.geoStream=O,n.geoTransform=function(n){return{stream:Br(n)}},Object.defineProperty(n,"__esModule",{value:!0})});

},{"d3-array":20}],35:[function(require,module,exports){
!function(n,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r(n.d3=n.d3||{})}(this,function(n){"use strict";function r(n,r){return n.parent===r.parent?1:2}function e(n,r){return n+r.x}function t(n,r){return Math.max(n,r.y)}function u(n){var r=0,e=n.children,t=e&&e.length;if(t)for(;--t>=0;)r+=e[t].value;else r=1;n.value=r}function i(n,r){var e,t,u,i,a,h=new c(n),l=+n.value&&(h.value=n.value),p=[h];for(null==r&&(r=o);e=p.pop();)if(l&&(e.value=+e.data.value),(u=r(e.data))&&(a=u.length))for(e.children=new Array(a),i=a-1;i>=0;--i)p.push(t=e.children[i]=new c(u[i])),t.parent=e,t.depth=e.depth+1;return h.eachBefore(f)}function o(n){return n.children}function a(n){n.data=n.data.data}function f(n){var r=0;do{n.height=r}while((n=n.parent)&&n.height<++r)}function c(n){this.data=n,this.depth=this.height=0,this.parent=null}c.prototype=i.prototype={constructor:c,count:function(){return this.eachAfter(u)},each:function(n){var r,e,t,u,i=this,o=[i];do{for(r=o.reverse(),o=[];i=r.pop();)if(n(i),e=i.children)for(t=0,u=e.length;t<u;++t)o.push(e[t])}while(o.length);return this},eachAfter:function(n){for(var r,e,t,u=this,i=[u],o=[];u=i.pop();)if(o.push(u),r=u.children)for(e=0,t=r.length;e<t;++e)i.push(r[e]);for(;u=o.pop();)n(u);return this},eachBefore:function(n){for(var r,e,t=this,u=[t];t=u.pop();)if(n(t),r=t.children)for(e=r.length-1;e>=0;--e)u.push(r[e]);return this},sum:function(n){return this.eachAfter(function(r){for(var e=+n(r.data)||0,t=r.children,u=t&&t.length;--u>=0;)e+=t[u].value;r.value=e})},sort:function(n){return this.eachBefore(function(r){r.children&&r.children.sort(n)})},path:function(n){for(var r=this,e=function(n,r){if(n===r)return n;var e=n.ancestors(),t=r.ancestors(),u=null;for(n=e.pop(),r=t.pop();n===r;)u=n,n=e.pop(),r=t.pop();return u}(r,n),t=[r];r!==e;)r=r.parent,t.push(r);for(var u=t.length;n!==e;)t.splice(u,0,n),n=n.parent;return t},ancestors:function(){for(var n=this,r=[n];n=n.parent;)r.push(n);return r},descendants:function(){var n=[];return this.each(function(r){n.push(r)}),n},leaves:function(){var n=[];return this.eachBefore(function(r){r.children||n.push(r)}),n},links:function(){var n=this,r=[];return n.each(function(e){e!==n&&r.push({source:e.parent,target:e})}),r},copy:function(){return i(this).eachBefore(a)}};var h=Array.prototype.slice;var l=function(n){for(var r,e,t=0,u=(n=function(n){for(var r,e,t=n.length;t;)e=Math.random()*t--|0,r=n[t],n[t]=n[e],n[e]=r;return n}(h.call(n))).length,i=[];t<u;)r=n[t],e&&s(e,r)?++t:(e=x(i=p(i,r)),t=0);return e};function p(n,r){var e,t;if(v(r,n))return[r];for(e=0;e<n.length;++e)if(d(r,n[e])&&v(y(n[e],r),n))return[n[e],r];for(e=0;e<n.length-1;++e)for(t=e+1;t<n.length;++t)if(d(y(n[e],n[t]),r)&&d(y(n[e],r),n[t])&&d(y(n[t],r),n[e])&&v(g(n[e],n[t],r),n))return[n[e],n[t],r];throw new Error}function d(n,r){var e=n.r-r.r,t=r.x-n.x,u=r.y-n.y;return e<0||e*e<t*t+u*u}function s(n,r){var e=n.r-r.r+1e-6,t=r.x-n.x,u=r.y-n.y;return e>0&&e*e>t*t+u*u}function v(n,r){for(var e=0;e<r.length;++e)if(!s(n,r[e]))return!1;return!0}function x(n){switch(n.length){case 1:return{x:(r=n[0]).x,y:r.y,r:r.r};case 2:return y(n[0],n[1]);case 3:return g(n[0],n[1],n[2])}var r}function y(n,r){var e=n.x,t=n.y,u=n.r,i=r.x,o=r.y,a=r.r,f=i-e,c=o-t,h=a-u,l=Math.sqrt(f*f+c*c);return{x:(e+i+f/l*h)/2,y:(t+o+c/l*h)/2,r:(l+u+a)/2}}function g(n,r,e){var t=n.x,u=n.y,i=n.r,o=r.x,a=r.y,f=r.r,c=e.x,h=e.y,l=e.r,p=t-o,d=t-c,s=u-a,v=u-h,x=f-i,y=l-i,g=t*t+u*u-i*i,m=g-o*o-a*a+f*f,w=g-c*c-h*h+l*l,_=d*s-p*v,z=(s*w-v*m)/(2*_)-t,B=(v*x-s*y)/_,M=(d*m-p*w)/(2*_)-u,A=(p*y-d*x)/_,q=B*B+A*A-1,E=2*(i+z*B+M*A),b=z*z+M*M-i*i,S=-(q?(E+Math.sqrt(E*E-4*q*b))/(2*q):b/E);return{x:t+z+B*S,y:u+M+A*S,r:S}}function m(n,r,e){var t,u,i,o,a=n.x-r.x,f=n.y-r.y,c=a*a+f*f;c?(u=r.r+e.r,u*=u,o=n.r+e.r,u>(o*=o)?(t=(c+o-u)/(2*c),i=Math.sqrt(Math.max(0,o/c-t*t)),e.x=n.x-t*a-i*f,e.y=n.y-t*f+i*a):(t=(c+u-o)/(2*c),i=Math.sqrt(Math.max(0,u/c-t*t)),e.x=r.x+t*a-i*f,e.y=r.y+t*f+i*a)):(e.x=r.x+e.r,e.y=r.y)}function w(n,r){var e=n.r+r.r-1e-6,t=r.x-n.x,u=r.y-n.y;return e>0&&e*e>t*t+u*u}function _(n){var r=n._,e=n.next._,t=r.r+e.r,u=(r.x*e.r+e.x*r.r)/t,i=(r.y*e.r+e.y*r.r)/t;return u*u+i*i}function z(n){this._=n,this.next=null,this.previous=null}function B(n){if(!(u=n.length))return 0;var r,e,t,u,i,o,a,f,c,h,p;if((r=n[0]).x=0,r.y=0,!(u>1))return r.r;if(e=n[1],r.x=-e.r,e.x=r.r,e.y=0,!(u>2))return r.r+e.r;m(e,r,t=n[2]),r=new z(r),e=new z(e),t=new z(t),r.next=t.previous=e,e.next=r.previous=t,t.next=e.previous=r;n:for(a=3;a<u;++a){m(r._,e._,t=n[a]),t=new z(t),f=e.next,c=r.previous,h=e._.r,p=r._.r;do{if(h<=p){if(w(f._,t._)){e=f,r.next=e,e.previous=r,--a;continue n}h+=f._.r,f=f.next}else{if(w(c._,t._)){(r=c).next=e,e.previous=r,--a;continue n}p+=c._.r,c=c.previous}}while(f!==c.next);for(t.previous=r,t.next=e,r.next=e.previous=e=t,i=_(r);(t=t.next)!==e;)(o=_(t))<i&&(r=t,i=o);e=r.next}for(r=[e._],t=e;(t=t.next)!==e;)r.push(t._);for(t=l(r),a=0;a<u;++a)(r=n[a]).x-=t.x,r.y-=t.y;return t.r}function M(n){if("function"!=typeof n)throw new Error;return n}function A(){return 0}var q=function(n){return function(){return n}};function E(n){return Math.sqrt(n.value)}function b(n){return function(r){r.children||(r.r=Math.max(0,+n(r)||0))}}function S(n,r){return function(e){if(t=e.children){var t,u,i,o=t.length,a=n(e)*r||0;if(a)for(u=0;u<o;++u)t[u].r+=a;if(i=B(t),a)for(u=0;u<o;++u)t[u].r-=a;e.r=i+a}}}function k(n){return function(r){var e=r.parent;r.r*=n,e&&(r.x=e.x+n*r.x,r.y=e.y+n*r.y)}}var I=function(n){n.x0=Math.round(n.x0),n.y0=Math.round(n.y0),n.x1=Math.round(n.x1),n.y1=Math.round(n.y1)},O=function(n,r,e,t,u){for(var i,o=n.children,a=-1,f=o.length,c=n.value&&(t-r)/n.value;++a<f;)(i=o[a]).y0=e,i.y1=u,i.x0=r,i.x1=r+=i.value*c},j="$",R={depth:-1},T={};function D(n){return n.id}function L(n){return n.parentId}function P(n,r){return n.parent===r.parent?1:2}function $(n){var r=n.children;return r?r[0]:n.t}function C(n){var r=n.children;return r?r[r.length-1]:n.t}function F(n,r,e){var t=e/(r.i-n.i);r.c-=t,r.s+=e,n.c+=t,r.z+=e,r.m+=e}function G(n,r,e){return n.a.parent===r.parent?n.a:e}function H(n,r){this._=n,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=r}H.prototype=Object.create(c.prototype);var J=function(n,r,e,t,u){for(var i,o=n.children,a=-1,f=o.length,c=n.value&&(u-e)/n.value;++a<f;)(i=o[a]).x0=r,i.x1=t,i.y0=e,i.y1=e+=i.value*c},K=(1+Math.sqrt(5))/2;function N(n,r,e,t,u,i){for(var o,a,f,c,h,l,p,d,s,v,x,y=[],g=r.children,m=0,w=0,_=g.length,z=r.value;m<_;){f=u-e,c=i-t;do{h=g[w++].value}while(!h&&w<_);for(l=p=h,x=h*h*(v=Math.max(c/f,f/c)/(z*n)),s=Math.max(p/x,x/l);w<_;++w){if(h+=a=g[w].value,a<l&&(l=a),a>p&&(p=a),x=h*h*v,(d=Math.max(p/x,x/l))>s){h-=a;break}s=d}y.push(o={value:h,dice:f<c,children:g.slice(m,w)}),o.dice?O(o,e,t,u,z?t+=c*h/z:i):J(o,e,t,z?e+=f*h/z:u,i),z-=h,m=w}return y}var Q=function n(r){function e(n,e,t,u,i){N(r,n,e,t,u,i)}return e.ratio=function(r){return n((r=+r)>1?r:1)},e}(K),U=function n(r){function e(n,e,t,u,i){if((o=n._squarify)&&o.ratio===r)for(var o,a,f,c,h,l=-1,p=o.length,d=n.value;++l<p;){for(f=(a=o[l]).children,c=a.value=0,h=f.length;c<h;++c)a.value+=f[c].value;a.dice?O(a,e,t,u,t+=(i-t)*a.value/d):J(a,e,t,e+=(u-e)*a.value/d,i),d-=a.value}else n._squarify=o=N(r,n,e,t,u,i),o.ratio=r}return e.ratio=function(r){return n((r=+r)>1?r:1)},e}(K);n.cluster=function(){var n=r,u=1,i=1,o=!1;function a(r){var a,f=0;r.eachAfter(function(r){var u=r.children;u?(r.x=function(n){return n.reduce(e,0)/n.length}(u),r.y=function(n){return 1+n.reduce(t,0)}(u)):(r.x=a?f+=n(r,a):0,r.y=0,a=r)});var c=function(n){for(var r;r=n.children;)n=r[0];return n}(r),h=function(n){for(var r;r=n.children;)n=r[r.length-1];return n}(r),l=c.x-n(c,h)/2,p=h.x+n(h,c)/2;return r.eachAfter(o?function(n){n.x=(n.x-r.x)*u,n.y=(r.y-n.y)*i}:function(n){n.x=(n.x-l)/(p-l)*u,n.y=(1-(r.y?n.y/r.y:1))*i})}return a.separation=function(r){return arguments.length?(n=r,a):n},a.size=function(n){return arguments.length?(o=!1,u=+n[0],i=+n[1],a):o?null:[u,i]},a.nodeSize=function(n){return arguments.length?(o=!0,u=+n[0],i=+n[1],a):o?[u,i]:null},a},n.hierarchy=i,n.pack=function(){var n=null,r=1,e=1,t=A;function u(u){return u.x=r/2,u.y=e/2,n?u.eachBefore(b(n)).eachAfter(S(t,.5)).eachBefore(k(1)):u.eachBefore(b(E)).eachAfter(S(A,1)).eachAfter(S(t,u.r/Math.min(r,e))).eachBefore(k(Math.min(r,e)/(2*u.r))),u}return u.radius=function(r){return arguments.length?(n=null==(e=r)?null:M(e),u):n;var e},u.size=function(n){return arguments.length?(r=+n[0],e=+n[1],u):[r,e]},u.padding=function(n){return arguments.length?(t="function"==typeof n?n:q(+n),u):t},u},n.packSiblings=function(n){return B(n),n},n.packEnclose=l,n.partition=function(){var n=1,r=1,e=0,t=!1;function u(u){var i=u.height+1;return u.x0=u.y0=e,u.x1=n,u.y1=r/i,u.eachBefore(function(n,r){return function(t){t.children&&O(t,t.x0,n*(t.depth+1)/r,t.x1,n*(t.depth+2)/r);var u=t.x0,i=t.y0,o=t.x1-e,a=t.y1-e;o<u&&(u=o=(u+o)/2),a<i&&(i=a=(i+a)/2),t.x0=u,t.y0=i,t.x1=o,t.y1=a}}(r,i)),t&&u.eachBefore(I),u}return u.round=function(n){return arguments.length?(t=!!n,u):t},u.size=function(e){return arguments.length?(n=+e[0],r=+e[1],u):[n,r]},u.padding=function(n){return arguments.length?(e=+n,u):e},u},n.stratify=function(){var n=D,r=L;function e(e){var t,u,i,o,a,h,l,p=e.length,d=new Array(p),s={};for(u=0;u<p;++u)t=e[u],a=d[u]=new c(t),null!=(h=n(t,u,e))&&(h+="")&&(s[l=j+(a.id=h)]=l in s?T:a);for(u=0;u<p;++u)if(a=d[u],null!=(h=r(e[u],u,e))&&(h+="")){if(!(o=s[j+h]))throw new Error("missing: "+h);if(o===T)throw new Error("ambiguous: "+h);o.children?o.children.push(a):o.children=[a],a.parent=o}else{if(i)throw new Error("multiple roots");i=a}if(!i)throw new Error("no root");if(i.parent=R,i.eachBefore(function(n){n.depth=n.parent.depth+1,--p}).eachBefore(f),i.parent=null,p>0)throw new Error("cycle");return i}return e.id=function(r){return arguments.length?(n=M(r),e):n},e.parentId=function(n){return arguments.length?(r=M(n),e):r},e},n.tree=function(){var n=P,r=1,e=1,t=null;function u(u){var f=function(n){for(var r,e,t,u,i,o=new H(n,0),a=[o];r=a.pop();)if(t=r._.children)for(r.children=new Array(i=t.length),u=i-1;u>=0;--u)a.push(e=r.children[u]=new H(t[u],u)),e.parent=r;return(o.parent=new H(null,0)).children=[o],o}(u);if(f.eachAfter(i),f.parent.m=-f.z,f.eachBefore(o),t)u.eachBefore(a);else{var c=u,h=u,l=u;u.eachBefore(function(n){n.x<c.x&&(c=n),n.x>h.x&&(h=n),n.depth>l.depth&&(l=n)});var p=c===h?1:n(c,h)/2,d=p-c.x,s=r/(h.x+p+d),v=e/(l.depth||1);u.eachBefore(function(n){n.x=(n.x+d)*s,n.y=n.depth*v})}return u}function i(r){var e=r.children,t=r.parent.children,u=r.i?t[r.i-1]:null;if(e){!function(n){for(var r,e=0,t=0,u=n.children,i=u.length;--i>=0;)(r=u[i]).z+=e,r.m+=e,e+=r.s+(t+=r.c)}(r);var i=(e[0].z+e[e.length-1].z)/2;u?(r.z=u.z+n(r._,u._),r.m=r.z-i):r.z=i}else u&&(r.z=u.z+n(r._,u._));r.parent.A=function(r,e,t){if(e){for(var u,i=r,o=r,a=e,f=i.parent.children[0],c=i.m,h=o.m,l=a.m,p=f.m;a=C(a),i=$(i),a&&i;)f=$(f),(o=C(o)).a=r,(u=a.z+l-i.z-c+n(a._,i._))>0&&(F(G(a,r,t),r,u),c+=u,h+=u),l+=a.m,c+=i.m,p+=f.m,h+=o.m;a&&!C(o)&&(o.t=a,o.m+=l-h),i&&!$(f)&&(f.t=i,f.m+=c-p,t=r)}return t}(r,u,r.parent.A||t[0])}function o(n){n._.x=n.z+n.parent.m,n.m+=n.parent.m}function a(n){n.x*=r,n.y=n.depth*e}return u.separation=function(r){return arguments.length?(n=r,u):n},u.size=function(n){return arguments.length?(t=!1,r=+n[0],e=+n[1],u):t?null:[r,e]},u.nodeSize=function(n){return arguments.length?(t=!0,r=+n[0],e=+n[1],u):t?[r,e]:null},u},n.treemap=function(){var n=Q,r=!1,e=1,t=1,u=[0],i=A,o=A,a=A,f=A,c=A;function h(n){return n.x0=n.y0=0,n.x1=e,n.y1=t,n.eachBefore(l),u=[0],r&&n.eachBefore(I),n}function l(r){var e=u[r.depth],t=r.x0+e,h=r.y0+e,l=r.x1-e,p=r.y1-e;l<t&&(t=l=(t+l)/2),p<h&&(h=p=(h+p)/2),r.x0=t,r.y0=h,r.x1=l,r.y1=p,r.children&&(e=u[r.depth+1]=i(r)/2,t+=c(r)-e,h+=o(r)-e,l-=a(r)-e,p-=f(r)-e,l<t&&(t=l=(t+l)/2),p<h&&(h=p=(h+p)/2),n(r,t,h,l,p))}return h.round=function(n){return arguments.length?(r=!!n,h):r},h.size=function(n){return arguments.length?(e=+n[0],t=+n[1],h):[e,t]},h.tile=function(r){return arguments.length?(n=M(r),h):n},h.padding=function(n){return arguments.length?h.paddingInner(n).paddingOuter(n):h.paddingInner()},h.paddingInner=function(n){return arguments.length?(i="function"==typeof n?n:q(+n),h):i},h.paddingOuter=function(n){return arguments.length?h.paddingTop(n).paddingRight(n).paddingBottom(n).paddingLeft(n):h.paddingTop()},h.paddingTop=function(n){return arguments.length?(o="function"==typeof n?n:q(+n),h):o},h.paddingRight=function(n){return arguments.length?(a="function"==typeof n?n:q(+n),h):a},h.paddingBottom=function(n){return arguments.length?(f="function"==typeof n?n:q(+n),h):f},h.paddingLeft=function(n){return arguments.length?(c="function"==typeof n?n:q(+n),h):c},h},n.treemapBinary=function(n,r,e,t,u){var i,o,a=n.children,f=a.length,c=new Array(f+1);for(c[0]=o=i=0;i<f;++i)c[i+1]=o+=a[i].value;!function n(r,e,t,u,i,o,f){if(r>=e-1){var h=a[r];return h.x0=u,h.y0=i,h.x1=o,void(h.y1=f)}for(var l=c[r],p=t/2+l,d=r+1,s=e-1;d<s;){var v=d+s>>>1;c[v]<p?d=v+1:s=v}p-c[d-1]<c[d]-p&&r+1<d&&--d;var x=c[d]-l,y=t-x;if(o-u>f-i){var g=(u*y+o*x)/t;n(r,d,x,u,i,g,f),n(d,e,y,g,i,o,f)}else{var m=(i*y+f*x)/t;n(r,d,x,u,i,o,m),n(d,e,y,u,m,o,f)}}(0,f,n.value,r,e,t,u)},n.treemapDice=O,n.treemapSlice=J,n.treemapSliceDice=function(n,r,e,t,u){(1&n.depth?J:O)(n,r,e,t,u)},n.treemapSquarify=Q,n.treemapResquarify=U,Object.defineProperty(n,"__esModule",{value:!0})});

},{}],36:[function(require,module,exports){
!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("d3-color")):"function"==typeof define&&define.amd?define(["exports","d3-color"],n):n(t.d3=t.d3||{},t.d3)}(this,function(t,n){"use strict";function r(t,n,r,e,o){var a=t*t,u=a*t;return((1-3*t+3*a-u)*n+(4-6*a+3*u)*r+(1+3*t+3*a-3*u)*e+u*o)/6}var e=function(t){var n=t.length-1;return function(e){var o=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),a=t[o],u=t[o+1],i=o>0?t[o-1]:2*a-u,l=o<n-1?t[o+2]:2*u-a;return r((e-o/n)*n,i,a,u,l)}},o=function(t){var n=t.length;return function(e){var o=Math.floor(((e%=1)<0?++e:e)*n),a=t[(o+n-1)%n],u=t[o%n],i=t[(o+1)%n],l=t[(o+2)%n];return r((e-o/n)*n,a,u,i,l)}},a=function(t){return function(){return t}};function u(t,n){return function(r){return t+r*n}}function i(t,n){var r=n-t;return r?u(t,r>180||r<-180?r-360*Math.round(r/360):r):a(isNaN(t)?n:t)}function l(t){return 1==(t=+t)?c:function(n,r){return r-n?function(t,n,r){return t=Math.pow(t,r),n=Math.pow(n,r)-t,r=1/r,function(e){return Math.pow(t+e*n,r)}}(n,r,t):a(isNaN(n)?r:n)}}function c(t,n){var r=n-t;return r?u(t,r):a(isNaN(t)?n:t)}var f=function t(r){var e=l(r);function o(t,r){var o=e((t=n.rgb(t)).r,(r=n.rgb(r)).r),a=e(t.g,r.g),u=e(t.b,r.b),i=c(t.opacity,r.opacity);return function(n){return t.r=o(n),t.g=a(n),t.b=u(n),t.opacity=i(n),t+""}}return o.gamma=t,o}(1);function s(t){return function(r){var e,o,a=r.length,u=new Array(a),i=new Array(a),l=new Array(a);for(e=0;e<a;++e)o=n.rgb(r[e]),u[e]=o.r||0,i[e]=o.g||0,l[e]=o.b||0;return u=t(u),i=t(i),l=t(l),o.opacity=1,function(t){return o.r=u(t),o.g=i(t),o.b=l(t),o+""}}}var p=s(e),h=s(o),v=function(t,n){var r,e=n?n.length:0,o=t?Math.min(e,t.length):0,a=new Array(o),u=new Array(e);for(r=0;r<o;++r)a[r]=N(t[r],n[r]);for(;r<e;++r)u[r]=n[r];return function(t){for(r=0;r<o;++r)u[r]=a[r](t);return u}},g=function(t,n){var r=new Date;return n-=t=+t,function(e){return r.setTime(t+n*e),r}},d=function(t,n){return n-=t=+t,function(r){return t+n*r}},y=function(t,n){var r,e={},o={};for(r in null!==t&&"object"==typeof t||(t={}),null!==n&&"object"==typeof n||(n={}),n)r in t?e[r]=N(t[r],n[r]):o[r]=n[r];return function(t){for(r in e)o[r]=e[r](t);return o}},b=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,x=new RegExp(b.source,"g");var m,M,w,X,A=function(t,n){var r,e,o,a=b.lastIndex=x.lastIndex=0,u=-1,i=[],l=[];for(t+="",n+="";(r=b.exec(t))&&(e=x.exec(n));)(o=e.index)>a&&(o=n.slice(a,o),i[u]?i[u]+=o:i[++u]=o),(r=r[0])===(e=e[0])?i[u]?i[u]+=e:i[++u]=e:(i[++u]=null,l.push({i:u,x:d(r,e)})),a=x.lastIndex;return a<n.length&&(o=n.slice(a),i[u]?i[u]+=o:i[++u]=o),i.length<2?l[0]?function(t){return function(n){return t(n)+""}}(l[0].x):function(t){return function(){return t}}(n):(n=l.length,function(t){for(var r,e=0;e<n;++e)i[(r=l[e]).i]=r.x(t);return i.join("")})},N=function(t,r){var e,o=typeof r;return null==r||"boolean"===o?a(r):("number"===o?d:"string"===o?(e=n.color(r))?(r=e,f):A:r instanceof n.color?f:r instanceof Date?g:Array.isArray(r)?v:"function"!=typeof r.valueOf&&"function"!=typeof r.toString||isNaN(r)?y:d)(t,r)},C=180/Math.PI,Y={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},j=function(t,n,r,e,o,a){var u,i,l;return(u=Math.sqrt(t*t+n*n))&&(t/=u,n/=u),(l=t*r+n*e)&&(r-=t*l,e-=n*l),(i=Math.sqrt(r*r+e*e))&&(r/=i,e/=i,l/=i),t*e<n*r&&(t=-t,n=-n,l=-l,u=-u),{translateX:o,translateY:a,rotate:Math.atan2(n,t)*C,skewX:Math.atan(l)*C,scaleX:u,scaleY:i}};function q(t,n,r,e){function o(t){return t.length?t.pop()+" ":""}return function(a,u){var i=[],l=[];return a=t(a),u=t(u),function(t,e,o,a,u,i){if(t!==o||e!==a){var l=u.push("translate(",null,n,null,r);i.push({i:l-4,x:d(t,o)},{i:l-2,x:d(e,a)})}else(o||a)&&u.push("translate("+o+n+a+r)}(a.translateX,a.translateY,u.translateX,u.translateY,i,l),function(t,n,r,a){t!==n?(t-n>180?n+=360:n-t>180&&(t+=360),a.push({i:r.push(o(r)+"rotate(",null,e)-2,x:d(t,n)})):n&&r.push(o(r)+"rotate("+n+e)}(a.rotate,u.rotate,i,l),function(t,n,r,a){t!==n?a.push({i:r.push(o(r)+"skewX(",null,e)-2,x:d(t,n)}):n&&r.push(o(r)+"skewX("+n+e)}(a.skewX,u.skewX,i,l),function(t,n,r,e,a,u){if(t!==r||n!==e){var i=a.push(o(a)+"scale(",null,",",null,")");u.push({i:i-4,x:d(t,r)},{i:i-2,x:d(n,e)})}else 1===r&&1===e||a.push(o(a)+"scale("+r+","+e+")")}(a.scaleX,a.scaleY,u.scaleX,u.scaleY,i,l),a=u=null,function(t){for(var n,r=-1,e=l.length;++r<e;)i[(n=l[r]).i]=n.x(t);return i.join("")}}}var k=q(function(t){return"none"===t?Y:(m||(m=document.createElement("DIV"),M=document.documentElement,w=document.defaultView),m.style.transform=t,t=w.getComputedStyle(M.appendChild(m),null).getPropertyValue("transform"),M.removeChild(m),t=t.slice(7,-1).split(","),j(+t[0],+t[1],+t[2],+t[3],+t[4],+t[5]))},"px, ","px)","deg)"),R=q(function(t){return null==t?Y:(X||(X=document.createElementNS("http://www.w3.org/2000/svg","g")),X.setAttribute("transform",t),(t=X.transform.baseVal.consolidate())?(t=t.matrix,j(t.a,t.b,t.c,t.d,t.e,t.f)):Y)},", ",")",")"),S=Math.SQRT2;function E(t){return((t=Math.exp(t))+1/t)/2}function I(t){return function(r,e){var o=t((r=n.hsl(r)).h,(e=n.hsl(e)).h),a=c(r.s,e.s),u=c(r.l,e.l),i=c(r.opacity,e.opacity);return function(t){return r.h=o(t),r.s=a(t),r.l=u(t),r.opacity=i(t),r+""}}}var B=I(i),D=I(c);function H(t){return function(r,e){var o=t((r=n.hcl(r)).h,(e=n.hcl(e)).h),a=c(r.c,e.c),u=c(r.l,e.l),i=c(r.opacity,e.opacity);return function(t){return r.h=o(t),r.c=a(t),r.l=u(t),r.opacity=i(t),r+""}}}var L=H(i),T=H(c);function V(t){return function r(e){function o(r,o){var a=t((r=n.cubehelix(r)).h,(o=n.cubehelix(o)).h),u=c(r.s,o.s),i=c(r.l,o.l),l=c(r.opacity,o.opacity);return function(t){return r.h=a(t),r.s=u(t),r.l=i(Math.pow(t,e)),r.opacity=l(t),r+""}}return e=+e,o.gamma=r,o}(1)}var O=V(i),P=V(c);t.interpolate=N,t.interpolateArray=v,t.interpolateBasis=e,t.interpolateBasisClosed=o,t.interpolateDate=g,t.interpolateNumber=d,t.interpolateObject=y,t.interpolateRound=function(t,n){return n-=t=+t,function(r){return Math.round(t+n*r)}},t.interpolateString=A,t.interpolateTransformCss=k,t.interpolateTransformSvg=R,t.interpolateZoom=function(t,n){var r,e,o=t[0],a=t[1],u=t[2],i=n[0],l=n[1],c=n[2],f=i-o,s=l-a,p=f*f+s*s;if(p<1e-12)e=Math.log(c/u)/S,r=function(t){return[o+t*f,a+t*s,u*Math.exp(S*t*e)]};else{var h=Math.sqrt(p),v=(c*c-u*u+4*p)/(2*u*2*h),g=(c*c-u*u-4*p)/(2*c*2*h),d=Math.log(Math.sqrt(v*v+1)-v),y=Math.log(Math.sqrt(g*g+1)-g);e=(y-d)/S,r=function(t){var n,r=t*e,i=E(d),l=u/(2*h)*(i*(n=S*r+d,((n=Math.exp(2*n))-1)/(n+1))-function(t){return((t=Math.exp(t))-1/t)/2}(d));return[o+l*f,a+l*s,u*i/E(S*r+d)]}}return r.duration=1e3*e,r},t.interpolateRgb=f,t.interpolateRgbBasis=p,t.interpolateRgbBasisClosed=h,t.interpolateHsl=B,t.interpolateHslLong=D,t.interpolateLab=function(t,r){var e=c((t=n.lab(t)).l,(r=n.lab(r)).l),o=c(t.a,r.a),a=c(t.b,r.b),u=c(t.opacity,r.opacity);return function(n){return t.l=e(n),t.a=o(n),t.b=a(n),t.opacity=u(n),t+""}},t.interpolateHcl=L,t.interpolateHclLong=T,t.interpolateCubehelix=O,t.interpolateCubehelixLong=P,t.piecewise=function(t,n){for(var r=0,e=n.length-1,o=n[0],a=new Array(e<0?0:e);r<e;)a[r]=t(o,o=n[++r]);return function(t){var n=Math.max(0,Math.min(e-1,Math.floor(t*=e)));return a[n](t-n)}},t.quantize=function(t,n){for(var r=new Array(n),e=0;e<n;++e)r[e]=t(e/(n-1));return r},Object.defineProperty(t,"__esModule",{value:!0})});

},{"d3-color":25}],37:[function(require,module,exports){
!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?i(exports):"function"==typeof define&&define.amd?define(["exports"],i):i(t.d3=t.d3||{})}(this,function(t){"use strict";var i=Math.PI,s=2*i,h=s-1e-6;function _(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function e(){return new _}_.prototype=e.prototype={constructor:_,moveTo:function(t,i){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+i)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(t,i){this._+="L"+(this._x1=+t)+","+(this._y1=+i)},quadraticCurveTo:function(t,i,s,h){this._+="Q"+ +t+","+ +i+","+(this._x1=+s)+","+(this._y1=+h)},bezierCurveTo:function(t,i,s,h,_,e){this._+="C"+ +t+","+ +i+","+ +s+","+ +h+","+(this._x1=+_)+","+(this._y1=+e)},arcTo:function(t,s,h,_,e){t=+t,s=+s,h=+h,_=+_,e=+e;var n=this._x1,o=this._y1,r=h-t,a=_-s,u=n-t,c=o-s,f=u*u+c*c;if(e<0)throw new Error("negative radius: "+e);if(null===this._x1)this._+="M"+(this._x1=t)+","+(this._y1=s);else if(f>1e-6)if(Math.abs(c*r-a*u)>1e-6&&e){var x=h-n,y=_-o,M=r*r+a*a,l=x*x+y*y,d=Math.sqrt(M),p=Math.sqrt(f),v=e*Math.tan((i-Math.acos((M+f-l)/(2*d*p)))/2),b=v/p,w=v/d;Math.abs(b-1)>1e-6&&(this._+="L"+(t+b*u)+","+(s+b*c)),this._+="A"+e+","+e+",0,0,"+ +(c*x>u*y)+","+(this._x1=t+w*r)+","+(this._y1=s+w*a)}else this._+="L"+(this._x1=t)+","+(this._y1=s);else;},arc:function(t,_,e,n,o,r){t=+t,_=+_;var a=(e=+e)*Math.cos(n),u=e*Math.sin(n),c=t+a,f=_+u,x=1^r,y=r?n-o:o-n;if(e<0)throw new Error("negative radius: "+e);null===this._x1?this._+="M"+c+","+f:(Math.abs(this._x1-c)>1e-6||Math.abs(this._y1-f)>1e-6)&&(this._+="L"+c+","+f),e&&(y<0&&(y=y%s+s),y>h?this._+="A"+e+","+e+",0,1,"+x+","+(t-a)+","+(_-u)+"A"+e+","+e+",0,1,"+x+","+(this._x1=c)+","+(this._y1=f):y>1e-6&&(this._+="A"+e+","+e+",0,"+ +(y>=i)+","+x+","+(this._x1=t+e*Math.cos(o))+","+(this._y1=_+e*Math.sin(o))))},rect:function(t,i,s,h){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+i)+"h"+ +s+"v"+ +h+"h"+-s+"Z"},toString:function(){return this._}},t.path=e,Object.defineProperty(t,"__esModule",{value:!0})});

},{}],38:[function(require,module,exports){
!function(n,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r(n.d3=n.d3||{})}(this,function(n){"use strict";var r=function(n,r,e){return(r[0]-n[0])*(e[1]-n[1])-(r[1]-n[1])*(e[0]-n[0])};function e(n,r){return n[0]-r[0]||n[1]-r[1]}function t(n){for(var e=n.length,t=[0,1],o=2,f=2;f<e;++f){for(;o>1&&r(n[t[o-2]],n[t[o-1]],n[f])<=0;)--o;t[o++]=f}return t.slice(0,o)}n.polygonArea=function(n){for(var r,e=-1,t=n.length,o=n[t-1],f=0;++e<t;)r=o,o=n[e],f+=r[1]*o[0]-r[0]*o[1];return f/2},n.polygonCentroid=function(n){for(var r,e,t=-1,o=n.length,f=0,u=0,l=n[o-1],i=0;++t<o;)r=l,l=n[t],i+=e=r[0]*l[1]-l[0]*r[1],f+=(r[0]+l[0])*e,u+=(r[1]+l[1])*e;return[f/(i*=3),u/i]},n.polygonHull=function(n){if((o=n.length)<3)return null;var r,o,f=new Array(o),u=new Array(o);for(r=0;r<o;++r)f[r]=[+n[r][0],+n[r][1],r];for(f.sort(e),r=0;r<o;++r)u[r]=[f[r][0],-f[r][1]];var l=t(f),i=t(u),g=i[0]===l[0],a=i[i.length-1]===l[l.length-1],c=[];for(r=l.length-1;r>=0;--r)c.push(n[f[l[r]][2]]);for(r=+g;r<i.length-a;++r)c.push(n[f[i[r]][2]]);return c},n.polygonContains=function(n,r){for(var e,t,o=n.length,f=n[o-1],u=r[0],l=r[1],i=f[0],g=f[1],a=!1,c=0;c<o;++c)e=(f=n[c])[0],(t=f[1])>l!=g>l&&u<(i-e)*(l-t)/(g-t)+e&&(a=!a),i=e,g=t;return a},n.polygonLength=function(n){for(var r,e,t=-1,o=n.length,f=n[o-1],u=f[0],l=f[1],i=0;++t<o;)r=u,e=l,r-=u=(f=n[t])[0],e-=l=f[1],i+=Math.sqrt(r*r+e*e);return i},Object.defineProperty(n,"__esModule",{value:!0})});

},{}],39:[function(require,module,exports){
!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?i(exports):"function"==typeof define&&define.amd?define(["exports"],i):i(t.d3=t.d3||{})}(this,function(t){"use strict";function i(t,i,r,e){if(isNaN(i)||isNaN(r))return t;var n,h,s,o,a,u,l,_,f,y=t._root,x={data:e},c=t._x0,d=t._y0,v=t._x1,p=t._y1;if(!y)return t._root=x,t;for(;y.length;)if((u=i>=(h=(c+v)/2))?c=h:v=h,(l=r>=(s=(d+p)/2))?d=s:p=s,n=y,!(y=y[_=l<<1|u]))return n[_]=x,t;if(o=+t._x.call(null,y.data),a=+t._y.call(null,y.data),i===o&&r===a)return x.next=y,n?n[_]=x:t._root=x,t;do{n=n?n[_]=new Array(4):t._root=new Array(4),(u=i>=(h=(c+v)/2))?c=h:v=h,(l=r>=(s=(d+p)/2))?d=s:p=s}while((_=l<<1|u)==(f=(a>=s)<<1|o>=h));return n[f]=y,n[_]=x,t}var r=function(t,i,r,e,n){this.node=t,this.x0=i,this.y0=r,this.x1=e,this.y1=n};function e(t){return t[0]}function n(t){return t[1]}function h(t,i,r){var h=new s(null==i?e:i,null==r?n:r,NaN,NaN,NaN,NaN);return null==t?h:h.addAll(t)}function s(t,i,r,e,n,h){this._x=t,this._y=i,this._x0=r,this._y0=e,this._x1=n,this._y1=h,this._root=void 0}function o(t){for(var i={data:t.data},r=i;t=t.next;)r=r.next={data:t.data};return i}var a=h.prototype=s.prototype;a.copy=function(){var t,i,r=new s(this._x,this._y,this._x0,this._y0,this._x1,this._y1),e=this._root;if(!e)return r;if(!e.length)return r._root=o(e),r;for(t=[{source:e,target:r._root=new Array(4)}];e=t.pop();)for(var n=0;n<4;++n)(i=e.source[n])&&(i.length?t.push({source:i,target:e.target[n]=new Array(4)}):e.target[n]=o(i));return r},a.add=function(t){var r=+this._x.call(null,t),e=+this._y.call(null,t);return i(this.cover(r,e),r,e,t)},a.addAll=function(t){var r,e,n,h,s=t.length,o=new Array(s),a=new Array(s),u=1/0,l=1/0,_=-1/0,f=-1/0;for(e=0;e<s;++e)isNaN(n=+this._x.call(null,r=t[e]))||isNaN(h=+this._y.call(null,r))||(o[e]=n,a[e]=h,n<u&&(u=n),n>_&&(_=n),h<l&&(l=h),h>f&&(f=h));for(_<u&&(u=this._x0,_=this._x1),f<l&&(l=this._y0,f=this._y1),this.cover(u,l).cover(_,f),e=0;e<s;++e)i(this,o[e],a[e],t[e]);return this},a.cover=function(t,i){if(isNaN(t=+t)||isNaN(i=+i))return this;var r=this._x0,e=this._y0,n=this._x1,h=this._y1;if(isNaN(r))n=(r=Math.floor(t))+1,h=(e=Math.floor(i))+1;else{if(!(r>t||t>n||e>i||i>h))return this;var s,o,a=n-r,u=this._root;switch(o=(i<(e+h)/2)<<1|t<(r+n)/2){case 0:do{(s=new Array(4))[o]=u,u=s}while(h=e+(a*=2),t>(n=r+a)||i>h);break;case 1:do{(s=new Array(4))[o]=u,u=s}while(h=e+(a*=2),(r=n-a)>t||i>h);break;case 2:do{(s=new Array(4))[o]=u,u=s}while(e=h-(a*=2),t>(n=r+a)||e>i);break;case 3:do{(s=new Array(4))[o]=u,u=s}while(e=h-(a*=2),(r=n-a)>t||e>i)}this._root&&this._root.length&&(this._root=u)}return this._x0=r,this._y0=e,this._x1=n,this._y1=h,this},a.data=function(){var t=[];return this.visit(function(i){if(!i.length)do{t.push(i.data)}while(i=i.next)}),t},a.extent=function(t){return arguments.length?this.cover(+t[0][0],+t[0][1]).cover(+t[1][0],+t[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},a.find=function(t,i,e){var n,h,s,o,a,u,l,_=this._x0,f=this._y0,y=this._x1,x=this._y1,c=[],d=this._root;for(d&&c.push(new r(d,_,f,y,x)),null==e?e=1/0:(_=t-e,f=i-e,y=t+e,x=i+e,e*=e);u=c.pop();)if(!(!(d=u.node)||(h=u.x0)>y||(s=u.y0)>x||(o=u.x1)<_||(a=u.y1)<f))if(d.length){var v=(h+o)/2,p=(s+a)/2;c.push(new r(d[3],v,p,o,a),new r(d[2],h,p,v,a),new r(d[1],v,s,o,p),new r(d[0],h,s,v,p)),(l=(i>=p)<<1|t>=v)&&(u=c[c.length-1],c[c.length-1]=c[c.length-1-l],c[c.length-1-l]=u)}else{var w=t-+this._x.call(null,d.data),N=i-+this._y.call(null,d.data),g=w*w+N*N;if(g<e){var A=Math.sqrt(e=g);_=t-A,f=i-A,y=t+A,x=i+A,n=d.data}}return n},a.remove=function(t){if(isNaN(h=+this._x.call(null,t))||isNaN(s=+this._y.call(null,t)))return this;var i,r,e,n,h,s,o,a,u,l,_,f,y=this._root,x=this._x0,c=this._y0,d=this._x1,v=this._y1;if(!y)return this;if(y.length)for(;;){if((u=h>=(o=(x+d)/2))?x=o:d=o,(l=s>=(a=(c+v)/2))?c=a:v=a,i=y,!(y=y[_=l<<1|u]))return this;if(!y.length)break;(i[_+1&3]||i[_+2&3]||i[_+3&3])&&(r=i,f=_)}for(;y.data!==t;)if(e=y,!(y=y.next))return this;return(n=y.next)&&delete y.next,e?(n?e.next=n:delete e.next,this):i?(n?i[_]=n:delete i[_],(y=i[0]||i[1]||i[2]||i[3])&&y===(i[3]||i[2]||i[1]||i[0])&&!y.length&&(r?r[f]=y:this._root=y),this):(this._root=n,this)},a.removeAll=function(t){for(var i=0,r=t.length;i<r;++i)this.remove(t[i]);return this},a.root=function(){return this._root},a.size=function(){var t=0;return this.visit(function(i){if(!i.length)do{++t}while(i=i.next)}),t},a.visit=function(t){var i,e,n,h,s,o,a=[],u=this._root;for(u&&a.push(new r(u,this._x0,this._y0,this._x1,this._y1));i=a.pop();)if(!t(u=i.node,n=i.x0,h=i.y0,s=i.x1,o=i.y1)&&u.length){var l=(n+s)/2,_=(h+o)/2;(e=u[3])&&a.push(new r(e,l,_,s,o)),(e=u[2])&&a.push(new r(e,n,_,l,o)),(e=u[1])&&a.push(new r(e,l,h,s,_)),(e=u[0])&&a.push(new r(e,n,h,l,_))}return this},a.visitAfter=function(t){var i,e=[],n=[];for(this._root&&e.push(new r(this._root,this._x0,this._y0,this._x1,this._y1));i=e.pop();){var h=i.node;if(h.length){var s,o=i.x0,a=i.y0,u=i.x1,l=i.y1,_=(o+u)/2,f=(a+l)/2;(s=h[0])&&e.push(new r(s,o,a,_,f)),(s=h[1])&&e.push(new r(s,_,a,u,f)),(s=h[2])&&e.push(new r(s,o,f,_,l)),(s=h[3])&&e.push(new r(s,_,f,u,l))}n.push(i)}for(;i=n.pop();)t(i.node,i.x0,i.y0,i.x1,i.y1);return this},a.x=function(t){return arguments.length?(this._x=t,this):this._x},a.y=function(t){return arguments.length?(this._y=t,this):this._y},t.quadtree=h,Object.defineProperty(t,"__esModule",{value:!0})});

},{}],40:[function(require,module,exports){
!function(n,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r(n.d3=n.d3||{})}(this,function(n){"use strict";var r=function(){return Math.random()},t=function n(r){function t(n,t){return n=null==n?0:+n,t=null==t?1:+t,1===arguments.length?(t=n,n=0):t-=n,function(){return r()*t+n}}return t.source=n,t}(r),u=function n(r){function t(n,t){var u,e;return n=null==n?0:+n,t=null==t?1:+t,function(){var o;if(null!=u)o=u,u=null;else do{u=2*r()-1,o=2*r()-1,e=u*u+o*o}while(!e||e>1);return n+t*o*Math.sqrt(-2*Math.log(e)/e)}}return t.source=n,t}(r),e=function n(r){function t(){var n=u.source(r).apply(this,arguments);return function(){return Math.exp(n())}}return t.source=n,t}(r),o=function n(r){function t(n){return function(){for(var t=0,u=0;u<n;++u)t+=r();return t}}return t.source=n,t}(r),i=function n(r){function t(n){var t=o.source(r)(n);return function(){return t()/n}}return t.source=n,t}(r),c=function n(r){function t(n){return function(){return-Math.log(1-r())/n}}return t.source=n,t}(r);n.randomUniform=t,n.randomNormal=u,n.randomLogNormal=e,n.randomBates=i,n.randomIrwinHall=o,n.randomExponential=c,Object.defineProperty(n,"__esModule",{value:!0})});

},{}],41:[function(require,module,exports){
!function(f,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("d3-interpolate"),require("d3-color")):"function"==typeof define&&define.amd?define(["exports","d3-interpolate","d3-color"],e):e(f.d3=f.d3||{},f.d3,f.d3)}(this,function(f,e,d){"use strict";function c(f){for(var e=f.length/6|0,d=new Array(e),c=0;c<e;)d[c]="#"+f.slice(6*c,6*++c);return d}var a=c("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),b=c("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"),r=c("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"),t=c("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"),n=c("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"),o=c("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"),l=c("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"),i=c("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"),p=c("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f");function m(f){return e.interpolateRgbBasis(f[f.length-1])}var s=new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(c),u=m(s),h=new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(c),y=m(h),w=new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(c),A=m(w),P=new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(c),B=m(P),G=new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(c),R=m(G),x=new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(c),Y=m(x),g=new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(c),M=m(g),O=new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(c),v=m(O),C=new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(c),S=m(C),I=new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(c),L=m(I),j=new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(c),q=m(j),D=new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(c),_=m(D),k=new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(c),V=m(k),W=new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(c),z=m(W),E=new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(c),F=m(E),H=new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(c),J=m(H),K=new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(c),N=m(K),Q=new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(c),T=m(Q),U=new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(c),X=m(U),Z=new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(c),$=m(Z),ff=new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(c),ef=m(ff),df=new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(c),cf=m(df),af=new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(c),bf=m(af),rf=new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(c),tf=m(rf),nf=new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(c),of=m(nf),lf=new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(c),pf=m(lf),mf=new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(c),sf=m(mf),uf=e.interpolateCubehelixLong(d.cubehelix(300,.5,0),d.cubehelix(-240,.5,1)),hf=e.interpolateCubehelixLong(d.cubehelix(-100,.75,.35),d.cubehelix(80,1.5,.8)),yf=e.interpolateCubehelixLong(d.cubehelix(260,.75,.35),d.cubehelix(80,1.5,.8)),wf=d.cubehelix();var Af=d.rgb(),Pf=Math.PI/3,Bf=2*Math.PI/3;function Gf(f){var e=f.length;return function(d){return f[Math.max(0,Math.min(e-1,Math.floor(d*e)))]}}var Rf=Gf(c("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")),xf=Gf(c("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),Yf=Gf(c("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),gf=Gf(c("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));f.schemeCategory10=a,f.schemeAccent=b,f.schemeDark2=r,f.schemePaired=t,f.schemePastel1=n,f.schemePastel2=o,f.schemeSet1=l,f.schemeSet2=i,f.schemeSet3=p,f.interpolateBrBG=u,f.schemeBrBG=s,f.interpolatePRGn=y,f.schemePRGn=h,f.interpolatePiYG=A,f.schemePiYG=w,f.interpolatePuOr=B,f.schemePuOr=P,f.interpolateRdBu=R,f.schemeRdBu=G,f.interpolateRdGy=Y,f.schemeRdGy=x,f.interpolateRdYlBu=M,f.schemeRdYlBu=g,f.interpolateRdYlGn=v,f.schemeRdYlGn=O,f.interpolateSpectral=S,f.schemeSpectral=C,f.interpolateBuGn=L,f.schemeBuGn=I,f.interpolateBuPu=q,f.schemeBuPu=j,f.interpolateGnBu=_,f.schemeGnBu=D,f.interpolateOrRd=V,f.schemeOrRd=k,f.interpolatePuBuGn=z,f.schemePuBuGn=W,f.interpolatePuBu=F,f.schemePuBu=E,f.interpolatePuRd=J,f.schemePuRd=H,f.interpolateRdPu=N,f.schemeRdPu=K,f.interpolateYlGnBu=T,f.schemeYlGnBu=Q,f.interpolateYlGn=X,f.schemeYlGn=U,f.interpolateYlOrBr=$,f.schemeYlOrBr=Z,f.interpolateYlOrRd=ef,f.schemeYlOrRd=ff,f.interpolateBlues=cf,f.schemeBlues=df,f.interpolateGreens=bf,f.schemeGreens=af,f.interpolateGreys=tf,f.schemeGreys=rf,f.interpolatePurples=of,f.schemePurples=nf,f.interpolateReds=pf,f.schemeReds=lf,f.interpolateOranges=sf,f.schemeOranges=mf,f.interpolateCubehelixDefault=uf,f.interpolateRainbow=function(f){(f<0||f>1)&&(f-=Math.floor(f));var e=Math.abs(f-.5);return wf.h=360*f-100,wf.s=1.5-1.5*e,wf.l=.8-.9*e,wf+""},f.interpolateWarm=hf,f.interpolateCool=yf,f.interpolateSinebow=function(f){var e;return f=(.5-f)*Math.PI,Af.r=255*(e=Math.sin(f))*e,Af.g=255*(e=Math.sin(f+Pf))*e,Af.b=255*(e=Math.sin(f+Bf))*e,Af+""},f.interpolateViridis=Rf,f.interpolateMagma=xf,f.interpolateInferno=Yf,f.interpolatePlasma=gf,Object.defineProperty(f,"__esModule",{value:!0})});

},{"d3-color":25,"d3-interpolate":36}],42:[function(require,module,exports){
!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("d3-array"),require("d3-collection"),require("d3-interpolate"),require("d3-format"),require("d3-time"),require("d3-time-format")):"function"==typeof define&&define.amd?define(["exports","d3-array","d3-collection","d3-interpolate","d3-format","d3-time","d3-time-format"],t):t(n.d3=n.d3||{},n.d3,n.d3,n.d3,n.d3,n.d3,n.d3)}(this,function(n,t,e,r,i,u,o){"use strict";var a=Array.prototype,c=a.map,l=a.slice,f={name:"implicit"};function h(n){var t=e.map(),r=[],i=f;function u(e){var u=e+"",o=t.get(u);if(!o){if(i!==f)return i;t.set(u,o=r.push(e))}return n[(o-1)%n.length]}return n=null==n?[]:l.call(n),u.domain=function(n){if(!arguments.length)return r.slice();r=[],t=e.map();for(var i,o,a=-1,c=n.length;++a<c;)t.has(o=(i=n[a])+"")||t.set(o,r.push(i));return u},u.range=function(t){return arguments.length?(n=l.call(t),u):n.slice()},u.unknown=function(n){return arguments.length?(i=n,u):i},u.copy=function(){return h().domain(r).range(n).unknown(i)},u}function d(){var n,e,r=h().unknown(void 0),i=r.domain,u=r.range,o=[0,1],a=!1,c=0,l=0,f=.5;function s(){var r=i().length,h=o[1]<o[0],d=o[h-0],s=o[1-h];n=(s-d)/Math.max(1,r-c+2*l),a&&(n=Math.floor(n)),d+=(s-d-n*(r-c))*f,e=n*(1-c),a&&(d=Math.round(d),e=Math.round(e));var m=t.range(r).map(function(t){return d+n*t});return u(h?m.reverse():m)}return delete r.unknown,r.domain=function(n){return arguments.length?(i(n),s()):i()},r.range=function(n){return arguments.length?(o=[+n[0],+n[1]],s()):o.slice()},r.rangeRound=function(n){return o=[+n[0],+n[1]],a=!0,s()},r.bandwidth=function(){return e},r.step=function(){return n},r.round=function(n){return arguments.length?(a=!!n,s()):a},r.padding=function(n){return arguments.length?(c=l=Math.max(0,Math.min(1,n)),s()):c},r.paddingInner=function(n){return arguments.length?(c=Math.max(0,Math.min(1,n)),s()):c},r.paddingOuter=function(n){return arguments.length?(l=Math.max(0,Math.min(1,n)),s()):l},r.align=function(n){return arguments.length?(f=Math.max(0,Math.min(1,n)),s()):f},r.copy=function(){return d().domain(i()).range(o).round(a).paddingInner(c).paddingOuter(l).align(f)},s()}function s(n){return function(){return n}}function m(n){return+n}var g=[0,1];function p(n,t){return(t-=n=+n)?function(e){return(e-n)/t}:s(t)}function M(n,t,e,r){var i=n[0],u=n[1],o=t[0],a=t[1];return u<i?(i=e(u,i),o=r(a,o)):(i=e(i,u),o=r(o,a)),function(n){return o(i(n))}}function v(n,e,r,i){var u=Math.min(n.length,e.length)-1,o=new Array(u),a=new Array(u),c=-1;for(n[u]<n[0]&&(n=n.slice().reverse(),e=e.slice().reverse());++c<u;)o[c]=r(n[c],n[c+1]),a[c]=i(e[c],e[c+1]);return function(e){var r=t.bisect(n,e,1,u)-1;return a[r](o[r](e))}}function y(n,t){return t.domain(n.domain()).range(n.range()).interpolate(n.interpolate()).clamp(n.clamp())}function x(n,t){var e,i,u,o=g,a=g,f=r.interpolate,h=!1;function d(){return e=Math.min(o.length,a.length)>2?v:M,i=u=null,s}function s(t){return(i||(i=e(o,a,h?function(n){return function(t,e){var r=n(t=+t,e=+e);return function(n){return n<=t?0:n>=e?1:r(n)}}}(n):n,f)))(+t)}return s.invert=function(n){return(u||(u=e(a,o,p,h?function(n){return function(t,e){var r=n(t=+t,e=+e);return function(n){return n<=0?t:n>=1?e:r(n)}}}(t):t)))(+n)},s.domain=function(n){return arguments.length?(o=c.call(n,m),d()):o.slice()},s.range=function(n){return arguments.length?(a=l.call(n),d()):a.slice()},s.rangeRound=function(n){return a=l.call(n),f=r.interpolateRound,d()},s.clamp=function(n){return arguments.length?(h=!!n,d()):h},s.interpolate=function(n){return arguments.length?(f=n,d()):f},d()}function k(n){var e=n.domain;return n.ticks=function(n){var r=e();return t.ticks(r[0],r[r.length-1],null==n?10:n)},n.tickFormat=function(n,r){return function(n,e,r){var u,o=n[0],a=n[n.length-1],c=t.tickStep(o,a,null==e?10:e);switch((r=i.formatSpecifier(null==r?",f":r)).type){case"s":var l=Math.max(Math.abs(o),Math.abs(a));return null!=r.precision||isNaN(u=i.precisionPrefix(c,l))||(r.precision=u),i.formatPrefix(r,l);case"":case"e":case"g":case"p":case"r":null!=r.precision||isNaN(u=i.precisionRound(c,Math.max(Math.abs(o),Math.abs(a))))||(r.precision=u-("e"===r.type));break;case"f":case"%":null!=r.precision||isNaN(u=i.precisionFixed(c))||(r.precision=u-2*("%"===r.type))}return i.format(r)}(e(),n,r)},n.nice=function(r){null==r&&(r=10);var i,u=e(),o=0,a=u.length-1,c=u[o],l=u[a];return l<c&&(i=c,c=l,l=i,i=o,o=a,a=i),(i=t.tickIncrement(c,l,r))>0?(c=Math.floor(c/i)*i,l=Math.ceil(l/i)*i,i=t.tickIncrement(c,l,r)):i<0&&(c=Math.ceil(c*i)/i,l=Math.floor(l*i)/i,i=t.tickIncrement(c,l,r)),i>0?(u[o]=Math.floor(c/i)*i,u[a]=Math.ceil(l/i)*i,e(u)):i<0&&(u[o]=Math.ceil(c*i)/i,u[a]=Math.floor(l*i)/i,e(u)),n},n}function w(n,t){var e,r=0,i=(n=n.slice()).length-1,u=n[r],o=n[i];return o<u&&(e=r,r=i,i=e,e=u,u=o,o=e),n[r]=t.floor(u),n[i]=t.ceil(o),n}function b(n,t){return(t=Math.log(t/n))?function(e){return Math.log(e/n)/t}:s(t)}function N(n,t){return n<0?function(e){return-Math.pow(-t,e)*Math.pow(-n,1-e)}:function(e){return Math.pow(t,e)*Math.pow(n,1-e)}}function I(n){return isFinite(n)?+("1e"+n):n<0?0:n}function q(n){return 10===n?I:n===Math.E?Math.exp:function(t){return Math.pow(n,t)}}function D(n){return n===Math.E?Math.log:10===n&&Math.log10||2===n&&Math.log2||(n=Math.log(n),function(t){return Math.log(t)/n})}function O(n){return function(t){return-n(-t)}}function S(n,t){return n<0?-Math.pow(-n,t):Math.pow(n,t)}function F(){var n=1,t=x(function(t,e){return(e=S(e,n)-(t=S(t,n)))?function(r){return(S(r,n)-t)/e}:s(e)},function(t,e){return e=S(e,n)-(t=S(t,n)),function(r){return S(t+e*r,1/n)}}),e=t.domain;return t.exponent=function(t){return arguments.length?(n=+t,e(e())):n},t.copy=function(){return y(t,F().exponent(n))},k(t)}var A=1e3,E=60*A,P=60*E,R=24*P,T=7*R,L=30*R,U=365*R;function Y(n){return new Date(n)}function j(n){return n instanceof Date?+n:+new Date(+n)}function B(n,e,i,u,o,a,l,f,h){var d=x(p,r.interpolateNumber),s=d.invert,m=d.domain,g=h(".%L"),M=h(":%S"),v=h("%I:%M"),k=h("%I %p"),b=h("%a %d"),N=h("%b %d"),I=h("%B"),q=h("%Y"),D=[[l,1,A],[l,5,5*A],[l,15,15*A],[l,30,30*A],[a,1,E],[a,5,5*E],[a,15,15*E],[a,30,30*E],[o,1,P],[o,3,3*P],[o,6,6*P],[o,12,12*P],[u,1,R],[u,2,2*R],[i,1,T],[e,1,L],[e,3,3*L],[n,1,U]];function O(t){return(l(t)<t?g:a(t)<t?M:o(t)<t?v:u(t)<t?k:e(t)<t?i(t)<t?b:N:n(t)<t?I:q)(t)}function S(e,r,i,u){if(null==e&&(e=10),"number"==typeof e){var o=Math.abs(i-r)/e,a=t.bisector(function(n){return n[2]}).right(D,o);a===D.length?(u=t.tickStep(r/U,i/U,e),e=n):a?(u=(a=D[o/D[a-1][2]<D[a][2]/o?a-1:a])[1],e=a[0]):(u=Math.max(t.tickStep(r,i,e),1),e=f)}return null==u?e:e.every(u)}return d.invert=function(n){return new Date(s(n))},d.domain=function(n){return arguments.length?m(c.call(n,j)):m().map(Y)},d.ticks=function(n,t){var e,r=m(),i=r[0],u=r[r.length-1],o=u<i;return o&&(e=i,i=u,u=e),e=(e=S(n,i,u,t))?e.range(i,u+1):[],o?e.reverse():e},d.tickFormat=function(n,t){return null==t?O:h(t)},d.nice=function(n,t){var e=m();return(n=S(n,e[0],e[e.length-1],t))?m(w(e,n)):d},d.copy=function(){return y(d,B(n,e,i,u,o,a,l,f,h))},d}n.scaleBand=d,n.scalePoint=function(){return function n(t){var e=t.copy;return t.padding=t.paddingOuter,delete t.paddingInner,delete t.paddingOuter,t.copy=function(){return n(e())},t}(d().paddingInner(1))},n.scaleIdentity=function n(){var t=[0,1];function e(n){return+n}return e.invert=e,e.domain=e.range=function(n){return arguments.length?(t=c.call(n,m),e):t.slice()},e.copy=function(){return n().domain(t)},k(e)},n.scaleLinear=function n(){var t=x(p,r.interpolateNumber);return t.copy=function(){return y(t,n())},k(t)},n.scaleLog=function n(){var e=x(b,N).domain([1,10]),r=e.domain,u=10,o=D(10),a=q(10);function c(){return o=D(u),a=q(u),r()[0]<0&&(o=O(o),a=O(a)),e}return e.base=function(n){return arguments.length?(u=+n,c()):u},e.domain=function(n){return arguments.length?(r(n),c()):r()},e.ticks=function(n){var e,i=r(),c=i[0],l=i[i.length-1];(e=l<c)&&(s=c,c=l,l=s);var f,h,d,s=o(c),m=o(l),g=null==n?10:+n,p=[];if(!(u%1)&&m-s<g){if(s=Math.round(s)-1,m=Math.round(m)+1,c>0){for(;s<m;++s)for(h=1,f=a(s);h<u;++h)if(!((d=f*h)<c)){if(d>l)break;p.push(d)}}else for(;s<m;++s)for(h=u-1,f=a(s);h>=1;--h)if(!((d=f*h)<c)){if(d>l)break;p.push(d)}}else p=t.ticks(s,m,Math.min(m-s,g)).map(a);return e?p.reverse():p},e.tickFormat=function(n,t){if(null==t&&(t=10===u?".0e":","),"function"!=typeof t&&(t=i.format(t)),n===1/0)return t;null==n&&(n=10);var r=Math.max(1,u*n/e.ticks().length);return function(n){var e=n/a(Math.round(o(n)));return e*u<u-.5&&(e*=u),e<=r?t(n):""}},e.nice=function(){return r(w(r(),{floor:function(n){return a(Math.floor(o(n)))},ceil:function(n){return a(Math.ceil(o(n)))}}))},e.copy=function(){return y(e,n().base(u))},e},n.scaleOrdinal=h,n.scaleImplicit=f,n.scalePow=F,n.scaleSqrt=function(){return F().exponent(.5)},n.scaleQuantile=function n(){var e=[],r=[],i=[];function u(){var n=0,u=Math.max(1,r.length);for(i=new Array(u-1);++n<u;)i[n-1]=t.quantile(e,n/u);return o}function o(n){if(!isNaN(n=+n))return r[t.bisect(i,n)]}return o.invertExtent=function(n){var t=r.indexOf(n);return t<0?[NaN,NaN]:[t>0?i[t-1]:e[0],t<i.length?i[t]:e[e.length-1]]},o.domain=function(n){if(!arguments.length)return e.slice();e=[];for(var r,i=0,o=n.length;i<o;++i)null==(r=n[i])||isNaN(r=+r)||e.push(r);return e.sort(t.ascending),u()},o.range=function(n){return arguments.length?(r=l.call(n),u()):r.slice()},o.quantiles=function(){return i.slice()},o.copy=function(){return n().domain(e).range(r)},o},n.scaleQuantize=function n(){var e=0,r=1,i=1,u=[.5],o=[0,1];function a(n){if(n<=n)return o[t.bisect(u,n,0,i)]}function c(){var n=-1;for(u=new Array(i);++n<i;)u[n]=((n+1)*r-(n-i)*e)/(i+1);return a}return a.domain=function(n){return arguments.length?(e=+n[0],r=+n[1],c()):[e,r]},a.range=function(n){return arguments.length?(i=(o=l.call(n)).length-1,c()):o.slice()},a.invertExtent=function(n){var t=o.indexOf(n);return t<0?[NaN,NaN]:t<1?[e,u[0]]:t>=i?[u[i-1],r]:[u[t-1],u[t]]},a.copy=function(){return n().domain([e,r]).range(o)},k(a)},n.scaleThreshold=function n(){var e=[.5],r=[0,1],i=1;function u(n){if(n<=n)return r[t.bisect(e,n,0,i)]}return u.domain=function(n){return arguments.length?(e=l.call(n),i=Math.min(e.length,r.length-1),u):e.slice()},u.range=function(n){return arguments.length?(r=l.call(n),i=Math.min(e.length,r.length-1),u):r.slice()},u.invertExtent=function(n){var t=r.indexOf(n);return[e[t-1],e[t]]},u.copy=function(){return n().domain(e).range(r)},u},n.scaleTime=function(){return B(u.timeYear,u.timeMonth,u.timeWeek,u.timeDay,u.timeHour,u.timeMinute,u.timeSecond,u.timeMillisecond,o.timeFormat).domain([new Date(2e3,0,1),new Date(2e3,0,2)])},n.scaleUtc=function(){return B(u.utcYear,u.utcMonth,u.utcWeek,u.utcDay,u.utcHour,u.utcMinute,u.utcSecond,u.utcMillisecond,o.utcFormat).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)])},n.scaleSequential=function n(t){var e=0,r=1,i=!1;function u(n){var u=(n-e)/(r-e);return t(i?Math.max(0,Math.min(1,u)):u)}return u.domain=function(n){return arguments.length?(e=+n[0],r=+n[1],u):[e,r]},u.clamp=function(n){return arguments.length?(i=!!n,u):i},u.interpolator=function(n){return arguments.length?(t=n,u):t},u.copy=function(){return n(t).domain([e,r]).clamp(i)},k(u)},Object.defineProperty(n,"__esModule",{value:!0})});

},{"d3-array":20,"d3-collection":24,"d3-format":33,"d3-interpolate":36,"d3-time":46,"d3-time-format":45}],43:[function(require,module,exports){
!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n(t.d3=t.d3||{})}(this,function(t){"use strict";var n="http://www.w3.org/1999/xhtml",e={svg:"http://www.w3.org/2000/svg",xhtml:n,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function r(t){var n=t+="",r=n.indexOf(":");return r>=0&&"xmlns"!==(n=t.slice(0,r))&&(t=t.slice(r+1)),e.hasOwnProperty(n)?{space:e[n],local:t}:t}function i(t){var e=r(t);return(e.local?function(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}:function(t){return function(){var e=this.ownerDocument,r=this.namespaceURI;return r===n&&e.documentElement.namespaceURI===n?e.createElement(t):e.createElementNS(r,t)}})(e)}function o(){}function u(t){return null==t?o:function(){return this.querySelector(t)}}function c(){return[]}function s(t){return null==t?c:function(){return this.querySelectorAll(t)}}var a=function(t){return function(){return this.matches(t)}};if("undefined"!=typeof document){var l=document.documentElement;if(!l.matches){var f=l.webkitMatchesSelector||l.msMatchesSelector||l.mozMatchesSelector||l.oMatchesSelector;a=function(t){return function(){return f.call(this,t)}}}}var h=a;function p(t){return new Array(t.length)}function _(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}_.prototype={constructor:_,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};var d="$";function v(t,n,e,r,i,o){for(var u,c=0,s=n.length,a=o.length;c<a;++c)(u=n[c])?(u.__data__=o[c],r[c]=u):e[c]=new _(t,o[c]);for(;c<s;++c)(u=n[c])&&(i[c]=u)}function m(t,n,e,r,i,o,u){var c,s,a,l={},f=n.length,h=o.length,p=new Array(f);for(c=0;c<f;++c)(s=n[c])&&(p[c]=a=d+u.call(s,s.__data__,c,n),a in l?i[c]=s:l[a]=s);for(c=0;c<h;++c)(s=l[a=d+u.call(t,o[c],c,o)])?(r[c]=s,s.__data__=o[c],l[a]=null):e[c]=new _(t,o[c]);for(c=0;c<f;++c)(s=n[c])&&l[p[c]]===s&&(i[c]=s)}function y(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}function g(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView}function w(t,n){return t.style.getPropertyValue(n)||g(t).getComputedStyle(t,null).getPropertyValue(n)}function A(t){return t.trim().split(/^|\s+/)}function x(t){return t.classList||new S(t)}function S(t){this._node=t,this._names=A(t.getAttribute("class")||"")}function b(t,n){for(var e=x(t),r=-1,i=n.length;++r<i;)e.add(n[r])}function E(t,n){for(var e=x(t),r=-1,i=n.length;++r<i;)e.remove(n[r])}function N(){this.textContent=""}function C(){this.innerHTML=""}function P(){this.nextSibling&&this.parentNode.appendChild(this)}function M(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function L(){return null}function T(){var t=this.parentNode;t&&t.removeChild(this)}function B(){return this.parentNode.insertBefore(this.cloneNode(!1),this.nextSibling)}function q(){return this.parentNode.insertBefore(this.cloneNode(!0),this.nextSibling)}S.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};var O={};(t.event=null,"undefined"!=typeof document)&&("onmouseenter"in document.documentElement||(O={mouseenter:"mouseover",mouseleave:"mouseout"}));function D(t,n,e){return t=V(t,n,e),function(n){var e=n.relatedTarget;e&&(e===this||8&e.compareDocumentPosition(this))||t.call(this,n)}}function V(n,e,r){return function(i){var o=t.event;t.event=i;try{n.call(this,this.__data__,e,r)}finally{t.event=o}}}function R(t){return function(){var n=this.__on;if(n){for(var e,r=0,i=-1,o=n.length;r<o;++r)e=n[r],t.type&&e.type!==t.type||e.name!==t.name?n[++i]=e:this.removeEventListener(e.type,e.listener,e.capture);++i?n.length=i:delete this.__on}}}function j(t,n,e){var r=O.hasOwnProperty(t.type)?D:V;return function(i,o,u){var c,s=this.__on,a=r(n,o,u);if(s)for(var l=0,f=s.length;l<f;++l)if((c=s[l]).type===t.type&&c.name===t.name)return this.removeEventListener(c.type,c.listener,c.capture),this.addEventListener(c.type,c.listener=a,c.capture=e),void(c.value=n);this.addEventListener(t.type,a,e),c={type:t.type,name:t.name,value:n,listener:a,capture:e},s?s.push(c):this.__on=[c]}}function z(t,n,e){var r=g(t),i=r.CustomEvent;"function"==typeof i?i=new i(n,e):(i=r.document.createEvent("Event"),e?(i.initEvent(n,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(n,!1,!1)),t.dispatchEvent(i)}var H=[null];function I(t,n){this._groups=t,this._parents=n}function U(){return new I([[document.documentElement]],H)}function k(t){return"string"==typeof t?new I([[document.querySelector(t)]],[document.documentElement]):new I([[t]],H)}I.prototype=U.prototype={constructor:I,select:function(t){"function"!=typeof t&&(t=u(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,c,s=n[i],a=s.length,l=r[i]=new Array(a),f=0;f<a;++f)(o=s[f])&&(c=t.call(o,o.__data__,f,s))&&("__data__"in o&&(c.__data__=o.__data__),l[f]=c);return new I(r,this._parents)},selectAll:function(t){"function"!=typeof t&&(t=s(t));for(var n=this._groups,e=n.length,r=[],i=[],o=0;o<e;++o)for(var u,c=n[o],a=c.length,l=0;l<a;++l)(u=c[l])&&(r.push(t.call(u,u.__data__,l,c)),i.push(u));return new I(r,i)},filter:function(t){"function"!=typeof t&&(t=h(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u=n[i],c=u.length,s=r[i]=[],a=0;a<c;++a)(o=u[a])&&t.call(o,o.__data__,a,u)&&s.push(o);return new I(r,this._parents)},data:function(t,n){if(!t)return _=new Array(this.size()),l=-1,this.each(function(t){_[++l]=t}),_;var e,r=n?m:v,i=this._parents,o=this._groups;"function"!=typeof t&&(e=t,t=function(){return e});for(var u=o.length,c=new Array(u),s=new Array(u),a=new Array(u),l=0;l<u;++l){var f=i[l],h=o[l],p=h.length,_=t.call(f,f&&f.__data__,l,i),d=_.length,y=s[l]=new Array(d),g=c[l]=new Array(d);r(f,h,y,g,a[l]=new Array(p),_,n);for(var w,A,x=0,S=0;x<d;++x)if(w=y[x]){for(x>=S&&(S=x+1);!(A=g[S])&&++S<d;);w._next=A||null}}return(c=new I(c,i))._enter=s,c._exit=a,c},enter:function(){return new I(this._enter||this._groups.map(p),this._parents)},exit:function(){return new I(this._exit||this._groups.map(p),this._parents)},merge:function(t){for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),u=new Array(r),c=0;c<o;++c)for(var s,a=n[c],l=e[c],f=a.length,h=u[c]=new Array(f),p=0;p<f;++p)(s=a[p]||l[p])&&(h[p]=s);for(;c<r;++c)u[c]=n[c];return new I(u,this._parents)},order:function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var r,i=t[n],o=i.length-1,u=i[o];--o>=0;)(r=i[o])&&(u&&u!==r.nextSibling&&u.parentNode.insertBefore(r,u),u=r);return this},sort:function(t){function n(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}t||(t=y);for(var e=this._groups,r=e.length,i=new Array(r),o=0;o<r;++o){for(var u,c=e[o],s=c.length,a=i[o]=new Array(s),l=0;l<s;++l)(u=c[l])&&(a[l]=u);a.sort(n)}return new I(i,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){var t=new Array(this.size()),n=-1;return this.each(function(){t[++n]=this}),t},node:function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r=t[n],i=0,o=r.length;i<o;++i){var u=r[i];if(u)return u}return null},size:function(){var t=0;return this.each(function(){++t}),t},empty:function(){return!this.node()},each:function(t){for(var n=this._groups,e=0,r=n.length;e<r;++e)for(var i,o=n[e],u=0,c=o.length;u<c;++u)(i=o[u])&&t.call(i,i.__data__,u,o);return this},attr:function(t,n){var e=r(t);if(arguments.length<2){var i=this.node();return e.local?i.getAttributeNS(e.space,e.local):i.getAttribute(e)}return this.each((null==n?e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}}:"function"==typeof n?e.local?function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}:function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}:e.local?function(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}:function(t,n){return function(){this.setAttribute(t,n)}})(e,n))},style:function(t,n,e){return arguments.length>1?this.each((null==n?function(t){return function(){this.style.removeProperty(t)}}:"function"==typeof n?function(t,n,e){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}}:function(t,n,e){return function(){this.style.setProperty(t,n,e)}})(t,n,null==e?"":e)):w(this.node(),t)},property:function(t,n){return arguments.length>1?this.each((null==n?function(t){return function(){delete this[t]}}:"function"==typeof n?function(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}:function(t,n){return function(){this[t]=n}})(t,n)):this.node()[t]},classed:function(t,n){var e=A(t+"");if(arguments.length<2){for(var r=x(this.node()),i=-1,o=e.length;++i<o;)if(!r.contains(e[i]))return!1;return!0}return this.each(("function"==typeof n?function(t,n){return function(){(n.apply(this,arguments)?b:E)(this,t)}}:n?function(t){return function(){b(this,t)}}:function(t){return function(){E(this,t)}})(e,n))},text:function(t){return arguments.length?this.each(null==t?N:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}}:function(t){return function(){this.textContent=t}})(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?C:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}}:function(t){return function(){this.innerHTML=t}})(t)):this.node().innerHTML},raise:function(){return this.each(P)},lower:function(){return this.each(M)},append:function(t){var n="function"==typeof t?t:i(t);return this.select(function(){return this.appendChild(n.apply(this,arguments))})},insert:function(t,n){var e="function"==typeof t?t:i(t),r=null==n?L:"function"==typeof n?n:u(n);return this.select(function(){return this.insertBefore(e.apply(this,arguments),r.apply(this,arguments)||null)})},remove:function(){return this.each(T)},clone:function(t){return this.select(t?q:B)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:function(t,n,e){var r,i,o=function(t){return t.trim().split(/^|\s+/).map(function(t){var n="",e=t.indexOf(".");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}})}(t+""),u=o.length;if(!(arguments.length<2)){for(c=n?j:R,null==e&&(e=!1),r=0;r<u;++r)this.each(c(o[r],n,e));return this}var c=this.node().__on;if(c)for(var s,a=0,l=c.length;a<l;++a)for(r=0,s=c[a];r<u;++r)if((i=o[r]).type===s.type&&i.name===s.name)return s.value},dispatch:function(t,n){return this.each(("function"==typeof n?function(t,n){return function(){return z(this,t,n.apply(this,arguments))}}:function(t,n){return function(){return z(this,t,n)}})(t,n))}};var G=0;function X(){return new Y}function Y(){this._="@"+(++G).toString(36)}function $(){for(var n,e=t.event;n=e.sourceEvent;)e=n;return e}function F(t,n){var e=t.ownerSVGElement||t;if(e.createSVGPoint){var r=e.createSVGPoint();return r.x=n.clientX,r.y=n.clientY,[(r=r.matrixTransform(t.getScreenCTM().inverse())).x,r.y]}var i=t.getBoundingClientRect();return[n.clientX-i.left-t.clientLeft,n.clientY-i.top-t.clientTop]}Y.prototype=X.prototype={constructor:Y,get:function(t){for(var n=this._;!(n in t);)if(!(t=t.parentNode))return;return t[n]},set:function(t,n){return t[this._]=n},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}},t.create=function(t){return k(i(t).call(document.documentElement))},t.creator=i,t.local=X,t.matcher=h,t.mouse=function(t){var n=$();return n.changedTouches&&(n=n.changedTouches[0]),F(t,n)},t.namespace=r,t.namespaces=e,t.clientPoint=F,t.select=k,t.selectAll=function(t){return"string"==typeof t?new I([document.querySelectorAll(t)],[document.documentElement]):new I([null==t?[]:t],H)},t.selection=U,t.selector=u,t.selectorAll=s,t.style=w,t.touch=function(t,n,e){arguments.length<3&&(e=n,n=$().changedTouches);for(var r,i=0,o=n?n.length:0;i<o;++i)if((r=n[i]).identifier===e)return F(t,r);return null},t.touches=function(t,n){null==n&&(n=$().touches);for(var e=0,r=n?n.length:0,i=new Array(r);e<r;++e)i[e]=F(t,n[e]);return i},t.window=g,t.customEvent=function(n,e,r,i){var o=t.event;n.sourceEvent=t.event,t.event=n;try{return e.apply(r,i)}finally{t.event=o}},Object.defineProperty(t,"__esModule",{value:!0})});

},{}],44:[function(require,module,exports){
!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?i(exports,require("d3-path")):"function"==typeof define&&define.amd?define(["exports","d3-path"],i):i(t.d3=t.d3||{},t.d3)}(this,function(t,i){"use strict";var n=function(t){return function(){return t}},e=Math.abs,s=Math.atan2,h=Math.cos,o=Math.max,_=Math.min,r=Math.sin,a=Math.sqrt,c=1e-12,l=Math.PI,u=l/2,f=2*l;function x(t){return t>=1?u:t<=-1?-u:Math.asin(t)}function y(t){return t.innerRadius}function p(t){return t.outerRadius}function v(t){return t.startAngle}function d(t){return t.endAngle}function T(t){return t&&t.padAngle}function g(t,i,n,e,s,h,_){var r=t-n,c=i-e,l=(_?h:-h)/a(r*r+c*c),u=l*c,f=-l*r,x=t+u,y=i+f,p=n+u,v=e+f,d=(x+p)/2,T=(y+v)/2,g=p-x,b=v-y,w=g*g+b*b,k=s-h,m=x*v-p*y,N=(b<0?-1:1)*a(o(0,k*k*w-m*m)),M=(m*b-g*N)/w,S=(-m*g-b*N)/w,E=(m*b+g*N)/w,A=(-m*g+b*N)/w,P=M-d,C=S-T,R=E-d,q=A-T;return P*P+C*C>R*R+q*q&&(M=E,S=A),{cx:M,cy:S,x01:-u,y01:-f,x11:M*(s/k-1),y11:S*(s/k-1)}}function b(t){this._context=t}b.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,i){switch(t=+t,i=+i,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,i):this._context.moveTo(t,i);break;case 1:this._point=2;default:this._context.lineTo(t,i)}}};var w=function(t){return new b(t)};function k(t){return t[0]}function m(t){return t[1]}var N=function(){var t=k,e=m,s=n(!0),h=null,o=w,_=null;function r(n){var r,a,c,l=n.length,u=!1;for(null==h&&(_=o(c=i.path())),r=0;r<=l;++r)!(r<l&&s(a=n[r],r,n))===u&&((u=!u)?_.lineStart():_.lineEnd()),u&&_.point(+t(a,r,n),+e(a,r,n));if(c)return _=null,c+""||null}return r.x=function(i){return arguments.length?(t="function"==typeof i?i:n(+i),r):t},r.y=function(t){return arguments.length?(e="function"==typeof t?t:n(+t),r):e},r.defined=function(t){return arguments.length?(s="function"==typeof t?t:n(!!t),r):s},r.curve=function(t){return arguments.length?(o=t,null!=h&&(_=o(h)),r):o},r.context=function(t){return arguments.length?(null==t?h=_=null:_=o(h=t),r):h},r},M=function(){var t=k,e=null,s=n(0),h=m,o=n(!0),_=null,r=w,a=null;function c(n){var c,l,u,f,x,y=n.length,p=!1,v=new Array(y),d=new Array(y);for(null==_&&(a=r(x=i.path())),c=0;c<=y;++c){if(!(c<y&&o(f=n[c],c,n))===p)if(p=!p)l=c,a.areaStart(),a.lineStart();else{for(a.lineEnd(),a.lineStart(),u=c-1;u>=l;--u)a.point(v[u],d[u]);a.lineEnd(),a.areaEnd()}p&&(v[c]=+t(f,c,n),d[c]=+s(f,c,n),a.point(e?+e(f,c,n):v[c],h?+h(f,c,n):d[c]))}if(x)return a=null,x+""||null}function l(){return N().defined(o).curve(r).context(_)}return c.x=function(i){return arguments.length?(t="function"==typeof i?i:n(+i),e=null,c):t},c.x0=function(i){return arguments.length?(t="function"==typeof i?i:n(+i),c):t},c.x1=function(t){return arguments.length?(e=null==t?null:"function"==typeof t?t:n(+t),c):e},c.y=function(t){return arguments.length?(s="function"==typeof t?t:n(+t),h=null,c):s},c.y0=function(t){return arguments.length?(s="function"==typeof t?t:n(+t),c):s},c.y1=function(t){return arguments.length?(h=null==t?null:"function"==typeof t?t:n(+t),c):h},c.lineX0=c.lineY0=function(){return l().x(t).y(s)},c.lineY1=function(){return l().x(t).y(h)},c.lineX1=function(){return l().x(e).y(s)},c.defined=function(t){return arguments.length?(o="function"==typeof t?t:n(!!t),c):o},c.curve=function(t){return arguments.length?(r=t,null!=_&&(a=r(_)),c):r},c.context=function(t){return arguments.length?(null==t?_=a=null:a=r(_=t),c):_},c},S=function(t,i){return i<t?-1:i>t?1:i>=t?0:NaN},E=function(t){return t},A=C(w);function P(t){this._curve=t}function C(t){function i(i){return new P(t(i))}return i._curve=t,i}function R(t){var i=t.curve;return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t.curve=function(t){return arguments.length?i(C(t)):i()._curve},t}P.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(t,i){this._curve.point(i*Math.sin(t),i*-Math.cos(t))}};var q=function(){return R(N().curve(A))},O=function(){var t=M().curve(A),i=t.curve,n=t.lineX0,e=t.lineX1,s=t.lineY0,h=t.lineY1;return t.angle=t.x,delete t.x,t.startAngle=t.x0,delete t.x0,t.endAngle=t.x1,delete t.x1,t.radius=t.y,delete t.y,t.innerRadius=t.y0,delete t.y0,t.outerRadius=t.y1,delete t.y1,t.lineStartAngle=function(){return R(n())},delete t.lineX0,t.lineEndAngle=function(){return R(e())},delete t.lineX1,t.lineInnerRadius=function(){return R(s())},delete t.lineY0,t.lineOuterRadius=function(){return R(h())},delete t.lineY1,t.curve=function(t){return arguments.length?i(C(t)):i()._curve},t},z=function(t,i){return[(i=+i)*Math.cos(t-=Math.PI/2),i*Math.sin(t)]},X=Array.prototype.slice;function Y(t){return t.source}function B(t){return t.target}function I(t){var e=Y,s=B,h=k,o=m,_=null;function r(){var n,r=X.call(arguments),a=e.apply(this,r),c=s.apply(this,r);if(_||(_=n=i.path()),t(_,+h.apply(this,(r[0]=a,r)),+o.apply(this,r),+h.apply(this,(r[0]=c,r)),+o.apply(this,r)),n)return _=null,n+""||null}return r.source=function(t){return arguments.length?(e=t,r):e},r.target=function(t){return arguments.length?(s=t,r):s},r.x=function(t){return arguments.length?(h="function"==typeof t?t:n(+t),r):h},r.y=function(t){return arguments.length?(o="function"==typeof t?t:n(+t),r):o},r.context=function(t){return arguments.length?(_=null==t?null:t,r):_},r}function j(t,i,n,e,s){t.moveTo(i,n),t.bezierCurveTo(i=(i+e)/2,n,i,s,e,s)}function D(t,i,n,e,s){t.moveTo(i,n),t.bezierCurveTo(i,n=(n+s)/2,e,n,e,s)}function L(t,i,n,e,s){var h=z(i,n),o=z(i,n=(n+s)/2),_=z(e,n),r=z(e,s);t.moveTo(h[0],h[1]),t.bezierCurveTo(o[0],o[1],_[0],_[1],r[0],r[1])}var V={draw:function(t,i){var n=Math.sqrt(i/l);t.moveTo(n,0),t.arc(0,0,n,0,f)}},W={draw:function(t,i){var n=Math.sqrt(i/5)/2;t.moveTo(-3*n,-n),t.lineTo(-n,-n),t.lineTo(-n,-3*n),t.lineTo(n,-3*n),t.lineTo(n,-n),t.lineTo(3*n,-n),t.lineTo(3*n,n),t.lineTo(n,n),t.lineTo(n,3*n),t.lineTo(-n,3*n),t.lineTo(-n,n),t.lineTo(-3*n,n),t.closePath()}},H=Math.sqrt(1/3),F=2*H,G={draw:function(t,i){var n=Math.sqrt(i/F),e=n*H;t.moveTo(0,-n),t.lineTo(e,0),t.lineTo(0,n),t.lineTo(-e,0),t.closePath()}},J=Math.sin(l/10)/Math.sin(7*l/10),K=Math.sin(f/10)*J,Q=-Math.cos(f/10)*J,U={draw:function(t,i){var n=Math.sqrt(.8908130915292852*i),e=K*n,s=Q*n;t.moveTo(0,-n),t.lineTo(e,s);for(var h=1;h<5;++h){var o=f*h/5,_=Math.cos(o),r=Math.sin(o);t.lineTo(r*n,-_*n),t.lineTo(_*e-r*s,r*e+_*s)}t.closePath()}},Z={draw:function(t,i){var n=Math.sqrt(i),e=-n/2;t.rect(e,e,n,n)}},$=Math.sqrt(3),tt={draw:function(t,i){var n=-Math.sqrt(i/(3*$));t.moveTo(0,2*n),t.lineTo(-$*n,-n),t.lineTo($*n,-n),t.closePath()}},it=-.5,nt=Math.sqrt(3)/2,et=1/Math.sqrt(12),st=3*(et/2+1),ht={draw:function(t,i){var n=Math.sqrt(i/st),e=n/2,s=n*et,h=e,o=n*et+n,_=-h,r=o;t.moveTo(e,s),t.lineTo(h,o),t.lineTo(_,r),t.lineTo(it*e-nt*s,nt*e+it*s),t.lineTo(it*h-nt*o,nt*h+it*o),t.lineTo(it*_-nt*r,nt*_+it*r),t.lineTo(it*e+nt*s,it*s-nt*e),t.lineTo(it*h+nt*o,it*o-nt*h),t.lineTo(it*_+nt*r,it*r-nt*_),t.closePath()}},ot=[V,W,G,Z,U,tt,ht],_t=function(){};function rt(t,i,n){t._context.bezierCurveTo((2*t._x0+t._x1)/3,(2*t._y0+t._y1)/3,(t._x0+2*t._x1)/3,(t._y0+2*t._y1)/3,(t._x0+4*t._x1+i)/6,(t._y0+4*t._y1+n)/6)}function at(t){this._context=t}at.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:rt(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,i){switch(t=+t,i=+i,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,i):this._context.moveTo(t,i);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:rt(this,t,i)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=i}};function ct(t){this._context=t}ct.prototype={areaStart:_t,areaEnd:_t,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(t,i){switch(t=+t,i=+i,this._point){case 0:this._point=1,this._x2=t,this._y2=i;break;case 1:this._point=2,this._x3=t,this._y3=i;break;case 2:this._point=3,this._x4=t,this._y4=i,this._context.moveTo((this._x0+4*this._x1+t)/6,(this._y0+4*this._y1+i)/6);break;default:rt(this,t,i)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=i}};function lt(t){this._context=t}lt.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,i){switch(t=+t,i=+i,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var n=(this._x0+4*this._x1+t)/6,e=(this._y0+4*this._y1+i)/6;this._line?this._context.lineTo(n,e):this._context.moveTo(n,e);break;case 3:this._point=4;default:rt(this,t,i)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=i}};function ut(t,i){this._basis=new at(t),this._beta=i}ut.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var t=this._x,i=this._y,n=t.length-1;if(n>0)for(var e,s=t[0],h=i[0],o=t[n]-s,_=i[n]-h,r=-1;++r<=n;)e=r/n,this._basis.point(this._beta*t[r]+(1-this._beta)*(s+e*o),this._beta*i[r]+(1-this._beta)*(h+e*_));this._x=this._y=null,this._basis.lineEnd()},point:function(t,i){this._x.push(+t),this._y.push(+i)}};var ft=function t(i){function n(t){return 1===i?new at(t):new ut(t,i)}return n.beta=function(i){return t(+i)},n}(.85);function xt(t,i,n){t._context.bezierCurveTo(t._x1+t._k*(t._x2-t._x0),t._y1+t._k*(t._y2-t._y0),t._x2+t._k*(t._x1-i),t._y2+t._k*(t._y1-n),t._x2,t._y2)}function yt(t,i){this._context=t,this._k=(1-i)/6}yt.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:xt(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,i){switch(t=+t,i=+i,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,i):this._context.moveTo(t,i);break;case 1:this._point=2,this._x1=t,this._y1=i;break;case 2:this._point=3;default:xt(this,t,i)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=i}};var pt=function t(i){function n(t){return new yt(t,i)}return n.tension=function(i){return t(+i)},n}(0);function vt(t,i){this._context=t,this._k=(1-i)/6}vt.prototype={areaStart:_t,areaEnd:_t,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,i){switch(t=+t,i=+i,this._point){case 0:this._point=1,this._x3=t,this._y3=i;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=i);break;case 2:this._point=3,this._x5=t,this._y5=i;break;default:xt(this,t,i)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=i}};var dt=function t(i){function n(t){return new vt(t,i)}return n.tension=function(i){return t(+i)},n}(0);function Tt(t,i){this._context=t,this._k=(1-i)/6}Tt.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,i){switch(t=+t,i=+i,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:xt(this,t,i)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=i}};var gt=function t(i){function n(t){return new Tt(t,i)}return n.tension=function(i){return t(+i)},n}(0);function bt(t,i,n){var e=t._x1,s=t._y1,h=t._x2,o=t._y2;if(t._l01_a>c){var _=2*t._l01_2a+3*t._l01_a*t._l12_a+t._l12_2a,r=3*t._l01_a*(t._l01_a+t._l12_a);e=(e*_-t._x0*t._l12_2a+t._x2*t._l01_2a)/r,s=(s*_-t._y0*t._l12_2a+t._y2*t._l01_2a)/r}if(t._l23_a>c){var a=2*t._l23_2a+3*t._l23_a*t._l12_a+t._l12_2a,l=3*t._l23_a*(t._l23_a+t._l12_a);h=(h*a+t._x1*t._l23_2a-i*t._l12_2a)/l,o=(o*a+t._y1*t._l23_2a-n*t._l12_2a)/l}t._context.bezierCurveTo(e,s,h,o,t._x2,t._y2)}function wt(t,i){this._context=t,this._alpha=i}wt.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,i){if(t=+t,i=+i,this._point){var n=this._x2-t,e=this._y2-i;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(n*n+e*e,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,i):this._context.moveTo(t,i);break;case 1:this._point=2;break;case 2:this._point=3;default:bt(this,t,i)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=i}};var kt=function t(i){function n(t){return i?new wt(t,i):new yt(t,0)}return n.alpha=function(i){return t(+i)},n}(.5);function mt(t,i){this._context=t,this._alpha=i}mt.prototype={areaStart:_t,areaEnd:_t,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,i){if(t=+t,i=+i,this._point){var n=this._x2-t,e=this._y2-i;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(n*n+e*e,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=t,this._y3=i;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=i);break;case 2:this._point=3,this._x5=t,this._y5=i;break;default:bt(this,t,i)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=i}};var Nt=function t(i){function n(t){return i?new mt(t,i):new vt(t,0)}return n.alpha=function(i){return t(+i)},n}(.5);function Mt(t,i){this._context=t,this._alpha=i}Mt.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,i){if(t=+t,i=+i,this._point){var n=this._x2-t,e=this._y2-i;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(n*n+e*e,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:bt(this,t,i)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=i}};var St=function t(i){function n(t){return i?new Mt(t,i):new Tt(t,0)}return n.alpha=function(i){return t(+i)},n}(.5);function Et(t){this._context=t}Et.prototype={areaStart:_t,areaEnd:_t,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(t,i){t=+t,i=+i,this._point?this._context.lineTo(t,i):(this._point=1,this._context.moveTo(t,i))}};function At(t){return t<0?-1:1}function Pt(t,i,n){var e=t._x1-t._x0,s=i-t._x1,h=(t._y1-t._y0)/(e||s<0&&-0),o=(n-t._y1)/(s||e<0&&-0),_=(h*s+o*e)/(e+s);return(At(h)+At(o))*Math.min(Math.abs(h),Math.abs(o),.5*Math.abs(_))||0}function Ct(t,i){var n=t._x1-t._x0;return n?(3*(t._y1-t._y0)/n-i)/2:i}function Rt(t,i,n){var e=t._x0,s=t._y0,h=t._x1,o=t._y1,_=(h-e)/3;t._context.bezierCurveTo(e+_,s+_*i,h-_,o-_*n,h,o)}function qt(t){this._context=t}function Ot(t){this._context=new zt(t)}function zt(t){this._context=t}function Xt(t){this._context=t}function Yt(t){var i,n,e=t.length-1,s=new Array(e),h=new Array(e),o=new Array(e);for(s[0]=0,h[0]=2,o[0]=t[0]+2*t[1],i=1;i<e-1;++i)s[i]=1,h[i]=4,o[i]=4*t[i]+2*t[i+1];for(s[e-1]=2,h[e-1]=7,o[e-1]=8*t[e-1]+t[e],i=1;i<e;++i)n=s[i]/h[i-1],h[i]-=n,o[i]-=n*o[i-1];for(s[e-1]=o[e-1]/h[e-1],i=e-2;i>=0;--i)s[i]=(o[i]-s[i+1])/h[i];for(h[e-1]=(t[e]+s[e-1])/2,i=0;i<e-1;++i)h[i]=2*t[i+1]-s[i+1];return[s,h]}qt.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:Rt(this,this._t0,Ct(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,i){var n=NaN;if(i=+i,(t=+t)!==this._x1||i!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,i):this._context.moveTo(t,i);break;case 1:this._point=2;break;case 2:this._point=3,Rt(this,Ct(this,n=Pt(this,t,i)),n);break;default:Rt(this,this._t0,n=Pt(this,t,i))}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=i,this._t0=n}}},(Ot.prototype=Object.create(qt.prototype)).point=function(t,i){qt.prototype.point.call(this,i,t)},zt.prototype={moveTo:function(t,i){this._context.moveTo(i,t)},closePath:function(){this._context.closePath()},lineTo:function(t,i){this._context.lineTo(i,t)},bezierCurveTo:function(t,i,n,e,s,h){this._context.bezierCurveTo(i,t,e,n,h,s)}},Xt.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var t=this._x,i=this._y,n=t.length;if(n)if(this._line?this._context.lineTo(t[0],i[0]):this._context.moveTo(t[0],i[0]),2===n)this._context.lineTo(t[1],i[1]);else for(var e=Yt(t),s=Yt(i),h=0,o=1;o<n;++h,++o)this._context.bezierCurveTo(e[0][h],s[0][h],e[1][h],s[1][h],t[o],i[o]);(this._line||0!==this._line&&1===n)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(t,i){this._x.push(+t),this._y.push(+i)}};function Bt(t,i){this._context=t,this._t=i}Bt.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(t,i){switch(t=+t,i=+i,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,i):this._context.moveTo(t,i);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,i),this._context.lineTo(t,i);else{var n=this._x*(1-this._t)+t*this._t;this._context.lineTo(n,this._y),this._context.lineTo(n,i)}}this._x=t,this._y=i}};var It=function(t,i){if((s=t.length)>1)for(var n,e,s,h=1,o=t[i[0]],_=o.length;h<s;++h)for(e=o,o=t[i[h]],n=0;n<_;++n)o[n][1]+=o[n][0]=isNaN(e[n][1])?e[n][0]:e[n][1]},jt=function(t){for(var i=t.length,n=new Array(i);--i>=0;)n[i]=i;return n};function Dt(t,i){return t[i]}var Lt=function(t){var i=t.map(Vt);return jt(t).sort(function(t,n){return i[t]-i[n]})};function Vt(t){for(var i,n=0,e=-1,s=t.length;++e<s;)(i=+t[e][1])&&(n+=i);return n}t.arc=function(){var t=y,o=p,b=n(0),w=null,k=v,m=d,N=T,M=null;function S(){var n,y,p,v=+t.apply(this,arguments),d=+o.apply(this,arguments),T=k.apply(this,arguments)-u,S=m.apply(this,arguments)-u,E=e(S-T),A=S>T;if(M||(M=n=i.path()),d<v&&(y=d,d=v,v=y),d>c)if(E>f-c)M.moveTo(d*h(T),d*r(T)),M.arc(0,0,d,T,S,!A),v>c&&(M.moveTo(v*h(S),v*r(S)),M.arc(0,0,v,S,T,A));else{var P,C,R=T,q=S,O=T,z=S,X=E,Y=E,B=N.apply(this,arguments)/2,I=B>c&&(w?+w.apply(this,arguments):a(v*v+d*d)),j=_(e(d-v)/2,+b.apply(this,arguments)),D=j,L=j;if(I>c){var V=x(I/v*r(B)),W=x(I/d*r(B));(X-=2*V)>c?(O+=V*=A?1:-1,z-=V):(X=0,O=z=(T+S)/2),(Y-=2*W)>c?(R+=W*=A?1:-1,q-=W):(Y=0,R=q=(T+S)/2)}var H=d*h(R),F=d*r(R),G=v*h(z),J=v*r(z);if(j>c){var K=d*h(q),Q=d*r(q),U=v*h(O),Z=v*r(O);if(E<l){var $=X>c?function(t,i,n,e,s,h,o,_){var r=n-t,a=e-i,c=o-s,l=_-h,u=(c*(i-h)-l*(t-s))/(l*r-c*a);return[t+u*r,i+u*a]}(H,F,U,Z,K,Q,G,J):[G,J],tt=H-$[0],it=F-$[1],nt=K-$[0],et=Q-$[1],st=1/r(((p=(tt*nt+it*et)/(a(tt*tt+it*it)*a(nt*nt+et*et)))>1?0:p<-1?l:Math.acos(p))/2),ht=a($[0]*$[0]+$[1]*$[1]);D=_(j,(v-ht)/(st-1)),L=_(j,(d-ht)/(st+1))}}Y>c?L>c?(P=g(U,Z,H,F,d,L,A),C=g(K,Q,G,J,d,L,A),M.moveTo(P.cx+P.x01,P.cy+P.y01),L<j?M.arc(P.cx,P.cy,L,s(P.y01,P.x01),s(C.y01,C.x01),!A):(M.arc(P.cx,P.cy,L,s(P.y01,P.x01),s(P.y11,P.x11),!A),M.arc(0,0,d,s(P.cy+P.y11,P.cx+P.x11),s(C.cy+C.y11,C.cx+C.x11),!A),M.arc(C.cx,C.cy,L,s(C.y11,C.x11),s(C.y01,C.x01),!A))):(M.moveTo(H,F),M.arc(0,0,d,R,q,!A)):M.moveTo(H,F),v>c&&X>c?D>c?(P=g(G,J,K,Q,v,-D,A),C=g(H,F,U,Z,v,-D,A),M.lineTo(P.cx+P.x01,P.cy+P.y01),D<j?M.arc(P.cx,P.cy,D,s(P.y01,P.x01),s(C.y01,C.x01),!A):(M.arc(P.cx,P.cy,D,s(P.y01,P.x01),s(P.y11,P.x11),!A),M.arc(0,0,v,s(P.cy+P.y11,P.cx+P.x11),s(C.cy+C.y11,C.cx+C.x11),A),M.arc(C.cx,C.cy,D,s(C.y11,C.x11),s(C.y01,C.x01),!A))):M.arc(0,0,v,z,O,A):M.lineTo(G,J)}else M.moveTo(0,0);if(M.closePath(),n)return M=null,n+""||null}return S.centroid=function(){var i=(+t.apply(this,arguments)+ +o.apply(this,arguments))/2,n=(+k.apply(this,arguments)+ +m.apply(this,arguments))/2-l/2;return[h(n)*i,r(n)*i]},S.innerRadius=function(i){return arguments.length?(t="function"==typeof i?i:n(+i),S):t},S.outerRadius=function(t){return arguments.length?(o="function"==typeof t?t:n(+t),S):o},S.cornerRadius=function(t){return arguments.length?(b="function"==typeof t?t:n(+t),S):b},S.padRadius=function(t){return arguments.length?(w=null==t?null:"function"==typeof t?t:n(+t),S):w},S.startAngle=function(t){return arguments.length?(k="function"==typeof t?t:n(+t),S):k},S.endAngle=function(t){return arguments.length?(m="function"==typeof t?t:n(+t),S):m},S.padAngle=function(t){return arguments.length?(N="function"==typeof t?t:n(+t),S):N},S.context=function(t){return arguments.length?(M=null==t?null:t,S):M},S},t.area=M,t.line=N,t.pie=function(){var t=E,i=S,e=null,s=n(0),h=n(f),o=n(0);function _(n){var _,r,a,c,l,u=n.length,x=0,y=new Array(u),p=new Array(u),v=+s.apply(this,arguments),d=Math.min(f,Math.max(-f,h.apply(this,arguments)-v)),T=Math.min(Math.abs(d)/u,o.apply(this,arguments)),g=T*(d<0?-1:1);for(_=0;_<u;++_)(l=p[y[_]=_]=+t(n[_],_,n))>0&&(x+=l);for(null!=i?y.sort(function(t,n){return i(p[t],p[n])}):null!=e&&y.sort(function(t,i){return e(n[t],n[i])}),_=0,a=x?(d-u*g)/x:0;_<u;++_,v=c)r=y[_],c=v+((l=p[r])>0?l*a:0)+g,p[r]={data:n[r],index:_,value:l,startAngle:v,endAngle:c,padAngle:T};return p}return _.value=function(i){return arguments.length?(t="function"==typeof i?i:n(+i),_):t},_.sortValues=function(t){return arguments.length?(i=t,e=null,_):i},_.sort=function(t){return arguments.length?(e=t,i=null,_):e},_.startAngle=function(t){return arguments.length?(s="function"==typeof t?t:n(+t),_):s},_.endAngle=function(t){return arguments.length?(h="function"==typeof t?t:n(+t),_):h},_.padAngle=function(t){return arguments.length?(o="function"==typeof t?t:n(+t),_):o},_},t.areaRadial=O,t.radialArea=O,t.lineRadial=q,t.radialLine=q,t.pointRadial=z,t.linkHorizontal=function(){return I(j)},t.linkVertical=function(){return I(D)},t.linkRadial=function(){var t=I(L);return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t},t.symbol=function(){var t=n(V),e=n(64),s=null;function h(){var n;if(s||(s=n=i.path()),t.apply(this,arguments).draw(s,+e.apply(this,arguments)),n)return s=null,n+""||null}return h.type=function(i){return arguments.length?(t="function"==typeof i?i:n(i),h):t},h.size=function(t){return arguments.length?(e="function"==typeof t?t:n(+t),h):e},h.context=function(t){return arguments.length?(s=null==t?null:t,h):s},h},t.symbols=ot,t.symbolCircle=V,t.symbolCross=W,t.symbolDiamond=G,t.symbolSquare=Z,t.symbolStar=U,t.symbolTriangle=tt,t.symbolWye=ht,t.curveBasisClosed=function(t){return new ct(t)},t.curveBasisOpen=function(t){return new lt(t)},t.curveBasis=function(t){return new at(t)},t.curveBundle=ft,t.curveCardinalClosed=dt,t.curveCardinalOpen=gt,t.curveCardinal=pt,t.curveCatmullRomClosed=Nt,t.curveCatmullRomOpen=St,t.curveCatmullRom=kt,t.curveLinearClosed=function(t){return new Et(t)},t.curveLinear=w,t.curveMonotoneX=function(t){return new qt(t)},t.curveMonotoneY=function(t){return new Ot(t)},t.curveNatural=function(t){return new Xt(t)},t.curveStep=function(t){return new Bt(t,.5)},t.curveStepAfter=function(t){return new Bt(t,1)},t.curveStepBefore=function(t){return new Bt(t,0)},t.stack=function(){var t=n([]),i=jt,e=It,s=Dt;function h(n){var h,o,_=t.apply(this,arguments),r=n.length,a=_.length,c=new Array(a);for(h=0;h<a;++h){for(var l,u=_[h],f=c[h]=new Array(r),x=0;x<r;++x)f[x]=l=[0,+s(n[x],u,x,n)],l.data=n[x];f.key=u}for(h=0,o=i(c);h<a;++h)c[o[h]].index=h;return e(c,o),c}return h.keys=function(i){return arguments.length?(t="function"==typeof i?i:n(X.call(i)),h):t},h.value=function(t){return arguments.length?(s="function"==typeof t?t:n(+t),h):s},h.order=function(t){return arguments.length?(i=null==t?jt:"function"==typeof t?t:n(X.call(t)),h):i},h.offset=function(t){return arguments.length?(e=null==t?It:t,h):e},h},t.stackOffsetExpand=function(t,i){if((e=t.length)>0){for(var n,e,s,h=0,o=t[0].length;h<o;++h){for(s=n=0;n<e;++n)s+=t[n][h][1]||0;if(s)for(n=0;n<e;++n)t[n][h][1]/=s}It(t,i)}},t.stackOffsetDiverging=function(t,i){if((_=t.length)>1)for(var n,e,s,h,o,_,r=0,a=t[i[0]].length;r<a;++r)for(h=o=0,n=0;n<_;++n)(s=(e=t[i[n]][r])[1]-e[0])>=0?(e[0]=h,e[1]=h+=s):s<0?(e[1]=o,e[0]=o+=s):e[0]=h},t.stackOffsetNone=It,t.stackOffsetSilhouette=function(t,i){if((n=t.length)>0){for(var n,e=0,s=t[i[0]],h=s.length;e<h;++e){for(var o=0,_=0;o<n;++o)_+=t[o][e][1]||0;s[e][1]+=s[e][0]=-_/2}It(t,i)}},t.stackOffsetWiggle=function(t,i){if((s=t.length)>0&&(e=(n=t[i[0]]).length)>0){for(var n,e,s,h=0,o=1;o<e;++o){for(var _=0,r=0,a=0;_<s;++_){for(var c=t[i[_]],l=c[o][1]||0,u=(l-(c[o-1][1]||0))/2,f=0;f<_;++f){var x=t[i[f]];u+=(x[o][1]||0)-(x[o-1][1]||0)}r+=l,a+=u*l}n[o-1][1]+=n[o-1][0]=h,r&&(h-=a/r)}n[o-1][1]+=n[o-1][0]=h,It(t,i)}},t.stackOrderAscending=Lt,t.stackOrderDescending=function(t){return Lt(t).reverse()},t.stackOrderInsideOut=function(t){var i,n,e=t.length,s=t.map(Vt),h=jt(t).sort(function(t,i){return s[i]-s[t]}),o=0,_=0,r=[],a=[];for(i=0;i<e;++i)n=h[i],o<_?(o+=s[n],r.push(n)):(_+=s[n],a.push(n));return a.reverse().concat(r)},t.stackOrderNone=jt,t.stackOrderReverse=function(t){return jt(t).reverse()},Object.defineProperty(t,"__esModule",{value:!0})});

},{"d3-path":37}],45:[function(require,module,exports){
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("d3-time")):"function"==typeof define&&define.amd?define(["exports","d3-time"],t):t(e.d3=e.d3||{},e.d3)}(this,function(e,t){"use strict";function n(e){if(0<=e.y&&e.y<100){var t=new Date(-1,e.m,e.d,e.H,e.M,e.S,e.L);return t.setFullYear(e.y),t}return new Date(e.y,e.m,e.d,e.H,e.M,e.S,e.L)}function r(e){if(0<=e.y&&e.y<100){var t=new Date(Date.UTC(-1,e.m,e.d,e.H,e.M,e.S,e.L));return t.setUTCFullYear(e.y),t}return new Date(Date.UTC(e.y,e.m,e.d,e.H,e.M,e.S,e.L))}function u(e){return{y:e,m:0,d:1,H:0,M:0,S:0,L:0}}function c(e){var c=e.dateTime,i=e.date,a=e.time,f=e.periods,l=e.days,s=e.shortDays,g=e.months,ve=e.shortMonths,Me=y(f),Te=d(f),De=y(l),Ce=d(l),xe=y(s),Ue=d(s),pe=y(g),we=d(g),Se=y(ve),Ye=d(ve),Fe={a:function(e){return s[e.getDay()]},A:function(e){return l[e.getDay()]},b:function(e){return ve[e.getMonth()]},B:function(e){return g[e.getMonth()]},c:null,d:W,e:W,f:I,H:V,I:j,j:P,L:Q,m:J,M:O,p:function(e){return f[+(e.getHours()>=12)]},Q:he,s:me,S:X,u:N,U:B,V:_,w:$,W:q,x:null,X:null,y:z,Y:E,Z:R,"%":de},He={a:function(e){return s[e.getUTCDay()]},A:function(e){return l[e.getUTCDay()]},b:function(e){return ve[e.getUTCMonth()]},B:function(e){return g[e.getUTCMonth()]},c:null,d:k,e:k,f:ne,H:G,I:K,j:ee,L:te,m:re,M:ue,p:function(e){return f[+(e.getUTCHours()>=12)]},Q:he,s:me,S:ce,u:ie,U:oe,V:ae,w:fe,W:le,x:null,X:null,y:se,Y:ge,Z:ye,"%":de},Le={a:function(e,t,n){var r=xe.exec(t.slice(n));return r?(e.w=Ue[r[0].toLowerCase()],n+r[0].length):-1},A:function(e,t,n){var r=De.exec(t.slice(n));return r?(e.w=Ce[r[0].toLowerCase()],n+r[0].length):-1},b:function(e,t,n){var r=Se.exec(t.slice(n));return r?(e.m=Ye[r[0].toLowerCase()],n+r[0].length):-1},B:function(e,t,n){var r=pe.exec(t.slice(n));return r?(e.m=we[r[0].toLowerCase()],n+r[0].length):-1},c:function(e,t,n){return be(e,c,t,n)},d:p,e:p,f:L,H:S,I:S,j:w,L:H,m:U,M:Y,p:function(e,t,n){var r=Me.exec(t.slice(n));return r?(e.p=Te[r[0].toLowerCase()],n+r[0].length):-1},Q:Z,s:b,S:F,u:m,U:v,V:M,w:h,W:T,x:function(e,t,n){return be(e,i,t,n)},X:function(e,t,n){return be(e,a,t,n)},y:C,Y:D,Z:x,"%":A};function Ae(e,t){return function(n){var r,u,c,i=[],a=-1,f=0,l=e.length;for(n instanceof Date||(n=new Date(+n));++a<l;)37===e.charCodeAt(a)&&(i.push(e.slice(f,a)),null!=(u=o[r=e.charAt(++a)])?r=e.charAt(++a):u="e"===r?" ":"0",(c=t[r])&&(r=c(n,u)),i.push(r),f=a+1);return i.push(e.slice(f,a)),i.join("")}}function Ze(e,n){return function(c){var i,o,a=u(1900);if(be(a,e,c+="",0)!=c.length)return null;if("Q"in a)return new Date(a.Q);if("p"in a&&(a.H=a.H%12+12*a.p),"V"in a){if(a.V<1||a.V>53)return null;"w"in a||(a.w=1),"Z"in a?(i=(o=(i=r(u(a.y))).getUTCDay())>4||0===o?t.utcMonday.ceil(i):t.utcMonday(i),i=t.utcDay.offset(i,7*(a.V-1)),a.y=i.getUTCFullYear(),a.m=i.getUTCMonth(),a.d=i.getUTCDate()+(a.w+6)%7):(i=(o=(i=n(u(a.y))).getDay())>4||0===o?t.timeMonday.ceil(i):t.timeMonday(i),i=t.timeDay.offset(i,7*(a.V-1)),a.y=i.getFullYear(),a.m=i.getMonth(),a.d=i.getDate()+(a.w+6)%7)}else("W"in a||"U"in a)&&("w"in a||(a.w="u"in a?a.u%7:"W"in a?1:0),o="Z"in a?r(u(a.y)).getUTCDay():n(u(a.y)).getDay(),a.m=0,a.d="W"in a?(a.w+6)%7+7*a.W-(o+5)%7:a.w+7*a.U-(o+6)%7);return"Z"in a?(a.H+=a.Z/100|0,a.M+=a.Z%100,r(a)):n(a)}}function be(e,t,n,r){for(var u,c,i=0,a=t.length,f=n.length;i<a;){if(r>=f)return-1;if(37===(u=t.charCodeAt(i++))){if(u=t.charAt(i++),!(c=Le[u in o?t.charAt(i++):u])||(r=c(e,n,r))<0)return-1}else if(u!=n.charCodeAt(r++))return-1}return r}return Fe.x=Ae(i,Fe),Fe.X=Ae(a,Fe),Fe.c=Ae(c,Fe),He.x=Ae(i,He),He.X=Ae(a,He),He.c=Ae(c,He),{format:function(e){var t=Ae(e+="",Fe);return t.toString=function(){return e},t},parse:function(e){var t=Ze(e+="",n);return t.toString=function(){return e},t},utcFormat:function(e){var t=Ae(e+="",He);return t.toString=function(){return e},t},utcParse:function(e){var t=Ze(e,r);return t.toString=function(){return e},t}}}var i,o={"-":"",_:" ",0:"0"},a=/^\s*\d+/,f=/^%/,l=/[\\^$*+?|[\]().{}]/g;function s(e,t,n){var r=e<0?"-":"",u=(r?-e:e)+"",c=u.length;return r+(c<n?new Array(n-c+1).join(t)+u:u)}function g(e){return e.replace(l,"\\$&")}function y(e){return new RegExp("^(?:"+e.map(g).join("|")+")","i")}function d(e){for(var t={},n=-1,r=e.length;++n<r;)t[e[n].toLowerCase()]=n;return t}function h(e,t,n){var r=a.exec(t.slice(n,n+1));return r?(e.w=+r[0],n+r[0].length):-1}function m(e,t,n){var r=a.exec(t.slice(n,n+1));return r?(e.u=+r[0],n+r[0].length):-1}function v(e,t,n){var r=a.exec(t.slice(n,n+2));return r?(e.U=+r[0],n+r[0].length):-1}function M(e,t,n){var r=a.exec(t.slice(n,n+2));return r?(e.V=+r[0],n+r[0].length):-1}function T(e,t,n){var r=a.exec(t.slice(n,n+2));return r?(e.W=+r[0],n+r[0].length):-1}function D(e,t,n){var r=a.exec(t.slice(n,n+4));return r?(e.y=+r[0],n+r[0].length):-1}function C(e,t,n){var r=a.exec(t.slice(n,n+2));return r?(e.y=+r[0]+(+r[0]>68?1900:2e3),n+r[0].length):-1}function x(e,t,n){var r=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(t.slice(n,n+6));return r?(e.Z=r[1]?0:-(r[2]+(r[3]||"00")),n+r[0].length):-1}function U(e,t,n){var r=a.exec(t.slice(n,n+2));return r?(e.m=r[0]-1,n+r[0].length):-1}function p(e,t,n){var r=a.exec(t.slice(n,n+2));return r?(e.d=+r[0],n+r[0].length):-1}function w(e,t,n){var r=a.exec(t.slice(n,n+3));return r?(e.m=0,e.d=+r[0],n+r[0].length):-1}function S(e,t,n){var r=a.exec(t.slice(n,n+2));return r?(e.H=+r[0],n+r[0].length):-1}function Y(e,t,n){var r=a.exec(t.slice(n,n+2));return r?(e.M=+r[0],n+r[0].length):-1}function F(e,t,n){var r=a.exec(t.slice(n,n+2));return r?(e.S=+r[0],n+r[0].length):-1}function H(e,t,n){var r=a.exec(t.slice(n,n+3));return r?(e.L=+r[0],n+r[0].length):-1}function L(e,t,n){var r=a.exec(t.slice(n,n+6));return r?(e.L=Math.floor(r[0]/1e3),n+r[0].length):-1}function A(e,t,n){var r=f.exec(t.slice(n,n+1));return r?n+r[0].length:-1}function Z(e,t,n){var r=a.exec(t.slice(n));return r?(e.Q=+r[0],n+r[0].length):-1}function b(e,t,n){var r=a.exec(t.slice(n));return r?(e.Q=1e3*+r[0],n+r[0].length):-1}function W(e,t){return s(e.getDate(),t,2)}function V(e,t){return s(e.getHours(),t,2)}function j(e,t){return s(e.getHours()%12||12,t,2)}function P(e,n){return s(1+t.timeDay.count(t.timeYear(e),e),n,3)}function Q(e,t){return s(e.getMilliseconds(),t,3)}function I(e,t){return Q(e,t)+"000"}function J(e,t){return s(e.getMonth()+1,t,2)}function O(e,t){return s(e.getMinutes(),t,2)}function X(e,t){return s(e.getSeconds(),t,2)}function N(e){var t=e.getDay();return 0===t?7:t}function B(e,n){return s(t.timeSunday.count(t.timeYear(e),e),n,2)}function _(e,n){var r=e.getDay();return e=r>=4||0===r?t.timeThursday(e):t.timeThursday.ceil(e),s(t.timeThursday.count(t.timeYear(e),e)+(4===t.timeYear(e).getDay()),n,2)}function $(e){return e.getDay()}function q(e,n){return s(t.timeMonday.count(t.timeYear(e),e),n,2)}function z(e,t){return s(e.getFullYear()%100,t,2)}function E(e,t){return s(e.getFullYear()%1e4,t,4)}function R(e){var t=e.getTimezoneOffset();return(t>0?"-":(t*=-1,"+"))+s(t/60|0,"0",2)+s(t%60,"0",2)}function k(e,t){return s(e.getUTCDate(),t,2)}function G(e,t){return s(e.getUTCHours(),t,2)}function K(e,t){return s(e.getUTCHours()%12||12,t,2)}function ee(e,n){return s(1+t.utcDay.count(t.utcYear(e),e),n,3)}function te(e,t){return s(e.getUTCMilliseconds(),t,3)}function ne(e,t){return te(e,t)+"000"}function re(e,t){return s(e.getUTCMonth()+1,t,2)}function ue(e,t){return s(e.getUTCMinutes(),t,2)}function ce(e,t){return s(e.getUTCSeconds(),t,2)}function ie(e){var t=e.getUTCDay();return 0===t?7:t}function oe(e,n){return s(t.utcSunday.count(t.utcYear(e),e),n,2)}function ae(e,n){var r=e.getUTCDay();return e=r>=4||0===r?t.utcThursday(e):t.utcThursday.ceil(e),s(t.utcThursday.count(t.utcYear(e),e)+(4===t.utcYear(e).getUTCDay()),n,2)}function fe(e){return e.getUTCDay()}function le(e,n){return s(t.utcMonday.count(t.utcYear(e),e),n,2)}function se(e,t){return s(e.getUTCFullYear()%100,t,2)}function ge(e,t){return s(e.getUTCFullYear()%1e4,t,4)}function ye(){return"+0000"}function de(){return"%"}function he(e){return+e}function me(e){return Math.floor(+e/1e3)}function ve(t){return i=c(t),e.timeFormat=i.format,e.timeParse=i.parse,e.utcFormat=i.utcFormat,e.utcParse=i.utcParse,i}ve({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});var Me=Date.prototype.toISOString?function(e){return e.toISOString()}:e.utcFormat("%Y-%m-%dT%H:%M:%S.%LZ");var Te=+new Date("2000-01-01T00:00:00.000Z")?function(e){var t=new Date(e);return isNaN(t)?null:t}:e.utcParse("%Y-%m-%dT%H:%M:%S.%LZ");e.timeFormatDefaultLocale=ve,e.timeFormatLocale=c,e.isoFormat=Me,e.isoParse=Te,Object.defineProperty(e,"__esModule",{value:!0})});

},{"d3-time":46}],46:[function(require,module,exports){
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.d3=e.d3||{})}(this,function(e){"use strict";var t=new Date,n=new Date;function u(e,r,o,i){function a(t){return e(t=new Date(+t)),t}return a.floor=a,a.ceil=function(t){return e(t=new Date(t-1)),r(t,1),e(t),t},a.round=function(e){var t=a(e),n=a.ceil(e);return e-t<n-e?t:n},a.offset=function(e,t){return r(e=new Date(+e),null==t?1:Math.floor(t)),e},a.range=function(t,n,u){var o,i=[];if(t=a.ceil(t),u=null==u?1:Math.floor(u),!(t<n&&u>0))return i;do{i.push(o=new Date(+t)),r(t,u),e(t)}while(o<t&&t<n);return i},a.filter=function(t){return u(function(n){if(n>=n)for(;e(n),!t(n);)n.setTime(n-1)},function(e,n){if(e>=e)if(n<0)for(;++n<=0;)for(;r(e,-1),!t(e););else for(;--n>=0;)for(;r(e,1),!t(e););})},o&&(a.count=function(u,r){return t.setTime(+u),n.setTime(+r),e(t),e(n),Math.floor(o(t,n))},a.every=function(e){return e=Math.floor(e),isFinite(e)&&e>0?e>1?a.filter(i?function(t){return i(t)%e==0}:function(t){return a.count(0,t)%e==0}):a:null}),a}var r=u(function(){},function(e,t){e.setTime(+e+t)},function(e,t){return t-e});r.every=function(e){return e=Math.floor(e),isFinite(e)&&e>0?e>1?u(function(t){t.setTime(Math.floor(t/e)*e)},function(t,n){t.setTime(+t+n*e)},function(t,n){return(n-t)/e}):r:null};var o=r.range,i=6e4,a=6048e5,c=u(function(e){e.setTime(1e3*Math.floor(e/1e3))},function(e,t){e.setTime(+e+1e3*t)},function(e,t){return(t-e)/1e3},function(e){return e.getUTCSeconds()}),s=c.range,f=u(function(e){e.setTime(Math.floor(e/i)*i)},function(e,t){e.setTime(+e+t*i)},function(e,t){return(t-e)/i},function(e){return e.getMinutes()}),l=f.range,g=u(function(e){var t=e.getTimezoneOffset()*i%36e5;t<0&&(t+=36e5),e.setTime(36e5*Math.floor((+e-t)/36e5)+t)},function(e,t){e.setTime(+e+36e5*t)},function(e,t){return(t-e)/36e5},function(e){return e.getHours()}),T=g.range,d=u(function(e){e.setHours(0,0,0,0)},function(e,t){e.setDate(e.getDate()+t)},function(e,t){return(t-e-(t.getTimezoneOffset()-e.getTimezoneOffset())*i)/864e5},function(e){return e.getDate()-1}),m=d.range;function M(e){return u(function(t){t.setDate(t.getDate()-(t.getDay()+7-e)%7),t.setHours(0,0,0,0)},function(e,t){e.setDate(e.getDate()+7*t)},function(e,t){return(t-e-(t.getTimezoneOffset()-e.getTimezoneOffset())*i)/a})}var y=M(0),h=M(1),C=M(2),U=M(3),F=M(4),D=M(5),Y=M(6),v=y.range,H=h.range,S=C.range,p=U.range,W=F.range,w=D.range,O=Y.range,z=u(function(e){e.setDate(1),e.setHours(0,0,0,0)},function(e,t){e.setMonth(e.getMonth()+t)},function(e,t){return t.getMonth()-e.getMonth()+12*(t.getFullYear()-e.getFullYear())},function(e){return e.getMonth()}),k=z.range,x=u(function(e){e.setMonth(0,1),e.setHours(0,0,0,0)},function(e,t){e.setFullYear(e.getFullYear()+t)},function(e,t){return t.getFullYear()-e.getFullYear()},function(e){return e.getFullYear()});x.every=function(e){return isFinite(e=Math.floor(e))&&e>0?u(function(t){t.setFullYear(Math.floor(t.getFullYear()/e)*e),t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,n){t.setFullYear(t.getFullYear()+n*e)}):null};var b=x.range,j=u(function(e){e.setUTCSeconds(0,0)},function(e,t){e.setTime(+e+t*i)},function(e,t){return(t-e)/i},function(e){return e.getUTCMinutes()}),_=j.range,I=u(function(e){e.setUTCMinutes(0,0,0)},function(e,t){e.setTime(+e+36e5*t)},function(e,t){return(t-e)/36e5},function(e){return e.getUTCHours()}),P=I.range,q=u(function(e){e.setUTCHours(0,0,0,0)},function(e,t){e.setUTCDate(e.getUTCDate()+t)},function(e,t){return(t-e)/864e5},function(e){return e.getUTCDate()-1}),A=q.range;function B(e){return u(function(t){t.setUTCDate(t.getUTCDate()-(t.getUTCDay()+7-e)%7),t.setUTCHours(0,0,0,0)},function(e,t){e.setUTCDate(e.getUTCDate()+7*t)},function(e,t){return(t-e)/a})}var E=B(0),G=B(1),J=B(2),K=B(3),L=B(4),N=B(5),Q=B(6),R=E.range,V=G.range,X=J.range,Z=K.range,$=L.range,ee=N.range,te=Q.range,ne=u(function(e){e.setUTCDate(1),e.setUTCHours(0,0,0,0)},function(e,t){e.setUTCMonth(e.getUTCMonth()+t)},function(e,t){return t.getUTCMonth()-e.getUTCMonth()+12*(t.getUTCFullYear()-e.getUTCFullYear())},function(e){return e.getUTCMonth()}),ue=ne.range,re=u(function(e){e.setUTCMonth(0,1),e.setUTCHours(0,0,0,0)},function(e,t){e.setUTCFullYear(e.getUTCFullYear()+t)},function(e,t){return t.getUTCFullYear()-e.getUTCFullYear()},function(e){return e.getUTCFullYear()});re.every=function(e){return isFinite(e=Math.floor(e))&&e>0?u(function(t){t.setUTCFullYear(Math.floor(t.getUTCFullYear()/e)*e),t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n*e)}):null};var oe=re.range;e.timeInterval=u,e.timeMillisecond=r,e.timeMilliseconds=o,e.utcMillisecond=r,e.utcMilliseconds=o,e.timeSecond=c,e.timeSeconds=s,e.utcSecond=c,e.utcSeconds=s,e.timeMinute=f,e.timeMinutes=l,e.timeHour=g,e.timeHours=T,e.timeDay=d,e.timeDays=m,e.timeWeek=y,e.timeWeeks=v,e.timeSunday=y,e.timeSundays=v,e.timeMonday=h,e.timeMondays=H,e.timeTuesday=C,e.timeTuesdays=S,e.timeWednesday=U,e.timeWednesdays=p,e.timeThursday=F,e.timeThursdays=W,e.timeFriday=D,e.timeFridays=w,e.timeSaturday=Y,e.timeSaturdays=O,e.timeMonth=z,e.timeMonths=k,e.timeYear=x,e.timeYears=b,e.utcMinute=j,e.utcMinutes=_,e.utcHour=I,e.utcHours=P,e.utcDay=q,e.utcDays=A,e.utcWeek=E,e.utcWeeks=R,e.utcSunday=E,e.utcSundays=R,e.utcMonday=G,e.utcMondays=V,e.utcTuesday=J,e.utcTuesdays=X,e.utcWednesday=K,e.utcWednesdays=Z,e.utcThursday=L,e.utcThursdays=$,e.utcFriday=N,e.utcFridays=ee,e.utcSaturday=Q,e.utcSaturdays=te,e.utcMonth=ne,e.utcMonths=ue,e.utcYear=re,e.utcYears=oe,Object.defineProperty(e,"__esModule",{value:!0})});

},{}],47:[function(require,module,exports){
!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n(t.d3=t.d3||{})}(this,function(t){"use strict";var n,e,o=0,i=0,r=0,u=1e3,l=0,c=0,a=0,f="object"==typeof performance&&performance.now?performance:Date,s="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function _(){return c||(s(m),c=f.now()+a)}function m(){c=0}function p(){this._call=this._time=this._next=null}function w(t,n,e){var o=new p;return o.restart(t,n,e),o}function d(){_(),++o;for(var t,e=n;e;)(t=c-e._time)>=0&&e._call.call(null,t),e=e._next;--o}function h(){c=(l=f.now())+a,o=i=0;try{d()}finally{o=0,function(){var t,o,i=n,r=1/0;for(;i;)i._call?(r>i._time&&(r=i._time),t=i,i=i._next):(o=i._next,i._next=null,i=t?t._next=o:n=o);e=t,v(r)}(),c=0}}function y(){var t=f.now(),n=t-l;n>u&&(a-=n,l=t)}function v(t){o||(i&&(i=clearTimeout(i)),t-c>24?(t<1/0&&(i=setTimeout(h,t-f.now()-a)),r&&(r=clearInterval(r))):(r||(l=f.now(),r=setInterval(y,u)),o=1,s(h)))}p.prototype=w.prototype={constructor:p,restart:function(t,o,i){if("function"!=typeof t)throw new TypeError("callback is not a function");i=(null==i?_():+i)+(null==o?0:+o),this._next||e===this||(e?e._next=this:n=this,e=this),this._call=t,this._time=i,v()},stop:function(){this._call&&(this._call=null,this._time=1/0,v())}};t.now=_,t.timer=w,t.timerFlush=d,t.timeout=function(t,n,e){var o=new p;return n=null==n?0:+n,o.restart(function(e){o.stop(),t(e+n)},n,e),o},t.interval=function(t,n,e){var o=new p,i=n;return null==n?(o.restart(t,n,e),o):(n=+n,e=null==e?_():+e,o.restart(function r(u){u+=i,o.restart(r,i+=n,e),t(u)},n,e),o)},Object.defineProperty(t,"__esModule",{value:!0})});

},{}],48:[function(require,module,exports){
!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("d3-selection"),require("d3-dispatch"),require("d3-timer"),require("d3-interpolate"),require("d3-color"),require("d3-ease")):"function"==typeof define&&define.amd?define(["exports","d3-selection","d3-dispatch","d3-timer","d3-interpolate","d3-color","d3-ease"],n):n(t.d3=t.d3||{},t.d3,t.d3,t.d3,t.d3,t.d3,t.d3)}(this,function(t,n,e,r,i,o,a){"use strict";var u=e.dispatch("start","end","interrupt"),s=[],l=0,f=1,c=2,h=3,d=4,_=5,p=6,v=function(t,n,e,i,o,a){var v=t.__transition;if(v){if(e in v)return}else t.__transition={};!function(t,n,e){var i,o=t.__transition;function a(l){var _,v,y,m;if(e.state!==f)return s();for(_ in o)if((m=o[_]).name===e.name){if(m.state===h)return r.timeout(a);m.state===d?(m.state=p,m.timer.stop(),m.on.call("interrupt",t,t.__data__,m.index,m.group),delete o[_]):+_<n&&(m.state=p,m.timer.stop(),delete o[_])}if(r.timeout(function(){e.state===h&&(e.state=d,e.timer.restart(u,e.delay,e.time),u(l))}),e.state=c,e.on.call("start",t,t.__data__,e.index,e.group),e.state===c){for(e.state=h,i=new Array(y=e.tween.length),_=0,v=-1;_<y;++_)(m=e.tween[_].value.call(t,t.__data__,e.index,e.group))&&(i[++v]=m);i.length=v+1}}function u(n){for(var r=n<e.duration?e.ease.call(null,n/e.duration):(e.timer.restart(s),e.state=_,1),o=-1,a=i.length;++o<a;)i[o].call(null,r);e.state===_&&(e.on.call("end",t,t.__data__,e.index,e.group),s())}function s(){for(var r in e.state=p,e.timer.stop(),delete o[n],o)return;delete t.__transition}o[n]=e,e.timer=r.timer(function(t){e.state=f,e.timer.restart(a,e.delay,e.time),e.delay<=t&&a(t-e.delay)},0,e.time)}(t,e,{name:n,index:i,group:o,on:u,tween:s,time:a.time,delay:a.delay,duration:a.duration,ease:a.ease,timer:null,state:l})};function y(t,n){var e=w(t,n);if(e.state>l)throw new Error("too late; already scheduled");return e}function m(t,n){var e=w(t,n);if(e.state>c)throw new Error("too late; already started");return e}function w(t,n){var e=t.__transition;if(!e||!(e=e[n]))throw new Error("transition not found");return e}var g=function(t,n){var e,r,i,o=t.__transition,a=!0;if(o){for(i in n=null==n?null:n+"",o)(e=o[i]).name===n?(r=e.state>c&&e.state<_,e.state=p,e.timer.stop(),r&&e.on.call("interrupt",t,t.__data__,e.index,e.group),delete o[i]):a=!1;a&&delete t.__transition}};function b(t,n,e){var r=t._id;return t.each(function(){var t=m(this,r);(t.value||(t.value={}))[n]=e.apply(this,arguments)}),function(t){return w(t,r).value[n]}}var A=function(t,n){var e;return("number"==typeof n?i.interpolateNumber:n instanceof o.color?i.interpolateRgb:(e=o.color(n))?(n=e,i.interpolateRgb):i.interpolateString)(t,n)};var x=n.selection.prototype.constructor;var E=0;function N(t,n,e,r){this._groups=t,this._parents=n,this._name=e,this._id=r}function S(t){return n.selection().transition(t)}function T(){return++E}var q=n.selection.prototype;N.prototype=S.prototype={constructor:N,select:function(t){var e=this._name,r=this._id;"function"!=typeof t&&(t=n.selector(t));for(var i=this._groups,o=i.length,a=new Array(o),u=0;u<o;++u)for(var s,l,f=i[u],c=f.length,h=a[u]=new Array(c),d=0;d<c;++d)(s=f[d])&&(l=t.call(s,s.__data__,d,f))&&("__data__"in s&&(l.__data__=s.__data__),h[d]=l,v(h[d],e,r,d,h,w(s,r)));return new N(a,this._parents,e,r)},selectAll:function(t){var e=this._name,r=this._id;"function"!=typeof t&&(t=n.selectorAll(t));for(var i=this._groups,o=i.length,a=[],u=[],s=0;s<o;++s)for(var l,f=i[s],c=f.length,h=0;h<c;++h)if(l=f[h]){for(var d,_=t.call(l,l.__data__,h,f),p=w(l,r),y=0,m=_.length;y<m;++y)(d=_[y])&&v(d,e,r,y,_,p);a.push(_),u.push(l)}return new N(a,u,e,r)},filter:function(t){"function"!=typeof t&&(t=n.matcher(t));for(var e=this._groups,r=e.length,i=new Array(r),o=0;o<r;++o)for(var a,u=e[o],s=u.length,l=i[o]=[],f=0;f<s;++f)(a=u[f])&&t.call(a,a.__data__,f,u)&&l.push(a);return new N(i,this._parents,this._name,this._id)},merge:function(t){if(t._id!==this._id)throw new Error;for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),a=new Array(r),u=0;u<o;++u)for(var s,l=n[u],f=e[u],c=l.length,h=a[u]=new Array(c),d=0;d<c;++d)(s=l[d]||f[d])&&(h[d]=s);for(;u<r;++u)a[u]=n[u];return new N(a,this._parents,this._name,this._id)},selection:function(){return new x(this._groups,this._parents)},transition:function(){for(var t=this._name,n=this._id,e=T(),r=this._groups,i=r.length,o=0;o<i;++o)for(var a,u=r[o],s=u.length,l=0;l<s;++l)if(a=u[l]){var f=w(a,n);v(a,t,e,l,u,{time:f.time+f.delay+f.duration,delay:0,duration:f.duration,ease:f.ease})}return new N(r,this._parents,t,e)},call:q.call,nodes:q.nodes,node:q.node,size:q.size,empty:q.empty,each:q.each,on:function(t,n){var e=this._id;return arguments.length<2?w(this.node(),e).on.on(t):this.each(function(t,n,e){var r,i,o=function(t){return(t+"").trim().split(/^|\s+/).every(function(t){var n=t.indexOf(".");return n>=0&&(t=t.slice(0,n)),!t||"start"===t})}(n)?y:m;return function(){var a=o(this,t),u=a.on;u!==r&&(i=(r=u).copy()).on(n,e),a.on=i}}(e,t,n))},attr:function(t,e){var r=n.namespace(t),o="transform"===r?i.interpolateTransformSvg:A;return this.attrTween(t,"function"==typeof e?(r.local?function(t,n,e){var r,i,o;return function(){var a,u=e(this);if(null!=u)return(a=this.getAttributeNS(t.space,t.local))===u?null:a===r&&u===i?o:o=n(r=a,i=u);this.removeAttributeNS(t.space,t.local)}}:function(t,n,e){var r,i,o;return function(){var a,u=e(this);if(null!=u)return(a=this.getAttribute(t))===u?null:a===r&&u===i?o:o=n(r=a,i=u);this.removeAttribute(t)}})(r,o,b(this,"attr."+t,e)):null==e?(r.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}})(r):(r.local?function(t,n,e){var r,i;return function(){var o=this.getAttributeNS(t.space,t.local);return o===e?null:o===r?i:i=n(r=o,e)}}:function(t,n,e){var r,i;return function(){var o=this.getAttribute(t);return o===e?null:o===r?i:i=n(r=o,e)}})(r,o,e+""))},attrTween:function(t,e){var r="attr."+t;if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==e)return this.tween(r,null);if("function"!=typeof e)throw new Error;var i=n.namespace(t);return this.tween(r,(i.local?function(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttributeNS(t.space,t.local,r(n))}}return e._value=n,e}:function(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttribute(t,r(n))}}return e._value=n,e})(i,e))},style:function(t,e,r){var o="transform"==(t+="")?i.interpolateTransformCss:A;return null==e?this.styleTween(t,function(t,e){var r,i,o;return function(){var a=n.style(this,t),u=(this.style.removeProperty(t),n.style(this,t));return a===u?null:a===r&&u===i?o:o=e(r=a,i=u)}}(t,o)).on("end.style."+t,function(t){return function(){this.style.removeProperty(t)}}(t)):this.styleTween(t,"function"==typeof e?function(t,e,r){var i,o,a;return function(){var u=n.style(this,t),s=r(this);return null==s&&(this.style.removeProperty(t),s=n.style(this,t)),u===s?null:u===i&&s===o?a:a=e(i=u,o=s)}}(t,o,b(this,"style."+t,e)):function(t,e,r){var i,o;return function(){var a=n.style(this,t);return a===r?null:a===i?o:o=e(i=a,r)}}(t,o,e+""),r)},styleTween:function(t,n,e){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==n)return this.tween(r,null);if("function"!=typeof n)throw new Error;return this.tween(r,function(t,n,e){function r(){var r=this,i=n.apply(r,arguments);return i&&function(n){r.style.setProperty(t,i(n),e)}}return r._value=n,r}(t,n,null==e?"":e))},text:function(t){return this.tween("text","function"==typeof t?function(t){return function(){var n=t(this);this.textContent=null==n?"":n}}(b(this,"text",t)):function(t){return function(){this.textContent=t}}(null==t?"":t+""))},remove:function(){return this.on("end.remove",(t=this._id,function(){var n=this.parentNode;for(var e in this.__transition)if(+e!==t)return;n&&n.removeChild(this)}));var t},tween:function(t,n){var e=this._id;if(t+="",arguments.length<2){for(var r,i=w(this.node(),e).tween,o=0,a=i.length;o<a;++o)if((r=i[o]).name===t)return r.value;return null}return this.each((null==n?function(t,n){var e,r;return function(){var i=m(this,t),o=i.tween;if(o!==e)for(var a=0,u=(r=e=o).length;a<u;++a)if(r[a].name===n){(r=r.slice()).splice(a,1);break}i.tween=r}}:function(t,n,e){var r,i;if("function"!=typeof e)throw new Error;return function(){var o=m(this,t),a=o.tween;if(a!==r){i=(r=a).slice();for(var u={name:n,value:e},s=0,l=i.length;s<l;++s)if(i[s].name===n){i[s]=u;break}s===l&&i.push(u)}o.tween=i}})(e,t,n))},delay:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){y(this,t).delay=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){y(this,t).delay=n}})(n,t)):w(this.node(),n).delay},duration:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){m(this,t).duration=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){m(this,t).duration=n}})(n,t)):w(this.node(),n).duration},ease:function(t){var n=this._id;return arguments.length?this.each(function(t,n){if("function"!=typeof n)throw new Error;return function(){m(this,t).ease=n}}(n,t)):w(this.node(),n).ease}};var C={time:null,delay:0,duration:250,ease:a.easeCubicInOut};function P(t,n){for(var e;!(e=t.__transition)||!(e=e[n]);)if(!(t=t.parentNode))return C.time=r.now(),C;return e}n.selection.prototype.interrupt=function(t){return this.each(function(){g(this,t)})},n.selection.prototype.transition=function(t){var n,e;t instanceof N?(n=t._id,t=t._name):(n=T(),(e=C).time=r.now(),t=null==t?null:t+"");for(var i=this._groups,o=i.length,a=0;a<o;++a)for(var u,s=i[a],l=s.length,f=0;f<l;++f)(u=s[f])&&v(u,t,n,f,s,e||P(u,n));return new N(i,this._parents,t,n)};var O=[null];t.transition=S,t.active=function(t,n){var e,r,i=t.__transition;if(i)for(r in n=null==n?null:n+"",i)if((e=i[r]).state>f&&e.name===n)return new N([[t]],O,n,+r);return null},t.interrupt=g,Object.defineProperty(t,"__esModule",{value:!0})});

},{"d3-color":25,"d3-dispatch":27,"d3-ease":30,"d3-interpolate":36,"d3-selection":43,"d3-timer":47}],49:[function(require,module,exports){
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.d3=e.d3||{})}(this,function(e){"use strict";var t=function(e){return function(){return e}};function n(e){return e[0]}function i(e){return e[1]}function r(){this._=null}function f(e){e.U=e.C=e.L=e.R=e.P=e.N=null}function s(e,t){var n=t,i=t.R,r=n.U;r?r.L===n?r.L=i:r.R=i:e._=i,i.U=r,n.U=i,n.R=i.L,n.R&&(n.R.U=n),i.L=n}function u(e,t){var n=t,i=t.L,r=n.U;r?r.L===n?r.L=i:r.R=i:e._=i,i.U=r,n.U=i,n.L=i.R,n.L&&(n.L.U=n),i.R=n}function l(e){for(;e.L;)e=e.L;return e}function a(e,t,n,i){var r=[null,null],f=A.push(r)-1;return r.left=e,r.right=t,n&&h(r,e,t,n),i&&h(r,t,e,i),w[e.index].halfedges.push(f),w[t.index].halfedges.push(f),r}function o(e,t,n){var i=[t,n];return i.left=e,i}function h(e,t,n,i){e[0]||e[1]?e.left===n?e[1]=i:e[0]=i:(e[0]=i,e.left=t,e.right=n)}function c(e,t,n,i,r){var f,s=e[0],u=e[1],l=s[0],a=s[1],o=0,h=1,c=u[0]-l,d=u[1]-a;if(f=t-l,c||!(f>0)){if(f/=c,c<0){if(f<o)return;f<h&&(h=f)}else if(c>0){if(f>h)return;f>o&&(o=f)}if(f=i-l,c||!(f<0)){if(f/=c,c<0){if(f>h)return;f>o&&(o=f)}else if(c>0){if(f<o)return;f<h&&(h=f)}if(f=n-a,d||!(f>0)){if(f/=d,d<0){if(f<o)return;f<h&&(h=f)}else if(d>0){if(f>h)return;f>o&&(o=f)}if(f=r-a,d||!(f<0)){if(f/=d,d<0){if(f>h)return;f>o&&(o=f)}else if(d>0){if(f<o)return;f<h&&(h=f)}return!(o>0||h<1)||(o>0&&(e[0]=[l+o*c,a+o*d]),h<1&&(e[1]=[l+h*c,a+h*d]),!0)}}}}}function d(e,t,n,i,r){var f=e[1];if(f)return!0;var s,u,l=e[0],a=e.left,o=e.right,h=a[0],c=a[1],d=o[0],v=o[1],g=(h+d)/2,C=(c+v)/2;if(v===c){if(g<t||g>=i)return;if(h>d){if(l){if(l[1]>=r)return}else l=[g,n];f=[g,r]}else{if(l){if(l[1]<n)return}else l=[g,r];f=[g,n]}}else if(u=C-(s=(h-d)/(v-c))*g,s<-1||s>1)if(h>d){if(l){if(l[1]>=r)return}else l=[(n-u)/s,n];f=[(r-u)/s,r]}else{if(l){if(l[1]<n)return}else l=[(r-u)/s,r];f=[(n-u)/s,n]}else if(c<v){if(l){if(l[0]>=i)return}else l=[t,s*t+u];f=[i,s*i+u]}else{if(l){if(l[0]<t)return}else l=[i,s*i+u];f=[t,s*t+u]}return e[0]=l,e[1]=f,!0}function v(e,t){var n=e.site,i=t.left,r=t.right;return n===r&&(r=i,i=n),r?Math.atan2(r[1]-i[1],r[0]-i[0]):(n===i?(i=t[1],r=t[0]):(i=t[0],r=t[1]),Math.atan2(i[0]-r[0],r[1]-i[1]))}function g(e,t){return t[+(t.left!==e.site)]}function C(e,t){return t[+(t.left===e.site)]}r.prototype={constructor:r,insert:function(e,t){var n,i,r;if(e){if(t.P=e,t.N=e.N,e.N&&(e.N.P=t),e.N=t,e.R){for(e=e.R;e.L;)e=e.L;e.L=t}else e.R=t;n=e}else this._?(e=l(this._),t.P=null,t.N=e,e.P=e.L=t,n=e):(t.P=t.N=null,this._=t,n=null);for(t.L=t.R=null,t.U=n,t.C=!0,e=t;n&&n.C;)n===(i=n.U).L?(r=i.R)&&r.C?(n.C=r.C=!1,i.C=!0,e=i):(e===n.R&&(s(this,n),n=(e=n).U),n.C=!1,i.C=!0,u(this,i)):(r=i.L)&&r.C?(n.C=r.C=!1,i.C=!0,e=i):(e===n.L&&(u(this,n),n=(e=n).U),n.C=!1,i.C=!0,s(this,i)),n=e.U;this._.C=!1},remove:function(e){e.N&&(e.N.P=e.P),e.P&&(e.P.N=e.N),e.N=e.P=null;var t,n,i,r=e.U,f=e.L,a=e.R;if(n=f?a?l(a):f:a,r?r.L===e?r.L=n:r.R=n:this._=n,f&&a?(i=n.C,n.C=e.C,n.L=f,f.U=n,n!==a?(r=n.U,n.U=e.U,e=n.R,r.L=e,n.R=a,a.U=n):(n.U=r,r=n,e=n.R)):(i=e.C,e=n),e&&(e.U=r),!i)if(e&&e.C)e.C=!1;else{do{if(e===this._)break;if(e===r.L){if((t=r.R).C&&(t.C=!1,r.C=!0,s(this,r),t=r.R),t.L&&t.L.C||t.R&&t.R.C){t.R&&t.R.C||(t.L.C=!1,t.C=!0,u(this,t),t=r.R),t.C=r.C,r.C=t.R.C=!1,s(this,r),e=this._;break}}else if((t=r.L).C&&(t.C=!1,r.C=!0,u(this,r),t=r.L),t.L&&t.L.C||t.R&&t.R.C){t.L&&t.L.C||(t.R.C=!1,t.C=!0,s(this,t),t=r.L),t.C=r.C,r.C=t.L.C=!1,u(this,r),e=this._;break}t.C=!0,e=r,r=r.U}while(!e.C);e&&(e.C=!1)}}};var p,L=[];function R(e){var t=e.P,n=e.N;if(t&&n){var i=t.site,r=e.site,s=n.site;if(i!==s){var u=r[0],l=r[1],a=i[0]-u,o=i[1]-l,h=s[0]-u,c=s[1]-l,d=2*(a*c-o*h);if(!(d>=-q)){var v=a*a+o*o,g=h*h+c*c,C=(c*v-o*g)/d,R=(a*g-h*v)/d,y=L.pop()||new function(){f(this),this.x=this.y=this.arc=this.site=this.cy=null};y.arc=e,y.site=r,y.x=C+u,y.y=(y.cy=R+l)+Math.sqrt(C*C+R*R),e.circle=y;for(var b=null,M=m._;M;)if(y.y<M.y||y.y===M.y&&y.x<=M.x){if(!M.L){b=M.P;break}M=M.L}else{if(!M.R){b=M;break}M=M.R}m.insert(b,y),b||(p=y)}}}}function y(e){var t=e.circle;t&&(t.P||(p=t.N),m.remove(t),L.push(t),f(t),e.circle=null)}var b=[];function M(e){var t=b.pop()||new function(){f(this),this.edge=this.site=this.circle=null};return t.site=e,t}function U(e){y(e),k.remove(e),b.push(e),f(e)}function x(e){var t=e.circle,n=t.x,i=t.cy,r=[n,i],f=e.P,s=e.N,u=[e];U(e);for(var l=f;l.circle&&Math.abs(n-l.circle.x)<j&&Math.abs(i-l.circle.cy)<j;)f=l.P,u.unshift(l),U(l),l=f;u.unshift(l),y(l);for(var o=s;o.circle&&Math.abs(n-o.circle.x)<j&&Math.abs(i-o.circle.cy)<j;)s=o.N,u.push(o),U(o),o=s;u.push(o),y(o);var c,d=u.length;for(c=1;c<d;++c)o=u[c],l=u[c-1],h(o.edge,l.site,o.site,r);l=u[0],(o=u[d-1]).edge=a(l.site,o.site,null,r),R(l),R(o)}function N(e){for(var t,n,i,r,f=e[0],s=e[1],u=k._;u;)if((i=P(u,s)-f)>j)u=u.L;else{if(!((r=f-_(u,s))>j)){i>-j?(t=u.P,n=u):r>-j?(t=u,n=u.N):t=n=u;break}if(!u.R){t=u;break}u=u.R}!function(e){w[e.index]={site:e,halfedges:[]}}(e);var l=M(e);if(k.insert(t,l),t||n){if(t===n)return y(t),n=M(t.site),k.insert(l,n),l.edge=n.edge=a(t.site,l.site),R(t),void R(n);if(n){y(t),y(n);var o=t.site,c=o[0],d=o[1],v=e[0]-c,g=e[1]-d,C=n.site,p=C[0]-c,L=C[1]-d,b=2*(v*L-g*p),U=v*v+g*g,x=p*p+L*L,N=[(L*U-g*x)/b+c,(v*x-p*U)/b+d];h(n.edge,o,C,N),l.edge=a(o,e,null,N),n.edge=a(e,C,null,N),R(t),R(n)}else l.edge=a(t.site,l.site)}}function P(e,t){var n=e.site,i=n[0],r=n[1],f=r-t;if(!f)return i;var s=e.P;if(!s)return-1/0;var u=(n=s.site)[0],l=n[1],a=l-t;if(!a)return u;var o=u-i,h=1/f-1/a,c=o/a;return h?(-c+Math.sqrt(c*c-2*h*(o*o/(-2*a)-l+a/2+r-f/2)))/h+i:(i+u)/2}function _(e,t){var n=e.N;if(n)return P(n,t);var i=e.site;return i[1]===t?i[0]:1/0}var k,w,m,A,j=1e-6,q=1e-12;function E(e,t){return t[1]-e[1]||t[0]-e[0]}function z(e,t){var n,i,f,s=e.sort(E).pop();for(A=[],w=new Array(e.length),k=new r,m=new r;;)if(f=p,s&&(!f||s[1]<f.y||s[1]===f.y&&s[0]<f.x))s[0]===n&&s[1]===i||(N(s),n=s[0],i=s[1]),s=e.pop();else{if(!f)break;x(f.arc)}if(function(){for(var e,t,n,i,r=0,f=w.length;r<f;++r)if((e=w[r])&&(i=(t=e.halfedges).length)){var s=new Array(i),u=new Array(i);for(n=0;n<i;++n)s[n]=n,u[n]=v(e,A[t[n]]);for(s.sort(function(e,t){return u[t]-u[e]}),n=0;n<i;++n)u[n]=t[s[n]];for(n=0;n<i;++n)t[n]=u[n]}}(),t){var u=+t[0][0],l=+t[0][1],a=+t[1][0],h=+t[1][1];!function(e,t,n,i){for(var r,f=A.length;f--;)d(r=A[f],e,t,n,i)&&c(r,e,t,n,i)&&(Math.abs(r[0][0]-r[1][0])>j||Math.abs(r[0][1]-r[1][1])>j)||delete A[f]}(u,l,a,h),function(e,t,n,i){var r,f,s,u,l,a,h,c,d,v,p,L,R=w.length,y=!0;for(r=0;r<R;++r)if(f=w[r]){for(s=f.site,u=(l=f.halfedges).length;u--;)A[l[u]]||l.splice(u,1);for(u=0,a=l.length;u<a;)p=(v=C(f,A[l[u]]))[0],L=v[1],c=(h=g(f,A[l[++u%a]]))[0],d=h[1],(Math.abs(p-c)>j||Math.abs(L-d)>j)&&(l.splice(u,0,A.push(o(s,v,Math.abs(p-e)<j&&i-L>j?[e,Math.abs(c-e)<j?d:i]:Math.abs(L-i)<j&&n-p>j?[Math.abs(d-i)<j?c:n,i]:Math.abs(p-n)<j&&L-t>j?[n,Math.abs(c-n)<j?d:t]:Math.abs(L-t)<j&&p-e>j?[Math.abs(d-t)<j?c:e,t]:null))-1),++a);a&&(y=!1)}if(y){var b,M,U,x=1/0;for(r=0,y=null;r<R;++r)(f=w[r])&&(U=(b=(s=f.site)[0]-e)*b+(M=s[1]-t)*M)<x&&(x=U,y=f);if(y){var N=[e,t],P=[e,i],_=[n,i],k=[n,t];y.halfedges.push(A.push(o(s=y.site,N,P))-1,A.push(o(s,P,_))-1,A.push(o(s,_,k))-1,A.push(o(s,k,N))-1)}}for(r=0;r<R;++r)(f=w[r])&&(f.halfedges.length||delete w[r])}(u,l,a,h)}this.edges=A,this.cells=w,k=m=A=w=null}z.prototype={constructor:z,polygons:function(){var e=this.edges;return this.cells.map(function(t){var n=t.halfedges.map(function(n){return g(t,e[n])});return n.data=t.site.data,n})},triangles:function(){var e=[],t=this.edges;return this.cells.forEach(function(n,i){if(f=(r=n.halfedges).length)for(var r,f,s,u,l,a,o=n.site,h=-1,c=t[r[f-1]],d=c.left===o?c.right:c.left;++h<f;)s=d,d=(c=t[r[h]]).left===o?c.right:c.left,s&&d&&i<s.index&&i<d.index&&(l=s,a=d,((u=o)[0]-a[0])*(l[1]-u[1])-(u[0]-l[0])*(a[1]-u[1])<0)&&e.push([o.data,s.data,d.data])}),e},links:function(){return this.edges.filter(function(e){return e.right}).map(function(e){return{source:e.left.data,target:e.right.data}})},find:function(e,t,n){for(var i,r,f=this,s=f._found||0,u=f.cells.length;!(r=f.cells[s]);)if(++s>=u)return null;var l=e-r.site[0],a=t-r.site[1],o=l*l+a*a;do{r=f.cells[i=s],s=null,r.halfedges.forEach(function(n){var i=f.edges[n],u=i.left;if(u!==r.site&&u||(u=i.right)){var l=e-u[0],a=t-u[1],h=l*l+a*a;h<o&&(o=h,s=u.index)}})}while(null!==s);return f._found=i,null==n||o<=n*n?r.site:null}};e.voronoi=function(){var e=n,r=i,f=null;function s(t){return new z(t.map(function(n,i){var f=[Math.round(e(n,i,t)/j)*j,Math.round(r(n,i,t)/j)*j];return f.index=i,f.data=n,f}),f)}return s.polygons=function(e){return s(e).polygons()},s.links=function(e){return s(e).links()},s.triangles=function(e){return s(e).triangles()},s.x=function(n){return arguments.length?(e="function"==typeof n?n:t(+n),s):e},s.y=function(e){return arguments.length?(r="function"==typeof e?e:t(+e),s):r},s.extent=function(e){return arguments.length?(f=null==e?null:[[+e[0][0],+e[0][1]],[+e[1][0],+e[1][1]]],s):f&&[[f[0][0],f[0][1]],[f[1][0],f[1][1]]]},s.size=function(e){return arguments.length?(f=null==e?null:[[0,0],[+e[0],+e[1]]],s):f&&[f[1][0]-f[0][0],f[1][1]-f[0][1]]},s},Object.defineProperty(e,"__esModule",{value:!0})});

},{}],50:[function(require,module,exports){
!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("d3-dispatch"),require("d3-drag"),require("d3-interpolate"),require("d3-selection"),require("d3-transition")):"function"==typeof define&&define.amd?define(["exports","d3-dispatch","d3-drag","d3-interpolate","d3-selection","d3-transition"],n):n(t.d3=t.d3||{},t.d3,t.d3,t.d3,t.d3,t.d3)}(this,function(t,n,e,o,i,r){"use strict";var u=function(t){return function(){return t}};function h(t,n,e){this.k=t,this.x=n,this.y=e}h.prototype={constructor:h,scale:function(t){return 1===t?this:new h(this.k*t,this.x,this.y)},translate:function(t,n){return 0===t&0===n?this:new h(this.k,this.x+this.k*t,this.y+this.k*n)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var s=new h(1,0,0);function c(t){return t.__zoom||s}function a(){i.event.stopImmediatePropagation()}c.prototype=h.prototype;var f=function(){i.event.preventDefault(),i.event.stopImmediatePropagation()};function l(){return!i.event.button}function m(){var t,n,e=this;return e instanceof SVGElement?(t=(e=e.ownerSVGElement||e).width.baseVal.value,n=e.height.baseVal.value):(t=e.clientWidth,n=e.clientHeight),[[0,0],[t,n]]}function p(){return this.__zoom||s}function d(){return-i.event.deltaY*(i.event.deltaMode?120:1)/500}function v(){return"ontouchstart"in this}function y(t,n,e){var o=t.invertX(n[0][0])-e[0][0],i=t.invertX(n[1][0])-e[1][0],r=t.invertY(n[0][1])-e[0][1],u=t.invertY(n[1][1])-e[1][1];return t.translate(i>o?(o+i)/2:Math.min(0,o)||Math.max(0,i),u>r?(r+u)/2:Math.min(0,r)||Math.max(0,u))}t.zoom=function(){var t,c,z=l,_=m,g=y,k=d,x=v,w=[0,1/0],M=[[-1/0,-1/0],[1/0,1/0]],T=250,b=o.interpolateZoom,Y=[],X=n.dispatch("start","zoom","end"),q=500,E=150,D=0;function V(t){t.property("__zoom",p).on("wheel.zoom",H).on("mousedown.zoom",K).on("dblclick.zoom",O).filter(x).on("touchstart.zoom",W).on("touchmove.zoom",Z).on("touchend.zoom touchcancel.zoom",A).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function I(t,n){return(n=Math.max(w[0],Math.min(w[1],n)))===t.k?t:new h(n,t.x,t.y)}function P(t,n,e){var o=n[0]-e[0]*t.k,i=n[1]-e[1]*t.k;return o===t.x&&i===t.y?t:new h(t.k,o,i)}function S(t){return[(+t[0][0]+ +t[1][0])/2,(+t[0][1]+ +t[1][1])/2]}function j(t,n,e){t.on("start.zoom",function(){B(this,arguments).start()}).on("interrupt.zoom end.zoom",function(){B(this,arguments).end()}).tween("zoom",function(){var t=arguments,o=B(this,t),i=_.apply(this,t),r=e||S(i),u=Math.max(i[1][0]-i[0][0],i[1][1]-i[0][1]),s=this.__zoom,c="function"==typeof n?n.apply(this,t):n,a=b(s.invert(r).concat(u/s.k),c.invert(r).concat(u/c.k));return function(t){if(1===t)t=c;else{var n=a(t),e=u/n[2];t=new h(e,r[0]-n[0]*e,r[1]-n[1]*e)}o.zoom(null,t)}})}function B(t,n){for(var e,o=0,i=Y.length;o<i;++o)if((e=Y[o]).that===t)return e;return new G(t,n)}function G(t,n){this.that=t,this.args=n,this.index=-1,this.active=0,this.extent=_.apply(t,n)}function H(){if(z.apply(this,arguments)){var t=B(this,arguments),n=this.__zoom,e=Math.max(w[0],Math.min(w[1],n.k*Math.pow(2,k.apply(this,arguments)))),o=i.mouse(this);if(t.wheel)t.mouse[0][0]===o[0]&&t.mouse[0][1]===o[1]||(t.mouse[1]=n.invert(t.mouse[0]=o)),clearTimeout(t.wheel);else{if(n.k===e)return;t.mouse=[o,n.invert(o)],r.interrupt(this),t.start()}f(),t.wheel=setTimeout(function(){t.wheel=null,t.end()},E),t.zoom("mouse",g(P(I(n,e),t.mouse[0],t.mouse[1]),t.extent,M))}}function K(){if(!c&&z.apply(this,arguments)){var t=B(this,arguments),n=i.select(i.event.view).on("mousemove.zoom",function(){if(f(),!t.moved){var n=i.event.clientX-u,e=i.event.clientY-h;t.moved=n*n+e*e>D}t.zoom("mouse",g(P(t.that.__zoom,t.mouse[0]=i.mouse(t.that),t.mouse[1]),t.extent,M))},!0).on("mouseup.zoom",function(){n.on("mousemove.zoom mouseup.zoom",null),e.dragEnable(i.event.view,t.moved),f(),t.end()},!0),o=i.mouse(this),u=i.event.clientX,h=i.event.clientY;e.dragDisable(i.event.view),a(),t.mouse=[o,this.__zoom.invert(o)],r.interrupt(this),t.start()}}function O(){if(z.apply(this,arguments)){var t=this.__zoom,n=i.mouse(this),e=t.invert(n),o=t.k*(i.event.shiftKey?.5:2),r=g(P(I(t,o),n,e),_.apply(this,arguments),M);f(),T>0?i.select(this).transition().duration(T).call(j,r,n):i.select(this).call(V.transform,r)}}function W(){if(z.apply(this,arguments)){var n,e,o,u,h=B(this,arguments),s=i.event.changedTouches,c=s.length;for(a(),e=0;e<c;++e)o=s[e],u=[u=i.touch(this,s,o.identifier),this.__zoom.invert(u),o.identifier],h.touch0?h.touch1||(h.touch1=u):(h.touch0=u,n=!0);if(t&&(t=clearTimeout(t),!h.touch1))return h.end(),void((u=i.select(this).on("dblclick.zoom"))&&u.apply(this,arguments));n&&(t=setTimeout(function(){t=null},q),r.interrupt(this),h.start())}}function Z(){var n,e,o,r,u=B(this,arguments),h=i.event.changedTouches,s=h.length;for(f(),t&&(t=clearTimeout(t)),n=0;n<s;++n)e=h[n],o=i.touch(this,h,e.identifier),u.touch0&&u.touch0[2]===e.identifier?u.touch0[0]=o:u.touch1&&u.touch1[2]===e.identifier&&(u.touch1[0]=o);if(e=u.that.__zoom,u.touch1){var c=u.touch0[0],a=u.touch0[1],l=u.touch1[0],m=u.touch1[1],p=(p=l[0]-c[0])*p+(p=l[1]-c[1])*p,d=(d=m[0]-a[0])*d+(d=m[1]-a[1])*d;e=I(e,Math.sqrt(p/d)),o=[(c[0]+l[0])/2,(c[1]+l[1])/2],r=[(a[0]+m[0])/2,(a[1]+m[1])/2]}else{if(!u.touch0)return;o=u.touch0[0],r=u.touch0[1]}u.zoom("touch",g(P(e,o,r),u.extent,M))}function A(){var t,n,e=B(this,arguments),o=i.event.changedTouches,r=o.length;for(a(),c&&clearTimeout(c),c=setTimeout(function(){c=null},q),t=0;t<r;++t)n=o[t],e.touch0&&e.touch0[2]===n.identifier?delete e.touch0:e.touch1&&e.touch1[2]===n.identifier&&delete e.touch1;e.touch1&&!e.touch0&&(e.touch0=e.touch1,delete e.touch1),e.touch0?e.touch0[1]=this.__zoom.invert(e.touch0[0]):e.end()}return V.transform=function(t,n){var e=t.selection?t.selection():t;e.property("__zoom",p),t!==e?j(t,n):e.interrupt().each(function(){B(this,arguments).start().zoom(null,"function"==typeof n?n.apply(this,arguments):n).end()})},V.scaleBy=function(t,n){V.scaleTo(t,function(){return this.__zoom.k*("function"==typeof n?n.apply(this,arguments):n)})},V.scaleTo=function(t,n){V.transform(t,function(){var t=_.apply(this,arguments),e=this.__zoom,o=S(t),i=e.invert(o),r="function"==typeof n?n.apply(this,arguments):n;return g(P(I(e,r),o,i),t,M)})},V.translateBy=function(t,n,e){V.transform(t,function(){return g(this.__zoom.translate("function"==typeof n?n.apply(this,arguments):n,"function"==typeof e?e.apply(this,arguments):e),_.apply(this,arguments),M)})},V.translateTo=function(t,n,e){V.transform(t,function(){var t=_.apply(this,arguments),o=this.__zoom,i=S(t);return g(s.translate(i[0],i[1]).scale(o.k).translate("function"==typeof n?-n.apply(this,arguments):-n,"function"==typeof e?-e.apply(this,arguments):-e),t,M)})},G.prototype={start:function(){return 1==++this.active&&(this.index=Y.push(this)-1,this.emit("start")),this},zoom:function(t,n){return this.mouse&&"mouse"!==t&&(this.mouse[1]=n.invert(this.mouse[0])),this.touch0&&"touch"!==t&&(this.touch0[1]=n.invert(this.touch0[0])),this.touch1&&"touch"!==t&&(this.touch1[1]=n.invert(this.touch1[0])),this.that.__zoom=n,this.emit("zoom"),this},end:function(){return 0==--this.active&&(Y.splice(this.index,1),this.index=-1,this.emit("end")),this},emit:function(t){i.customEvent(new function(t,n,e){this.target=t,this.type=n,this.transform=e}(V,t,this.that.__zoom),X.apply,X,[t,this.that,this.args])}},V.wheelDelta=function(t){return arguments.length?(k="function"==typeof t?t:u(+t),V):k},V.filter=function(t){return arguments.length?(z="function"==typeof t?t:u(!!t),V):z},V.touchable=function(t){return arguments.length?(x="function"==typeof t?t:u(!!t),V):x},V.extent=function(t){return arguments.length?(_="function"==typeof t?t:u([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),V):_},V.scaleExtent=function(t){return arguments.length?(w[0]=+t[0],w[1]=+t[1],V):[w[0],w[1]]},V.translateExtent=function(t){return arguments.length?(M[0][0]=+t[0][0],M[1][0]=+t[1][0],M[0][1]=+t[0][1],M[1][1]=+t[1][1],V):[[M[0][0],M[0][1]],[M[1][0],M[1][1]]]},V.constrain=function(t){return arguments.length?(g=t,V):g},V.duration=function(t){return arguments.length?(T=+t,V):T},V.interpolate=function(t){return arguments.length?(b=t,V):b},V.on=function(){var t=X.on.apply(X,arguments);return t===X?V:t},V.clickDistance=function(t){return arguments.length?(D=(t=+t)*t,V):Math.sqrt(D)},V},t.zoomTransform=c,t.zoomIdentity=s,Object.defineProperty(t,"__esModule",{value:!0})});

},{"d3-dispatch":27,"d3-drag":28,"d3-interpolate":36,"d3-selection":43,"d3-transition":48}],51:[function(require,module,exports){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var d3Array=require("d3-array"),d3Axis=require("d3-axis"),d3Brush=require("d3-brush"),d3Chord=require("d3-chord"),d3Collection=require("d3-collection"),d3Color=require("d3-color"),d3Contour=require("d3-contour"),d3Dispatch=require("d3-dispatch"),d3Drag=require("d3-drag"),d3Dsv=require("d3-dsv"),d3Ease=require("d3-ease"),d3Fetch=require("d3-fetch"),d3Force=require("d3-force"),d3Format=require("d3-format"),d3Geo=require("d3-geo"),d3Hierarchy=require("d3-hierarchy"),d3Interpolate=require("d3-interpolate"),d3Path=require("d3-path"),d3Polygon=require("d3-polygon"),d3Quadtree=require("d3-quadtree"),d3Random=require("d3-random"),d3Scale=require("d3-scale"),d3ScaleChromatic=require("d3-scale-chromatic"),d3Selection=require("d3-selection"),d3Shape=require("d3-shape"),d3Time=require("d3-time"),d3TimeFormat=require("d3-time-format"),d3Timer=require("d3-timer"),d3Transition=require("d3-transition"),d3Voronoi=require("d3-voronoi"),d3Zoom=require("d3-zoom"),version="5.4.0";Object.keys(d3Array).forEach(function(e){exports[e]=d3Array[e]}),Object.keys(d3Axis).forEach(function(e){exports[e]=d3Axis[e]}),Object.keys(d3Brush).forEach(function(e){exports[e]=d3Brush[e]}),Object.keys(d3Chord).forEach(function(e){exports[e]=d3Chord[e]}),Object.keys(d3Collection).forEach(function(e){exports[e]=d3Collection[e]}),Object.keys(d3Color).forEach(function(e){exports[e]=d3Color[e]}),Object.keys(d3Contour).forEach(function(e){exports[e]=d3Contour[e]}),Object.keys(d3Dispatch).forEach(function(e){exports[e]=d3Dispatch[e]}),Object.keys(d3Drag).forEach(function(e){exports[e]=d3Drag[e]}),Object.keys(d3Dsv).forEach(function(e){exports[e]=d3Dsv[e]}),Object.keys(d3Ease).forEach(function(e){exports[e]=d3Ease[e]}),Object.keys(d3Fetch).forEach(function(e){exports[e]=d3Fetch[e]}),Object.keys(d3Force).forEach(function(e){exports[e]=d3Force[e]}),Object.keys(d3Format).forEach(function(e){exports[e]=d3Format[e]}),Object.keys(d3Geo).forEach(function(e){exports[e]=d3Geo[e]}),Object.keys(d3Hierarchy).forEach(function(e){exports[e]=d3Hierarchy[e]}),Object.keys(d3Interpolate).forEach(function(e){exports[e]=d3Interpolate[e]}),Object.keys(d3Path).forEach(function(e){exports[e]=d3Path[e]}),Object.keys(d3Polygon).forEach(function(e){exports[e]=d3Polygon[e]}),Object.keys(d3Quadtree).forEach(function(e){exports[e]=d3Quadtree[e]}),Object.keys(d3Random).forEach(function(e){exports[e]=d3Random[e]}),Object.keys(d3Scale).forEach(function(e){exports[e]=d3Scale[e]}),Object.keys(d3ScaleChromatic).forEach(function(e){exports[e]=d3ScaleChromatic[e]}),Object.keys(d3Selection).forEach(function(e){exports[e]=d3Selection[e]}),Object.keys(d3Shape).forEach(function(e){exports[e]=d3Shape[e]}),Object.keys(d3Time).forEach(function(e){exports[e]=d3Time[e]}),Object.keys(d3TimeFormat).forEach(function(e){exports[e]=d3TimeFormat[e]}),Object.keys(d3Timer).forEach(function(e){exports[e]=d3Timer[e]}),Object.keys(d3Transition).forEach(function(e){exports[e]=d3Transition[e]}),Object.keys(d3Voronoi).forEach(function(e){exports[e]=d3Voronoi[e]}),Object.keys(d3Zoom).forEach(function(e){exports[e]=d3Zoom[e]}),exports.version=version,Object.defineProperty(exports,"event",{get:function(){return d3Selection.event}});

},{"d3-array":20,"d3-axis":21,"d3-brush":22,"d3-chord":23,"d3-collection":24,"d3-color":25,"d3-contour":26,"d3-dispatch":27,"d3-drag":28,"d3-dsv":29,"d3-ease":30,"d3-fetch":31,"d3-force":32,"d3-format":33,"d3-geo":34,"d3-hierarchy":35,"d3-interpolate":36,"d3-path":37,"d3-polygon":38,"d3-quadtree":39,"d3-random":40,"d3-scale":42,"d3-scale-chromatic":41,"d3-selection":43,"d3-shape":44,"d3-time":46,"d3-time-format":45,"d3-timer":47,"d3-transition":48,"d3-voronoi":49,"d3-zoom":50}],52:[function(require,module,exports){
!function(e,t,n){if(e){for(var r,i={8:"backspace",9:"tab",13:"enter",16:"shift",17:"ctrl",18:"alt",20:"capslock",27:"esc",32:"space",33:"pageup",34:"pagedown",35:"end",36:"home",37:"left",38:"up",39:"right",40:"down",45:"ins",46:"del",91:"meta",93:"meta",224:"meta"},o={106:"*",107:"+",109:"-",110:".",111:"/",186:";",187:"=",188:",",189:"-",190:".",191:"/",192:"`",219:"[",220:"\\",221:"]",222:"'"},a={"~":"`","!":"1","@":"2","#":"3",$:"4","%":"5","^":"6","&":"7","*":"8","(":"9",")":"0",_:"-","+":"=",":":";",'"':"'","<":",",">":".","?":"/","|":"\\"},c={option:"alt",command:"meta",return:"enter",escape:"esc",plus:"+",mod:/Mac|iPod|iPhone|iPad/.test(navigator.platform)?"meta":"ctrl"},s=1;s<20;++s)i[111+s]="f"+s;for(s=0;s<=9;++s)i[s+96]=s.toString();d.prototype.bind=function(e,t,n){return e=e instanceof Array?e:[e],this._bindMultiple.call(this,e,t,n),this},d.prototype.unbind=function(e,t){return this.bind.call(this,e,function(){},t)},d.prototype.trigger=function(e,t){return this._directMap[e+":"+t]&&this._directMap[e+":"+t]({},e),this},d.prototype.reset=function(){return this._callbacks={},this._directMap={},this},d.prototype.stopCallback=function(e,n){return!((" "+n.className+" ").indexOf(" mousetrap ")>-1)&&(!function e(n,r){return null!==n&&n!==t&&(n===r||e(n.parentNode,r))}(n,this.target)&&("INPUT"==n.tagName||"SELECT"==n.tagName||"TEXTAREA"==n.tagName||n.isContentEditable))},d.prototype.handleKey=function(){return this._handleKey.apply(this,arguments)},d.addKeycodes=function(e){for(var t in e)e.hasOwnProperty(t)&&(i[t]=e[t]);r=null},d.init=function(){var e=d(t);for(var n in e)"_"!==n.charAt(0)&&(d[n]=function(t){return function(){return e[t].apply(e,arguments)}}(n))},d.init(),e.Mousetrap=d,"undefined"!=typeof module&&module.exports&&(module.exports=d),"function"==typeof define&&define.amd&&define(function(){return d})}function l(e,t,n){e.addEventListener?e.addEventListener(t,n,!1):e.attachEvent("on"+t,n)}function u(e){if("keypress"==e.type){var t=String.fromCharCode(e.which);return e.shiftKey||(t=t.toLowerCase()),t}return i[e.which]?i[e.which]:o[e.which]?o[e.which]:String.fromCharCode(e.which).toLowerCase()}function f(e){return"shift"==e||"ctrl"==e||"alt"==e||"meta"==e}function p(e,t,n){return n||(n=function(){if(!r)for(var e in r={},i)e>95&&e<112||i.hasOwnProperty(e)&&(r[i[e]]=e);return r}()[e]?"keydown":"keypress"),"keypress"==n&&t.length&&(n="keydown"),n}function h(e,t){var n,r,i,o=[];for(n=function(e){return"+"===e?["+"]:(e=e.replace(/\+{2}/g,"+plus")).split("+")}(e),i=0;i<n.length;++i)r=n[i],c[r]&&(r=c[r]),t&&"keypress"!=t&&a[r]&&(r=a[r],o.push("shift")),f(r)&&o.push(r);return{key:r,modifiers:o,action:t=p(r,o,t)}}function d(e){var n=this;if(e=e||t,!(n instanceof d))return new d(e);n.target=e,n._callbacks={},n._directMap={};var r,i={},o=!1,a=!1,c=!1;function s(e){e=e||{};var t,n=!1;for(t in i)e[t]?n=!0:i[t]=0;n||(c=!1)}function p(e,t,r,o,a,c){var s,l,u,p,h=[],d=r.type;if(!n._callbacks[e])return[];for("keyup"==d&&f(e)&&(t=[e]),s=0;s<n._callbacks[e].length;++s)if(l=n._callbacks[e][s],(o||!l.seq||i[l.seq]==l.level)&&d==l.action&&("keypress"==d&&!r.metaKey&&!r.ctrlKey||(u=t,p=l.modifiers,u.sort().join(",")===p.sort().join(",")))){var y=!o&&l.combo==a,m=o&&l.seq==o&&l.level==c;(y||m)&&n._callbacks[e].splice(s,1),h.push(l)}return h}function y(e,t,r,i){n.stopCallback(t,t.target||t.srcElement,r,i)||!1===e(t,r)&&(function(e){e.preventDefault?e.preventDefault():e.returnValue=!1}(t),function(e){e.stopPropagation?e.stopPropagation():e.cancelBubble=!0}(t))}function m(e){"number"!=typeof e.which&&(e.which=e.keyCode);var t=u(e);t&&("keyup"!=e.type||o!==t?n.handleKey(t,function(e){var t=[];return e.shiftKey&&t.push("shift"),e.altKey&&t.push("alt"),e.ctrlKey&&t.push("ctrl"),e.metaKey&&t.push("meta"),t}(e),e):o=!1)}function k(e,t,n,a){function l(t){return function(){c=t,++i[e],clearTimeout(r),r=setTimeout(s,1e3)}}function f(t){y(n,t,e),"keyup"!==a&&(o=u(t)),setTimeout(s,10)}i[e]=0;for(var p=0;p<t.length;++p){var d=p+1===t.length?f:l(a||h(t[p+1]).action);v(t[p],d,a,e,p)}}function v(e,t,r,i,o){n._directMap[e+":"+r]=t;var a,c=(e=e.replace(/\s+/g," ")).split(" ");c.length>1?k(e,c,t,r):(a=h(e,r),n._callbacks[a.key]=n._callbacks[a.key]||[],p(a.key,a.modifiers,{type:a.action},i,e,o),n._callbacks[a.key][i?"unshift":"push"]({callback:t,modifiers:a.modifiers,action:a.action,seq:i,level:o,combo:e}))}n._handleKey=function(e,t,n){var r,i=p(e,t,n),o={},l=0,u=!1;for(r=0;r<i.length;++r)i[r].seq&&(l=Math.max(l,i[r].level));for(r=0;r<i.length;++r)if(i[r].seq){if(i[r].level!=l)continue;u=!0,o[i[r].seq]=1,y(i[r].callback,n,i[r].combo,i[r].seq)}else u||y(i[r].callback,n,i[r].combo);var h="keypress"==n.type&&a;n.type!=c||f(e)||h||s(o),a=u&&"keydown"==n.type},n._bindMultiple=function(e,t,n){for(var r=0;r<e.length;++r)v(e[r],t,n)},l(e,"keypress",m),l(e,"keydown",m),l(e,"keyup",m)}}("undefined"!=typeof window?window:null,"undefined"!=typeof window?document:null);

},{}]},{},[18])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
